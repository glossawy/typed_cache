# Generated from lib/typed_cache/clock.rb with RBS::Inline

module TypedCache
  module Clock
    # @rbs generic R
    class Measured[R] < Dry::Struct
      def start: () -> Float

      def end: () -> Float

      def result: () -> [ R ]

      def initialize: (start: Float, end: Float, result: [ R ]) -> void

      # : -> Float
      def duration: () -> Float
    end

    # @rbs [R]() { () -> R } -> Measured[R]
    def self.measure: [R] () { () -> R } -> Measured[R]

    # @rbs () -> Time
    def self.now: () -> Time
  end
end
