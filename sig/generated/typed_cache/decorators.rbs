# Generated from lib/typed_cache/decorators.rb with RBS::Inline

module TypedCache
  # Holds store decorators (e.g., instrumentation wrappers) that can be composed
  # by the CacheBuilder. Decorators must conform to the same API as the wrapped
  # store (see `TypedCache::Store`) and accept the store instance as their first
  # constructor argument.
  #
  # Example:
  #   Decorators.register(:my_decorator, MyDecorator)
  #   cache = TypedCache.builder
  #              .with_backend { |reg, ns| reg.resolve(:memory, ns).value }
  #              .with_decorator(:my_decorator)
  #              .build.value
  module Decorators
    # @api private
    # Default decorator set â€“ starts with instrumentation only, but this registry
    # lets end-users register their own via `Decorators.register`.
    REGISTRY: Registry[Decorator]

    extend Forwardable

    # @api private
    # @rbs () -> Registry[Store[untyped]]
    def self.registry: () -> Registry[Store[untyped]]
  end
end
