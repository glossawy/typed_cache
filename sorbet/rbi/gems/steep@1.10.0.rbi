# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `steep` gem.
# Please instead update this file by running `bin/tapioca gem steep`.


# source://steep//lib/steep.rb#314
module GCCounter
  private

  # source://steep//lib/steep.rb#317
  def count_objects(title, regexp = T.unsafe(nil), skip: T.unsafe(nil)); end

  class << self
    # source://steep//lib/steep.rb#317
    def count_objects(title, regexp = T.unsafe(nil), skip: T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/method_name.rb#24
class Object < ::BasicObject
  include ::Kernel
  include ::PP::ObjectMixin

  # source://steep//lib/steep/method_name.rb#25
  def MethodName(string); end
end

module Parser::Source; end

# source://steep//lib/steep/range_extension.rb#16
class Parser::Source::Range
  # source://parser/3.3.9.0/lib/parser/source/range.rb#37
  def initialize(source_buffer, begin_pos, end_pos); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#301
  def <=>(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#193
  def adjust(begin_pos: T.unsafe(nil), end_pos: T.unsafe(nil)); end

  # source://steep//lib/steep/range_extension.rb#17
  def as_lsp_range; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#55
  def begin; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#30
  def begin_pos; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#92
  def column; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#114
  def column_range; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#274
  def contained?(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#262
  def contains?(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#286
  def crossing?(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#236
  def disjoint?(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#294
  def empty?; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#63
  def end; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#30
  def end_pos; end

  def eql?(_arg0); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#83
  def first_line; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#313
  def hash; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#320
  def inspect; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#220
  def intersect(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#141
  def is?(*what); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#209
  def join(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#106
  def last_column; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#99
  def last_line; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#70
  def length; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#83
  def line; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#250
  def overlaps?(other); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#201
  def resize(new_size); end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#70
  def size; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#132
  def source; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#29
  def source_buffer; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#125
  def source_line; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#148
  def to_a; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#155
  def to_range; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#173
  def to_s; end

  # source://parser/3.3.9.0/lib/parser/source/range.rb#184
  def with(begin_pos: T.unsafe(nil), end_pos: T.unsafe(nil)); end
end

# source://steep//lib/steep/range_extension.rb#1
class RBS::Location
  def initialize(_arg0, _arg1, _arg2); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#71
  def ==(other); end

  def [](_arg0); end
  def _add_optional_child(_arg0, _arg1, _arg2); end
  def _add_optional_no_child(_arg0); end
  def _add_required_child(_arg0, _arg1, _arg2); end
  def _optional_keys; end
  def _required_keys; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#102
  def add_optional_child(name, range); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#98
  def add_required_child(name, range); end

  def aref(_arg0); end

  # source://steep//lib/steep/range_extension.rb#2
  def as_lsp_range; end

  def buffer; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#110
  def each_optional_key(&block); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#118
  def each_required_key(&block); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#47
  def end_column; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#43
  def end_line; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#55
  def end_loc; end

  def end_pos; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#5
  def inspect; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#126
  def key?(name); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#31
  def name; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#130
  def optional_key?(name); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#59
  def range; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#134
  def required_key?(name); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#63
  def source; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#39
  def start_column; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#35
  def start_line; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#51
  def start_loc; end

  def start_pos; end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#78
  def to_json(state = T.unsafe(nil)); end

  # source://rbs/3.9.4/lib/rbs/location_aux.rb#67
  def to_s; end

  private

  def initialize_copy(_arg0); end

  class << self
    # source://rbs/3.9.4/lib/rbs/location_aux.rb#16
    def new(buffer_ = T.unsafe(nil), start_pos_ = T.unsafe(nil), end_pos_ = T.unsafe(nil), buffer: T.unsafe(nil), start_pos: T.unsafe(nil), end_pos: T.unsafe(nil)); end

    # source://rbs/3.9.4/lib/rbs/location_aux.rb#94
    def to_string(location, default: T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/version.rb#1
module Steep
  class << self
    # @return [Boolean]
    #
    # source://steep//lib/steep.rb#235
    def can_fork?; end

    # source://steep//lib/steep.rb#226
    def log_error(exn, message: T.unsafe(nil)); end

    # source://steep//lib/steep.rb#191
    def log_output; end

    # source://steep//lib/steep.rb#195
    def log_output=(output); end

    # source://steep//lib/steep.rb#167
    def logger; end

    # source://steep//lib/steep.rb#211
    def measure(message, level: T.unsafe(nil), threshold: T.unsafe(nil)); end

    # source://steep//lib/steep.rb#280
    def measure2(message, level: T.unsafe(nil)); end

    # source://steep//lib/steep.rb#175
    def new_logger(output, prev_level); end

    # source://steep//lib/steep.rb#171
    def ui_logger; end
  end
end

# source://steep//lib/steep/ast/types/shared_instance.rb#2
module Steep::AST; end

# source://steep//lib/steep/ast/annotation.rb#3
module Steep::AST::Annotation; end

# source://steep//lib/steep/ast/annotation.rb#48
class Steep::AST::Annotation::BlockType < ::Steep::AST::Annotation::Typed; end

# source://steep//lib/steep/ast/annotation.rb#52
class Steep::AST::Annotation::BreakType < ::Steep::AST::Annotation::Typed; end

# source://steep//lib/steep/ast/annotation/collection.rb#4
class Steep::AST::Annotation::Collection
  # @return [Collection] a new instance of Collection
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#22
  def initialize(annotations:, factory:, context:); end

  # source://steep//lib/steep/ast/annotation/collection.rb#65
  def absolute_type(type); end

  # Returns the value of attribute annotations.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#5
  def annotations; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#158
  def any?(&block); end

  # source://steep//lib/steep/ast/annotation/collection.rb#88
  def block_type; end

  # Returns the value of attribute block_type_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#13
  def block_type_annotation; end

  # source://steep//lib/steep/ast/annotation/collection.rb#108
  def break_type; end

  # Returns the value of attribute break_type_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#20
  def break_type_annotation; end

  # Returns the value of attribute const_type_annotations.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#10
  def const_type_annotations; end

  # source://steep//lib/steep/ast/annotation/collection.rb#124
  def const_types; end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#7
  def context; end

  # Returns the value of attribute dynamic_annotations.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#19
  def dynamic_annotations; end

  # Returns the value of attribute factory.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#6
  def factory; end

  # Returns the value of attribute implement_module_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#18
  def implement_module_annotation; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#166
  def include?(obj); end

  # source://steep//lib/steep/ast/annotation/collection.rb#130
  def instance_dynamics; end

  # source://steep//lib/steep/ast/annotation/collection.rb#100
  def instance_type; end

  # Returns the value of attribute instance_type_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#16
  def instance_type_annotation; end

  # Returns the value of attribute ivar_type_annotations.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#11
  def ivar_type_annotations; end

  # source://steep//lib/steep/ast/annotation/collection.rb#118
  def ivar_types; end

  # source://steep//lib/steep/ast/annotation/collection.rb#112
  def lvar_types; end

  # source://steep//lib/steep/ast/annotation/collection.rb#142
  def merge_block_annotations(annotations); end

  # source://steep//lib/steep/ast/annotation/collection.rb#82
  def method_type(name); end

  # Returns the value of attribute method_type_annotations.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#12
  def method_type_annotations; end

  # source://steep//lib/steep/ast/annotation/collection.rb#136
  def module_dynamics; end

  # source://steep//lib/steep/ast/annotation/collection.rb#104
  def module_type; end

  # Returns the value of attribute module_type_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#17
  def module_type_annotation; end

  # source://steep//lib/steep/ast/annotation/collection.rb#92
  def return_type; end

  # Returns the value of attribute return_type_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#14
  def return_type_annotation; end

  # source://steep//lib/steep/ast/annotation/collection.rb#96
  def self_type; end

  # Returns the value of attribute self_type_annotation.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#15
  def self_type_annotation; end

  # source://steep//lib/steep/ast/annotation/collection.rb#162
  def size; end

  # source://steep//lib/steep/ast/annotation/collection.rb#71
  def var_type(lvar: T.unsafe(nil), ivar: T.unsafe(nil), const: T.unsafe(nil)); end

  # Returns the value of attribute var_type_annotations.
  #
  # source://steep//lib/steep/ast/annotation/collection.rb#9
  def var_type_annotations; end
end

# source://steep//lib/steep/ast/annotation.rb#56
class Steep::AST::Annotation::ConstType < ::Steep::AST::Annotation::Named; end

# source://steep//lib/steep/ast/annotation.rb#94
class Steep::AST::Annotation::Dynamic
  include ::Steep::AST::Annotation::Located

  # @return [Dynamic] a new instance of Dynamic
  #
  # source://steep//lib/steep/ast/annotation.rb#125
  def initialize(names:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/ast/annotation.rb#130
  def ==(other); end

  # Returns the value of attribute names.
  #
  # source://steep//lib/steep/ast/annotation.rb#123
  def names; end
end

# source://steep//lib/steep/ast/annotation.rb#95
class Steep::AST::Annotation::Dynamic::Name
  # @return [Name] a new instance of Name
  #
  # source://steep//lib/steep/ast/annotation.rb#100
  def initialize(name:, kind:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/ast/annotation.rb#114
  def ==(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/annotation.rb#106
  def instance_method?; end

  # Returns the value of attribute kind.
  #
  # source://steep//lib/steep/ast/annotation.rb#96
  def kind; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/annotation.rb#98
  def location; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/annotation.rb#110
  def module_method?; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/ast/annotation.rb#97
  def name; end
end

# source://steep//lib/steep/ast/annotation.rb#59
class Steep::AST::Annotation::Implements
  include ::Steep::AST::Annotation::Located

  # @return [Implements] a new instance of Implements
  #
  # source://steep//lib/steep/ast/annotation.rb#84
  def initialize(name:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/ast/annotation.rb#89
  def ==(other); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/ast/annotation.rb#82
  def name; end
end

# source://steep//lib/steep/ast/annotation.rb#60
class Steep::AST::Annotation::Implements::Module
  # @return [Module] a new instance of Module
  #
  # source://steep//lib/steep/ast/annotation.rb#64
  def initialize(name:, args:); end

  # source://steep//lib/steep/ast/annotation.rb#69
  def ==(other); end

  # Returns the value of attribute args.
  #
  # source://steep//lib/steep/ast/annotation.rb#62
  def args; end

  # source://steep//lib/steep/ast/annotation.rb#69
  def eql?(other); end

  # source://steep//lib/steep/ast/annotation.rb#75
  def hash; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/ast/annotation.rb#61
  def name; end
end

# source://steep//lib/steep/ast/annotation.rb#50
class Steep::AST::Annotation::InstanceType < ::Steep::AST::Annotation::Typed; end

# source://steep//lib/steep/ast/annotation.rb#57
class Steep::AST::Annotation::IvarType < ::Steep::AST::Annotation::Named; end

# source://steep//lib/steep/ast/annotation.rb#4
module Steep::AST::Annotation::Located
  # source://steep//lib/steep/ast/annotation.rb#7
  def line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/annotation.rb#5
  def location; end
end

# source://steep//lib/steep/ast/annotation.rb#54
class Steep::AST::Annotation::MethodType < ::Steep::AST::Annotation::Named; end

# source://steep//lib/steep/ast/annotation.rb#51
class Steep::AST::Annotation::ModuleType < ::Steep::AST::Annotation::Typed; end

# source://steep//lib/steep/ast/annotation.rb#12
class Steep::AST::Annotation::Named
  include ::Steep::AST::Annotation::Located

  # @return [Named] a new instance of Named
  #
  # source://steep//lib/steep/ast/annotation.rb#18
  def initialize(name:, type:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/ast/annotation.rb#24
  def ==(other); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/ast/annotation.rb#15
  def name; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/ast/annotation.rb#16
  def type; end
end

# source://steep//lib/steep/ast/annotation.rb#47
class Steep::AST::Annotation::ReturnType < ::Steep::AST::Annotation::Typed; end

# source://steep//lib/steep/ast/annotation.rb#49
class Steep::AST::Annotation::SelfType < ::Steep::AST::Annotation::Typed; end

# source://steep//lib/steep/ast/annotation.rb#31
class Steep::AST::Annotation::Typed
  include ::Steep::AST::Annotation::Located

  # @return [Typed] a new instance of Typed
  #
  # source://steep//lib/steep/ast/annotation.rb#36
  def initialize(type:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/ast/annotation.rb#41
  def ==(other); end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/ast/annotation.rb#34
  def type; end
end

# source://steep//lib/steep/ast/annotation.rb#55
class Steep::AST::Annotation::VarType < ::Steep::AST::Annotation::Named; end

# source://steep//lib/steep/ast/builtin.rb#3
module Steep::AST::Builtin
  class << self
    # source://steep//lib/steep/ast/builtin.rb#75
    def any_type; end

    # source://steep//lib/steep/ast/builtin.rb#79
    def bool_type; end

    # source://steep//lib/steep/ast/builtin.rb#83
    def bottom_type; end

    # source://steep//lib/steep/ast/builtin.rb#99
    def false_type; end

    # source://steep//lib/steep/ast/builtin.rb#71
    def nil_type; end

    # source://steep//lib/steep/ast/builtin.rb#91
    def optional(type); end

    # source://steep//lib/steep/ast/builtin.rb#87
    def top_type; end

    # source://steep//lib/steep/ast/builtin.rb#95
    def true_type; end
  end
end

# source://steep//lib/steep/ast/builtin.rb#54
Steep::AST::Builtin::Array = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#53
Steep::AST::Builtin::BasicObject = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#58
Steep::AST::Builtin::Class = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#64
Steep::AST::Builtin::FalseClass = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#60
Steep::AST::Builtin::Float = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#56
Steep::AST::Builtin::Hash = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#59
Steep::AST::Builtin::Integer = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#68
Steep::AST::Builtin::Kernel = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#69
Steep::AST::Builtin::Method = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#57
Steep::AST::Builtin::Module = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#66
Steep::AST::Builtin::NilClass = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#52
Steep::AST::Builtin::Object = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#67
Steep::AST::Builtin::Proc = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#55
Steep::AST::Builtin::Range = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#65
Steep::AST::Builtin::Regexp = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#61
Steep::AST::Builtin::String = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#62
Steep::AST::Builtin::Symbol = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#63
Steep::AST::Builtin::TrueClass = T.let(T.unsafe(nil), Steep::AST::Builtin::Type)

# source://steep//lib/steep/ast/builtin.rb#4
class Steep::AST::Builtin::Type
  # @return [Type] a new instance of Type
  #
  # source://steep//lib/steep/ast/builtin.rb#8
  def initialize(module_name, arity: T.unsafe(nil)); end

  # Returns the value of attribute arity.
  #
  # source://steep//lib/steep/ast/builtin.rb#6
  def arity; end

  # source://steep//lib/steep/ast/builtin.rb#13
  def instance_type(*args, fill_untyped: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/builtin.rb#28
  def instance_type?(type, args: T.unsafe(nil)); end

  # Returns the value of attribute module_name.
  #
  # source://steep//lib/steep/ast/builtin.rb#5
  def module_name; end

  # source://steep//lib/steep/ast/builtin.rb#24
  def module_type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/builtin.rb#43
  def module_type?(type); end
end

# source://steep//lib/steep/ast/ignore.rb#3
module Steep::AST::Ignore
  class << self
    # source://steep//lib/steep/ast/ignore.rb#93
    def parse(comment, buffer); end
  end
end

# source://steep//lib/steep/ast/ignore.rb#4
class Steep::AST::Ignore::BufferScanner
  # @return [BufferScanner] a new instance of BufferScanner
  #
  # source://steep//lib/steep/ast/ignore.rb#7
  def initialize(location); end

  # source://steep//lib/steep/ast/ignore.rb#17
  def charpos; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/ignore.rb#33
  def eos?; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/ignore.rb#5
  def location; end

  # source://steep//lib/steep/ast/ignore.rb#13
  def offset; end

  # source://steep//lib/steep/ast/ignore.rb#21
  def scan(regexp); end

  # Returns the value of attribute scanner.
  #
  # source://steep//lib/steep/ast/ignore.rb#5
  def scanner; end

  # source://steep//lib/steep/ast/ignore.rb#29
  def skip(regexp); end
end

# source://steep//lib/steep/ast/ignore.rb#51
class Steep::AST::Ignore::IgnoreEnd
  # @return [IgnoreEnd] a new instance of IgnoreEnd
  #
  # source://steep//lib/steep/ast/ignore.rb#54
  def initialize(comment, location); end

  # Returns the value of attribute comment.
  #
  # source://steep//lib/steep/ast/ignore.rb#52
  def comment; end

  # source://steep//lib/steep/ast/ignore.rb#59
  def line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/ignore.rb#52
  def location; end
end

# source://steep//lib/steep/ast/ignore.rb#64
class Steep::AST::Ignore::IgnoreLine
  # @return [IgnoreLine] a new instance of IgnoreLine
  #
  # source://steep//lib/steep/ast/ignore.rb#67
  def initialize(comment, diagnostics, location); end

  # Returns the value of attribute comment.
  #
  # source://steep//lib/steep/ast/ignore.rb#65
  def comment; end

  # source://steep//lib/steep/ast/ignore.rb#77
  def ignored_diagnostics; end

  # source://steep//lib/steep/ast/ignore.rb#73
  def line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/ignore.rb#65
  def location; end

  # Returns the value of attribute raw_diagnostics.
  #
  # source://steep//lib/steep/ast/ignore.rb#65
  def raw_diagnostics; end
end

# source://steep//lib/steep/ast/ignore.rb#38
class Steep::AST::Ignore::IgnoreStart
  # @return [IgnoreStart] a new instance of IgnoreStart
  #
  # source://steep//lib/steep/ast/ignore.rb#41
  def initialize(comment, location); end

  # Returns the value of attribute comment.
  #
  # source://steep//lib/steep/ast/ignore.rb#39
  def comment; end

  # source://steep//lib/steep/ast/ignore.rb#46
  def line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/ignore.rb#39
  def location; end
end

# source://steep//lib/steep/ast/node/type_assertion.rb#3
module Steep::AST::Node; end

# source://steep//lib/steep/ast/node/type_application.rb#4
class Steep::AST::Node::TypeApplication
  # @return [TypeApplication] a new instance of TypeApplication
  #
  # source://steep//lib/steep/ast/node/type_application.rb#7
  def initialize(location); end

  # source://steep//lib/steep/ast/node/type_application.rb#19
  def line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/node/type_application.rb#5
  def location; end

  # source://steep//lib/steep/ast/node/type_application.rb#11
  def node; end

  # source://steep//lib/steep/ast/node/type_application.rb#15
  def set_node(node); end

  # source://steep//lib/steep/ast/node/type_application.rb#23
  def source; end

  # source://steep//lib/steep/ast/node/type_application.rb#75
  def type_location; end

  # source://steep//lib/steep/ast/node/type_application.rb#71
  def type_str; end

  # source://steep//lib/steep/ast/node/type_application.rb#27
  def types(context, subtyping, type_vars); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/node/type_application.rb#62
  def types?(context, subtyping, type_vars); end

  class << self
    # source://steep//lib/steep/ast/node/type_application.rb#80
    def parse(location); end
  end
end

# source://steep//lib/steep/ast/node/type_assertion.rb#4
class Steep::AST::Node::TypeAssertion
  # @return [TypeAssertion] a new instance of TypeAssertion
  #
  # source://steep//lib/steep/ast/node/type_assertion.rb#7
  def initialize(location); end

  # source://steep//lib/steep/ast/node/type_assertion.rb#15
  def line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/ast/node/type_assertion.rb#5
  def location; end

  # source://steep//lib/steep/ast/node/type_assertion.rb#11
  def source; end

  # source://steep//lib/steep/ast/node/type_assertion.rb#19
  def type(context, subtyping, type_vars); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/node/type_assertion.rb#48
  def type?(context, subtyping, type_vars); end

  # source://steep//lib/steep/ast/node/type_assertion.rb#63
  def type_location; end

  # source://steep//lib/steep/ast/node/type_assertion.rb#59
  def type_str; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/node/type_assertion.rb#41
  def type_syntax?; end

  class << self
    # source://steep//lib/steep/ast/node/type_assertion.rb#68
    def parse(location); end
  end
end

# source://steep//lib/steep/ast/types/shared_instance.rb#3
module Steep::AST::Types; end

# source://steep//lib/steep/ast/types/any.rb#4
class Steep::AST::Types::Any
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/any.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/any.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/any.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/any.rb#29
  def level; end

  # source://steep//lib/steep/ast/types/any.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/any.rb#21
  def to_s; end
end

# source://steep//lib/steep/ast/types/boolean.rb#4
class Steep::AST::Types::Boolean
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/boolean.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/boolean.rb#33
  def back_type; end

  # source://steep//lib/steep/ast/types/boolean.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/boolean.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/boolean.rb#29
  def level; end

  # source://steep//lib/steep/ast/types/boolean.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/boolean.rb#21
  def to_s; end
end

# source://steep//lib/steep/ast/types/bot.rb#4
class Steep::AST::Types::Bot
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/bot.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/bot.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/bot.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/bot.rb#29
  def level; end

  # source://steep//lib/steep/ast/types/bot.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/bot.rb#21
  def to_s; end
end

# source://steep//lib/steep/ast/types/class.rb#4
class Steep::AST::Types::Class
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/class.rb#11
  def ==(other); end

  # source://steep//lib/steep/ast/types/class.rb#11
  def eql?(other); end

  # source://steep//lib/steep/ast/types/class.rb#31
  def free_variables; end

  # source://steep//lib/steep/ast/types/class.rb#15
  def hash; end

  # source://steep//lib/steep/ast/types/class.rb#37
  def level; end

  # source://steep//lib/steep/ast/types/class.rb#21
  def subst(s); end

  # source://steep//lib/steep/ast/types/class.rb#7
  def to_s; end
end

# source://steep//lib/steep/ast/types/factory.rb#4
class Steep::AST::Types::Factory
  # @return [Factory] a new instance of Factory
  #
  # source://steep//lib/steep/ast/types/factory.rb#15
  def initialize(builder:); end

  # source://steep//lib/steep/ast/types/factory.rb#465
  def absolute_type(type, context:); end

  # source://steep//lib/steep/ast/types/factory.rb#472
  def absolute_type_name(type_name, context:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/types/factory.rb#457
  def class_name?(type_name); end

  # source://steep//lib/steep/ast/types/factory.rb#357
  def deep_expand_alias(type, recursive: T.unsafe(nil)); end

  # Returns the value of attribute definition_builder.
  #
  # source://steep//lib/steep/ast/types/factory.rb#5
  def definition_builder; end

  # source://steep//lib/steep/ast/types/factory.rb#461
  def env; end

  # source://steep//lib/steep/ast/types/factory.rb#348
  def expand_alias(type); end

  # source://steep//lib/steep/ast/types/factory.rb#375
  def flatten_union(type, acc = T.unsafe(nil)); end

  # source://steep//lib/steep/ast/types/factory.rb#239
  def function_1(func); end

  # source://steep//lib/steep/ast/types/factory.rb#9
  def inspect; end

  # source://steep//lib/steep/ast/types/factory.rb#476
  def instance_type(type_name, args: T.unsafe(nil)); end

  # source://steep//lib/steep/ast/types/factory.rb#301
  def method_type(method_type); end

  # source://steep//lib/steep/ast/types/factory.rb#324
  def method_type_1(method_type); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/types/factory.rb#453
  def module_name?(type_name); end

  # source://steep//lib/steep/ast/types/factory.rb#39
  def normalize_args(type_name, args); end

  # source://steep//lib/steep/ast/types/factory.rb#511
  def normalize_type(type); end

  # source://steep//lib/steep/ast/types/factory.rb#259
  def params(type); end

  # source://steep//lib/steep/ast/types/factory.rb#386
  def partition_union(type); end

  # source://steep//lib/steep/ast/types/factory.rb#491
  def try_instance_type(type); end

  # source://steep//lib/steep/ast/types/factory.rb#502
  def try_singleton_type(type); end

  # source://steep//lib/steep/ast/types/factory.rb#62
  def type(type); end

  # source://steep//lib/steep/ast/types/factory.rb#152
  def type_1(type); end

  # source://steep//lib/steep/ast/types/factory.rb#33
  def type_1_opt(type); end

  # Returns the value of attribute type_cache.
  #
  # source://steep//lib/steep/ast/types/factory.rb#7
  def type_cache; end

  # source://steep//lib/steep/ast/types/factory.rb#23
  def type_name_resolver; end

  # source://steep//lib/steep/ast/types/factory.rb#27
  def type_opt(type); end

  # source://steep//lib/steep/ast/types/factory.rb#275
  def type_param(type_param); end

  # source://steep//lib/steep/ast/types/factory.rb#285
  def type_param_1(type_param); end

  # source://steep//lib/steep/ast/types/factory.rb#339
  def unfold(type_name, args); end

  # source://steep//lib/steep/ast/types/factory.rb#427
  def unwrap_optional(type); end
end

# source://steep//lib/steep/ast/types/helper.rb#4
module Steep::AST::Types::Helper; end

# source://steep//lib/steep/ast/types/helper.rb#5
module Steep::AST::Types::Helper::ChildrenLevel
  # source://steep//lib/steep/ast/types/helper.rb#6
  def level_of_children(children); end
end

# source://steep//lib/steep/ast/types/helper.rb#26
module Steep::AST::Types::Helper::NoChild
  # source://steep//lib/steep/ast/types/helper.rb#27
  def each_child(&block); end

  # source://steep//lib/steep/ast/types/helper.rb#33
  def map_type; end
end

# source://steep//lib/steep/ast/types/helper.rb#20
module Steep::AST::Types::Helper::NoFreeVariables
  # source://steep//lib/steep/ast/types/helper.rb#21
  def free_variables; end
end

# source://steep//lib/steep/ast/types/instance.rb#4
class Steep::AST::Types::Instance
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/instance.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/instance.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/instance.rb#26
  def free_variables; end

  # source://steep//lib/steep/ast/types/instance.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/instance.rb#36
  def level; end

  # source://steep//lib/steep/ast/types/instance.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/instance.rb#32
  def to_s; end
end

# source://steep//lib/steep/ast/types/intersection.rb#4
class Steep::AST::Types::Intersection
  include ::Steep::AST::Types::Helper::ChildrenLevel

  # @return [Intersection] a new instance of Intersection
  #
  # source://steep//lib/steep/ast/types/intersection.rb#7
  def initialize(types:); end

  # source://steep//lib/steep/ast/types/intersection.rb#43
  def ==(other); end

  # source://steep//lib/steep/ast/types/intersection.rb#73
  def each_child(&block); end

  # source://steep//lib/steep/ast/types/intersection.rb#43
  def eql?(other); end

  # source://steep//lib/steep/ast/types/intersection.rb#61
  def free_variables; end

  # source://steep//lib/steep/ast/types/intersection.rb#47
  def hash; end

  # source://steep//lib/steep/ast/types/intersection.rb#87
  def level; end

  # source://steep//lib/steep/ast/types/intersection.rb#81
  def map_type(&block); end

  # source://steep//lib/steep/ast/types/intersection.rb#53
  def subst(s); end

  # source://steep//lib/steep/ast/types/intersection.rb#57
  def to_s; end

  # Returns the value of attribute types.
  #
  # source://steep//lib/steep/ast/types/intersection.rb#5
  def types; end

  class << self
    # source://steep//lib/steep/ast/types/intersection.rb#11
    def build(types:); end
  end
end

# source://steep//lib/steep/ast/types/literal.rb#4
class Steep::AST::Types::Literal
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild

  # @return [Literal] a new instance of Literal
  #
  # source://steep//lib/steep/ast/types/literal.rb#7
  def initialize(value:); end

  # source://steep//lib/steep/ast/types/literal.rb#11
  def ==(other); end

  # source://steep//lib/steep/ast/types/literal.rb#38
  def back_type; end

  # source://steep//lib/steep/ast/types/literal.rb#11
  def eql?(other); end

  # source://steep//lib/steep/ast/types/literal.rb#16
  def hash; end

  # source://steep//lib/steep/ast/types/literal.rb#34
  def level; end

  # source://steep//lib/steep/ast/types/literal.rb#22
  def subst(s); end

  # source://steep//lib/steep/ast/types/literal.rb#26
  def to_s; end

  # Returns the value of attribute value.
  #
  # source://steep//lib/steep/ast/types/literal.rb#5
  def value; end
end

# source://steep//lib/steep/ast/types/logic.rb#4
module Steep::AST::Types::Logic; end

# source://steep//lib/steep/ast/types/logic.rb#50
class Steep::AST::Types::Logic::ArgEqualsReceiver < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/logic.rb#53
class Steep::AST::Types::Logic::ArgIsAncestor < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/logic.rb#47
class Steep::AST::Types::Logic::ArgIsReceiver < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/logic.rb#5
class Steep::AST::Types::Logic::Base
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/logic.rb#20
  def ==(other); end

  # source://steep//lib/steep/ast/types/logic.rb#20
  def eql?(other); end

  # source://steep//lib/steep/ast/types/logic.rb#16
  def hash; end

  # source://steep//lib/steep/ast/types/logic.rb#30
  def level; end

  # source://steep//lib/steep/ast/types/logic.rb#8
  def subst(s); end

  # source://steep//lib/steep/ast/types/logic.rb#26
  def to_s; end
end

# source://steep//lib/steep/ast/types/logic.rb#56
class Steep::AST::Types::Logic::Env < ::Steep::AST::Types::Logic::Base
  # @return [Env] a new instance of Env
  #
  # source://steep//lib/steep/ast/types/logic.rb#59
  def initialize(truthy:, falsy:, type:); end

  # source://steep//lib/steep/ast/types/logic.rb#65
  def ==(other); end

  # source://steep//lib/steep/ast/types/logic.rb#65
  def eql?(other); end

  # Returns the value of attribute falsy.
  #
  # source://steep//lib/steep/ast/types/logic.rb#57
  def falsy; end

  # source://steep//lib/steep/ast/types/logic.rb#71
  def hash; end

  # source://steep//lib/steep/ast/types/logic.rb#75
  def inspect; end

  # source://steep//lib/steep/ast/types/logic.rb#75
  def to_s; end

  # Returns the value of attribute truthy.
  #
  # source://steep//lib/steep/ast/types/logic.rb#57
  def truthy; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/ast/types/logic.rb#57
  def type; end
end

# source://steep//lib/steep/ast/types/logic.rb#35
class Steep::AST::Types::Logic::Not < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/logic.rb#44
class Steep::AST::Types::Logic::ReceiverIsArg < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/logic.rb#38
class Steep::AST::Types::Logic::ReceiverIsNil < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/logic.rb#41
class Steep::AST::Types::Logic::ReceiverIsNotNil < ::Steep::AST::Types::Logic::Base; end

# source://steep//lib/steep/ast/types/name.rb#4
module Steep::AST::Types::Name; end

# source://steep//lib/steep/ast/types/name.rb#123
class Steep::AST::Types::Name::Alias < ::Steep::AST::Types::Name::Applying; end

# source://steep//lib/steep/ast/types/name.rb#27
class Steep::AST::Types::Name::Applying < ::Steep::AST::Types::Name::Base
  include ::Steep::AST::Types::Helper::ChildrenLevel

  # @return [Applying] a new instance of Applying
  #
  # source://steep//lib/steep/ast/types/name.rb#30
  def initialize(name:, args:); end

  # source://steep//lib/steep/ast/types/name.rb#35
  def ==(other); end

  # Returns the value of attribute args.
  #
  # source://steep//lib/steep/ast/types/name.rb#28
  def args; end

  # source://steep//lib/steep/ast/types/name.rb#74
  def each_child(&block); end

  # source://steep//lib/steep/ast/types/name.rb#35
  def eql?(other); end

  # source://steep//lib/steep/ast/types/name.rb#66
  def free_variables; end

  # source://steep//lib/steep/ast/types/name.rb#43
  def hash; end

  # source://steep//lib/steep/ast/types/name.rb#84
  def level; end

  # source://steep//lib/steep/ast/types/name.rb#88
  def map_type(&block); end

  # source://steep//lib/steep/ast/types/name.rb#55
  def subst(s); end

  # source://steep//lib/steep/ast/types/name.rb#47
  def to_s; end
end

# source://steep//lib/steep/ast/types/name.rb#5
class Steep::AST::Types::Name::Base
  include ::Steep::AST::Types::Helper::NoFreeVariables

  # @return [Base] a new instance of Base
  #
  # source://steep//lib/steep/ast/types/name.rb#8
  def initialize(name:); end

  # source://steep//lib/steep/ast/types/name.rb#18
  def level; end

  # source://steep//lib/steep/ast/types/name.rb#22
  def map_type(&block); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/ast/types/name.rb#6
  def name; end

  # source://steep//lib/steep/ast/types/name.rb#14
  def subst(s); end
end

# source://steep//lib/steep/ast/types/name.rb#114
class Steep::AST::Types::Name::Instance < ::Steep::AST::Types::Name::Applying
  # source://steep//lib/steep/ast/types/name.rb#115
  def to_module; end
end

# source://steep//lib/steep/ast/types/name.rb#120
class Steep::AST::Types::Name::Interface < ::Steep::AST::Types::Name::Applying; end

# source://steep//lib/steep/ast/types/name.rb#95
class Steep::AST::Types::Name::Singleton < ::Steep::AST::Types::Name::Base
  include ::Steep::AST::Types::Helper::NoChild

  # source://steep//lib/steep/ast/types/name.rb#96
  def ==(other); end

  # source://steep//lib/steep/ast/types/name.rb#96
  def eql?(other); end

  # source://steep//lib/steep/ast/types/name.rb#103
  def hash; end

  # source://steep//lib/steep/ast/types/name.rb#107
  def to_s; end
end

# source://steep//lib/steep/ast/types/nil.rb#4
class Steep::AST::Types::Nil
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/nil.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/nil.rb#33
  def back_type; end

  # source://steep//lib/steep/ast/types/nil.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/nil.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/nil.rb#29
  def level; end

  # source://steep//lib/steep/ast/types/nil.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/nil.rb#21
  def to_s; end
end

# source://steep//lib/steep/ast/types/proc.rb#4
class Steep::AST::Types::Proc
  include ::Steep::AST::Types::Helper::ChildrenLevel

  # @return [Proc] a new instance of Proc
  #
  # source://steep//lib/steep/ast/types/proc.rb#9
  def initialize(type:, block:, self_type:); end

  # source://steep//lib/steep/ast/types/proc.rb#15
  def ==(other); end

  # source://steep//lib/steep/ast/types/proc.rb#92
  def back_type; end

  # Returns the value of attribute block.
  #
  # source://steep//lib/steep/ast/types/proc.rb#7
  def block; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/types/proc.rb#97
  def block_required?; end

  # source://steep//lib/steep/ast/types/proc.rb#105
  def each_child(&block); end

  # source://steep//lib/steep/ast/types/proc.rb#15
  def eql?(other); end

  # source://steep//lib/steep/ast/types/proc.rb#46
  def free_variables; end

  # source://steep//lib/steep/ast/types/proc.rb#19
  def hash; end

  # source://steep//lib/steep/ast/types/proc.rb#56
  def level; end

  # source://steep//lib/steep/ast/types/proc.rb#70
  def map_type(&block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/types/proc.rb#78
  def one_arg?; end

  # Returns the value of attribute self_type.
  #
  # source://steep//lib/steep/ast/types/proc.rb#6
  def self_type; end

  # source://steep//lib/steep/ast/types/proc.rb#25
  def subst(s); end

  # source://steep//lib/steep/ast/types/proc.rb#33
  def to_s; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/ast/types/proc.rb#5
  def type; end
end

# source://steep//lib/steep/ast/types/record.rb#4
class Steep::AST::Types::Record
  include ::Steep::AST::Types::Helper::ChildrenLevel

  # @return [Record] a new instance of Record
  #
  # source://steep//lib/steep/ast/types/record.rb#7
  def initialize(elements:, required_keys:); end

  # source://steep//lib/steep/ast/types/record.rb#12
  def ==(other); end

  # source://steep//lib/steep/ast/types/record.rb#50
  def each_child(&block); end

  # Returns the value of attribute elements.
  #
  # source://steep//lib/steep/ast/types/record.rb#5
  def elements; end

  # source://steep//lib/steep/ast/types/record.rb#12
  def eql?(other); end

  # source://steep//lib/steep/ast/types/record.rb#40
  def free_variables; end

  # source://steep//lib/steep/ast/types/record.rb#16
  def hash; end

  # source://steep//lib/steep/ast/types/record.rb#65
  def level; end

  # source://steep//lib/steep/ast/types/record.rb#58
  def map_type(&block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/types/record.rb#73
  def optional?(key); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/ast/types/record.rb#69
  def required?(key); end

  # Returns the value of attribute required_keys.
  #
  # source://steep//lib/steep/ast/types/record.rb#5
  def required_keys; end

  # source://steep//lib/steep/ast/types/record.rb#22
  def subst(s); end

  # source://steep//lib/steep/ast/types/record.rb#29
  def to_s; end
end

# source://steep//lib/steep/ast/types/self.rb#4
class Steep::AST::Types::Self
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/self.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/self.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/self.rb#33
  def free_variables; end

  # source://steep//lib/steep/ast/types/self.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/self.rb#37
  def level; end

  # source://steep//lib/steep/ast/types/self.rb#23
  def subst(s); end

  # source://steep//lib/steep/ast/types/self.rb#17
  def to_s; end
end

# source://steep//lib/steep/ast/types/shared_instance.rb#4
module Steep::AST::Types::SharedInstance
  # source://steep//lib/steep/ast/types/shared_instance.rb#5
  def instance; end
end

# source://steep//lib/steep/ast/types/top.rb#4
class Steep::AST::Types::Top
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/top.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/top.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/top.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/top.rb#29
  def level; end

  # source://steep//lib/steep/ast/types/top.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/top.rb#21
  def to_s; end
end

# source://steep//lib/steep/ast/types/tuple.rb#4
class Steep::AST::Types::Tuple
  include ::Steep::AST::Types::Helper::ChildrenLevel

  # @return [Tuple] a new instance of Tuple
  #
  # source://steep//lib/steep/ast/types/tuple.rb#7
  def initialize(types:); end

  # source://steep//lib/steep/ast/types/tuple.rb#11
  def ==(other); end

  # source://steep//lib/steep/ast/types/tuple.rb#38
  def each_child(&block); end

  # source://steep//lib/steep/ast/types/tuple.rb#11
  def eql?(other); end

  # source://steep//lib/steep/ast/types/tuple.rb#30
  def free_variables; end

  # source://steep//lib/steep/ast/types/tuple.rb#16
  def hash; end

  # source://steep//lib/steep/ast/types/tuple.rb#50
  def level; end

  # source://steep//lib/steep/ast/types/tuple.rb#46
  def map_type(&block); end

  # source://steep//lib/steep/ast/types/tuple.rb#22
  def subst(s); end

  # source://steep//lib/steep/ast/types/tuple.rb#26
  def to_s; end

  # Returns the value of attribute types.
  #
  # source://steep//lib/steep/ast/types/tuple.rb#5
  def types; end

  # source://steep//lib/steep/ast/types/tuple.rb#54
  def with_location(new_location); end
end

# source://steep//lib/steep/ast/types/union.rb#4
class Steep::AST::Types::Union
  include ::Steep::AST::Types::Helper::ChildrenLevel

  # @return [Union] a new instance of Union
  #
  # source://steep//lib/steep/ast/types/union.rb#7
  def initialize(types:); end

  # source://steep//lib/steep/ast/types/union.rb#46
  def ==(other); end

  # source://steep//lib/steep/ast/types/union.rb#73
  def each_child(&block); end

  # source://steep//lib/steep/ast/types/union.rb#46
  def eql?(other); end

  # source://steep//lib/steep/ast/types/union.rb#65
  def free_variables; end

  # source://steep//lib/steep/ast/types/union.rb#51
  def hash; end

  # source://steep//lib/steep/ast/types/union.rb#87
  def level; end

  # source://steep//lib/steep/ast/types/union.rb#81
  def map_type(&block); end

  # source://steep//lib/steep/ast/types/union.rb#57
  def subst(s); end

  # source://steep//lib/steep/ast/types/union.rb#61
  def to_s; end

  # Returns the value of attribute types.
  #
  # source://steep//lib/steep/ast/types/union.rb#5
  def types; end

  # source://steep//lib/steep/ast/types/union.rb#91
  def with_location(new_location); end

  class << self
    # source://steep//lib/steep/ast/types/union.rb#11
    def build(types:); end
  end
end

# source://steep//lib/steep/ast/types/var.rb#4
class Steep::AST::Types::Var
  include ::Steep::AST::Types::Helper::NoChild

  # @return [Var] a new instance of Var
  #
  # source://steep//lib/steep/ast/types/var.rb#7
  def initialize(name:); end

  # source://steep//lib/steep/ast/types/var.rb#11
  def ==(other); end

  # source://steep//lib/steep/ast/types/var.rb#11
  def eql?(other); end

  # source://steep//lib/steep/ast/types/var.rb#49
  def free_variables; end

  # source://steep//lib/steep/ast/types/var.rb#16
  def hash; end

  # source://steep//lib/steep/ast/types/var.rb#55
  def level; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/ast/types/var.rb#5
  def name; end

  # source://steep//lib/steep/ast/types/var.rb#41
  def subst(s); end

  # source://steep//lib/steep/ast/types/var.rb#37
  def to_s; end

  # source://steep//lib/steep/ast/types/var.rb#59
  def update(name: T.unsafe(nil)); end

  class << self
    # source://steep//lib/steep/ast/types/var.rb#33
    def fresh(name, location: T.unsafe(nil)); end

    # source://steep//lib/steep/ast/types/var.rb#22
    def fresh_name(name); end
  end
end

# source://steep//lib/steep/ast/types/void.rb#4
class Steep::AST::Types::Void
  include ::Steep::AST::Types::Helper::NoFreeVariables
  include ::Steep::AST::Types::Helper::NoChild
  extend ::Steep::AST::Types::SharedInstance

  # source://steep//lib/steep/ast/types/void.rb#7
  def ==(other); end

  # source://steep//lib/steep/ast/types/void.rb#7
  def eql?(other); end

  # source://steep//lib/steep/ast/types/void.rb#11
  def hash; end

  # source://steep//lib/steep/ast/types/void.rb#29
  def level; end

  # source://steep//lib/steep/ast/types/void.rb#17
  def subst(s); end

  # source://steep//lib/steep/ast/types/void.rb#21
  def to_s; end
end

# source://steep//lib/steep/annotation_parser.rb#2
class Steep::AnnotationParser
  # @return [AnnotationParser] a new instance of AnnotationParser
  #
  # source://steep//lib/steep/annotation_parser.rb#15
  def initialize(factory:); end

  # Returns the value of attribute factory.
  #
  # source://steep//lib/steep/annotation_parser.rb#13
  def factory; end

  # source://steep//lib/steep/annotation_parser.rb#72
  def keyword_and_type(keyword); end

  # source://steep//lib/steep/annotation_parser.rb#68
  def keyword_subject_type(keyword, name); end

  # source://steep//lib/steep/annotation_parser.rb#76
  def parse(src, location:); end

  # source://steep//lib/steep/annotation_parser.rb#47
  def parse_type(match, name = T.unsafe(nil), location:); end
end

# source://steep//lib/steep/annotation_parser.rb#42
Steep::AnnotationParser::COLON = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#7
Steep::AnnotationParser::CONST_NAME = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#10
Steep::AnnotationParser::DYNAMIC_NAME = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#11
Steep::AnnotationParser::IVAR_NAME = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#4
Steep::AnnotationParser::METHOD_NAME = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#44
Steep::AnnotationParser::PARAM = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#19
class Steep::AnnotationParser::SyntaxError < ::StandardError
  # @return [SyntaxError] a new instance of SyntaxError
  #
  # source://steep//lib/steep/annotation_parser.rb#23
  def initialize(source:, location:, exn: T.unsafe(nil), message: T.unsafe(nil)); end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/annotation_parser.rb#21
  def location; end

  # Returns the value of attribute source.
  #
  # source://steep//lib/steep/annotation_parser.rb#20
  def source; end
end

# source://steep//lib/steep/annotation_parser.rb#41
Steep::AnnotationParser::TYPE = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#45
Steep::AnnotationParser::TYPE_PARAMS = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotation_parser.rb#3
Steep::AnnotationParser::VAR_NAME = T.let(T.unsafe(nil), Regexp)

# source://steep//lib/steep/annotations_helper.rb#2
module Steep::AnnotationsHelper
  private

  # source://steep//lib/steep/annotations_helper.rb#5
  def deprecated_annotation?(annotations); end

  # source://steep//lib/steep/annotations_helper.rb#18
  def deprecated_type_name?(type_name, env); end

  class << self
    # @return [Boolean]
    #
    # source://steep//lib/steep/annotations_helper.rb#5
    def deprecated_annotation?(annotations); end

    # @return [Boolean]
    #
    # source://steep//lib/steep/annotations_helper.rb#18
    def deprecated_type_name?(type_name, env); end
  end
end

# source://steep//lib/steep/diagnostic/helper.rb#2
module Steep::Diagnostic; end

# source://steep//lib/steep/diagnostic/helper.rb#3
module Steep::Diagnostic::Helper
  # source://steep//lib/steep/diagnostic/helper.rb#4
  def error_name; end

  # source://steep//lib/steep/diagnostic/helper.rb#9
  def full_message; end
end

# source://steep//lib/steep/diagnostic/lsp_formatter.rb#3
class Steep::Diagnostic::LSPFormatter
  # @return [LSPFormatter] a new instance of LSPFormatter
  #
  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#14
  def initialize(config = T.unsafe(nil), default_severity: T.unsafe(nil)); end

  # Returns the value of attribute config.
  #
  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#6
  def config; end

  # Returns the value of attribute default_severity.
  #
  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#7
  def default_severity; end

  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#40
  def format(diagnostic); end

  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#76
  def severity_for(diagnostic); end

  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#25
  def validate_class(klass); end

  # source://steep//lib/steep/diagnostic/lsp_formatter.rb#31
  def validate_severity(klass, severity); end
end

# source://steep//lib/steep/diagnostic/lsp_formatter.rb#9
Steep::Diagnostic::LSPFormatter::ERROR = T.let(T.unsafe(nil), Symbol)

# source://steep//lib/steep/diagnostic/lsp_formatter.rb#12
Steep::Diagnostic::LSPFormatter::HINT = T.let(T.unsafe(nil), Symbol)

# source://steep//lib/steep/diagnostic/lsp_formatter.rb#11
Steep::Diagnostic::LSPFormatter::INFORMATION = T.let(T.unsafe(nil), Symbol)

# source://steep//lib/steep/diagnostic/lsp_formatter.rb#4
Steep::Diagnostic::LSPFormatter::LSP = LanguageServer::Protocol

# source://steep//lib/steep/diagnostic/lsp_formatter.rb#10
Steep::Diagnostic::LSPFormatter::WARNING = T.let(T.unsafe(nil), Symbol)

# source://steep//lib/steep/diagnostic/result_printer2.rb#3
module Steep::Diagnostic::ResultPrinter2
  # source://steep//lib/steep/diagnostic/result_printer2.rb#32
  def detail_lines; end

  # source://steep//lib/steep/diagnostic/result_printer2.rb#4
  def result_line(result); end
end

# source://steep//lib/steep/diagnostic/ruby.rb#3
module Steep::Diagnostic::Ruby
  class << self
    # source://steep//lib/steep/diagnostic/ruby.rb#1052
    def all_error; end

    # source://steep//lib/steep/diagnostic/ruby.rb#1058
    def default; end

    # source://steep//lib/steep/diagnostic/ruby.rb#1184
    def lenient; end

    # source://steep//lib/steep/diagnostic/ruby.rb#1247
    def silent; end

    # source://steep//lib/steep/diagnostic/ruby.rb#1121
    def strict; end
  end
end

# source://steep//lib/steep/diagnostic/ruby.rb#1046
Steep::Diagnostic::Ruby::ALL = T.let(T.unsafe(nil), Array)

# source://steep//lib/steep/diagnostic/ruby.rb#824
class Steep::Diagnostic::Ruby::AnnotationSyntaxError < ::Steep::Diagnostic::Ruby::Base
  # @return [AnnotationSyntaxError] a new instance of AnnotationSyntaxError
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#827
  def initialize(message:, location:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#832
  def header_line; end

  # Returns the value of attribute message.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#825
  def message; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#217
class Steep::Diagnostic::Ruby::ArgumentTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [ArgumentTypeMismatch] a new instance of ArgumentTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#225
  def initialize(node:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#220
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#219
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#232
  def header_line; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#218
  def node; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#221
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#4
class Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Helper

  # @return [Base] a new instance of Base
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#10
  def initialize(node:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/diagnostic/ruby.rb#19
  def detail_lines; end

  # source://steep//lib/steep/diagnostic/ruby.rb#23
  def diagnostic_code; end

  # source://steep//lib/steep/diagnostic/ruby.rb#15
  def header_line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#8
  def location; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#7
  def node; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#344
class Steep::Diagnostic::Ruby::BlockBodyTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [BlockBodyTypeMismatch] a new instance of BlockBodyTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#351
  def initialize(node:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#346
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#345
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#358
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#347
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#325
class Steep::Diagnostic::Ruby::BlockTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [BlockTypeMismatch] a new instance of BlockTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#332
  def initialize(node:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#327
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#326
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#339
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#328
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#363
class Steep::Diagnostic::Ruby::BreakTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [BreakTypeMismatch] a new instance of BreakTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#370
  def initialize(node:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#365
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#364
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#377
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#366
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#412
class Steep::Diagnostic::Ruby::ClassModuleMismatch < ::Steep::Diagnostic::Ruby::Base
  # @return [ClassModuleMismatch] a new instance of ClassModuleMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#415
  def initialize(node:, name:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#427
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#413
  def name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#1016
class Steep::Diagnostic::Ruby::DeprecatedReference < ::Steep::Diagnostic::Ruby::Base
  # @return [DeprecatedReference] a new instance of DeprecatedReference
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#1019
  def initialize(node:, location:, message:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#1024
  def header_line; end

  # Returns the value of attribute message.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#1017
  def message; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#473
class Steep::Diagnostic::Ruby::DifferentMethodParameterKind < ::Steep::Diagnostic::Ruby::Base
  # @return [DifferentMethodParameterKind] a new instance of DifferentMethodParameterKind
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#477
  def initialize(method_param:, method_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#483
  def header_line; end

  # Returns the value of attribute method_param.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#474
  def method_param; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#475
  def method_type; end
end

# source://steep//lib/steep/diagnostic/deprecated/else_on_exhaustive_case.rb#6
class Steep::Diagnostic::Ruby::ElseOnExhaustiveCase < ::Steep::Diagnostic::Ruby::Base
  # @return [ElseOnExhaustiveCase] a new instance of ElseOnExhaustiveCase
  #
  # source://steep//lib/steep/diagnostic/deprecated/else_on_exhaustive_case.rb#9
  def initialize(node:, type:); end

  # source://steep//lib/steep/diagnostic/deprecated/else_on_exhaustive_case.rb#14
  def header_line; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/diagnostic/deprecated/else_on_exhaustive_case.rb#7
  def type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#659
class Steep::Diagnostic::Ruby::FallbackAny < ::Steep::Diagnostic::Ruby::Base
  # @return [FallbackAny] a new instance of FallbackAny
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#660
  def initialize(node:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#664
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#837
class Steep::Diagnostic::Ruby::FalseAssertion < ::Steep::Diagnostic::Ruby::Base
  # @return [FalseAssertion] a new instance of FalseAssertion
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#840
  def initialize(node:, assertion_type:, node_type:); end

  # Returns the value of attribute assertion_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#838
  def assertion_type; end

  # source://steep//lib/steep/diagnostic/ruby.rb#846
  def header_line; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#838
  def node; end

  # Returns the value of attribute node_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#838
  def node_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#382
class Steep::Diagnostic::Ruby::ImplicitBreakValueMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [ImplicitBreakValueMismatch] a new instance of ImplicitBreakValueMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#388
  def initialize(node:, jump_type:, result:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#394
  def header_line; end

  # Returns the value of attribute jump_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#383
  def jump_type; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#384
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#692
class Steep::Diagnostic::Ruby::IncompatibleAnnotation < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [IncompatibleAnnotation] a new instance of IncompatibleAnnotation
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#697
  def initialize(node:, var_name:, result:, relation:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#706
  def header_line; end

  # Returns the value of attribute relation.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#695
  def relation; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#694
  def result; end

  # Returns the value of attribute var_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#693
  def var_name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#896
class Steep::Diagnostic::Ruby::IncompatibleArgumentForwarding < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::ResultPrinter2

  # @return [IncompatibleArgumentForwarding] a new instance of IncompatibleArgumentForwarding
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#899
  def initialize(method_name:, node:, result:, params_pair: T.unsafe(nil), block_pair: T.unsafe(nil)); end

  # Returns the value of attribute block_pair.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#897
  def block_pair; end

  # source://steep//lib/steep/diagnostic/ruby.rb#909
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#897
  def method_name; end

  # Returns the value of attribute params_pair.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#897
  def params_pair; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#897
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#64
class Steep::Diagnostic::Ruby::IncompatibleAssignment < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [IncompatibleAssignment] a new instance of IncompatibleAssignment
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#71
  def initialize(node:, lhs_type:, rhs_type:, result:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#78
  def header_line; end

  # Returns the value of attribute lhs_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#65
  def lhs_type; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#67
  def result; end

  # Returns the value of attribute rhs_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#66
  def rhs_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#156
class Steep::Diagnostic::Ruby::InsufficientKeywordArguments < ::Steep::Diagnostic::Ruby::Base
  # @return [InsufficientKeywordArguments] a new instance of InsufficientKeywordArguments
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#162
  def initialize(node:, params:, missing_keywords:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#182
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#158
  def method_name; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#159
  def method_type; end

  # Returns the value of attribute missing_keywords.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#160
  def missing_keywords; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#157
  def node; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#107
class Steep::Diagnostic::Ruby::InsufficientPositionalArguments < ::Steep::Diagnostic::Ruby::Base
  # @return [InsufficientPositionalArguments] a new instance of InsufficientPositionalArguments
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#111
  def initialize(node:, params:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#129
  def header_line; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#108
  def node; end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#109
  def params; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#865
class Steep::Diagnostic::Ruby::InsufficientTypeArgument < ::Steep::Diagnostic::Ruby::Base
  # @return [InsufficientTypeArgument] a new instance of InsufficientTypeArgument
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#868
  def initialize(node:, type_args:, method_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#874
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#866
  def method_type; end

  # Returns the value of attribute type_args.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#866
  def type_args; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#947
class Steep::Diagnostic::Ruby::InvalidIgnoreComment < ::Steep::Diagnostic::Ruby::Base
  # @return [InvalidIgnoreComment] a new instance of InvalidIgnoreComment
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#950
  def initialize(comment:); end

  # Returns the value of attribute comment.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#948
  def comment; end

  # source://steep//lib/steep/diagnostic/ruby.rb#955
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#439
class Steep::Diagnostic::Ruby::MethodArityMismatch < ::Steep::Diagnostic::Ruby::Base
  # @return [MethodArityMismatch] a new instance of MethodArityMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#442
  def initialize(node:, method_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#453
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#440
  def method_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#507
class Steep::Diagnostic::Ruby::MethodBodyTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [MethodBodyTypeMismatch] a new instance of MethodBodyTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#514
  def initialize(node:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#509
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#508
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#521
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#510
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#1003
class Steep::Diagnostic::Ruby::MethodDefinitionInUndeclaredModule < ::Steep::Diagnostic::Ruby::Base
  # @return [MethodDefinitionInUndeclaredModule] a new instance of MethodDefinitionInUndeclaredModule
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#1006
  def initialize(method_name:, node:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#1011
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#1004
  def method_name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#567
class Steep::Diagnostic::Ruby::MethodDefinitionMissing < ::Steep::Diagnostic::Ruby::Base
  # @return [MethodDefinitionMissing] a new instance of MethodDefinitionMissing
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#572
  def initialize(node:, module_name:, kind:, missing_method:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#579
  def header_line; end

  # Returns the value of attribute kind.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#569
  def kind; end

  # Returns the value of attribute missing_method.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#570
  def missing_method; end

  # Returns the value of attribute module_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#568
  def module_name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#458
class Steep::Diagnostic::Ruby::MethodParameterMismatch < ::Steep::Diagnostic::Ruby::Base
  # @return [MethodParameterMismatch] a new instance of MethodParameterMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#462
  def initialize(method_param:, method_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#468
  def header_line; end

  # Returns the value of attribute method_param.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#459
  def method_param; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#460
  def method_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#488
class Steep::Diagnostic::Ruby::MethodReturnTypeAnnotationMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [MethodReturnTypeAnnotationMismatch] a new instance of MethodReturnTypeAnnotationMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#495
  def initialize(node:, method_type:, annotation_type:, result:); end

  # Returns the value of attribute annotation_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#490
  def annotation_type; end

  # source://steep//lib/steep/diagnostic/ruby.rb#502
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#489
  def method_type; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#491
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#743
class Steep::Diagnostic::Ruby::MultipleAssignmentConversionError < ::Steep::Diagnostic::Ruby::Base
  # @return [MultipleAssignmentConversionError] a new instance of MultipleAssignmentConversionError
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#746
  def initialize(node:, original_type:, returned_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#754
  def header_line; end

  # Returns the value of attribute original_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#744
  def original_type; end

  # Returns the value of attribute returned_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#744
  def returned_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#237
class Steep::Diagnostic::Ruby::NoMethod < ::Steep::Diagnostic::Ruby::Base
  # @return [NoMethod] a new instance of NoMethod
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#241
  def initialize(node:, type:, method:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#256
  def header_line; end

  # Returns the value of attribute method.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#239
  def method; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#238
  def type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#921
class Steep::Diagnostic::Ruby::ProcHintIgnored < ::Steep::Diagnostic::Ruby::Base
  # @return [ProcHintIgnored] a new instance of ProcHintIgnored
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#924
  def initialize(hint_type:, node:); end

  # Returns the value of attribute block_node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#922
  def block_node; end

  # source://steep//lib/steep/diagnostic/ruby.rb#929
  def header_line; end

  # Returns the value of attribute hint_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#922
  def hint_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#730
class Steep::Diagnostic::Ruby::ProcTypeExpected < ::Steep::Diagnostic::Ruby::Base
  # @return [ProcTypeExpected] a new instance of ProcTypeExpected
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#733
  def initialize(node:, type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#738
  def header_line; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#731
  def type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#934
class Steep::Diagnostic::Ruby::RBSError < ::Steep::Diagnostic::Ruby::Base
  # @return [RBSError] a new instance of RBSError
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#937
  def initialize(error:, node:, location:); end

  # Returns the value of attribute error.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#935
  def error; end

  # source://steep//lib/steep/diagnostic/ruby.rb#942
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#312
class Steep::Diagnostic::Ruby::RequiredBlockMissing < ::Steep::Diagnostic::Ruby::Base
  # @return [RequiredBlockMissing] a new instance of RequiredBlockMissing
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#315
  def initialize(node:, method_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#320
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#313
  def method_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#28
module Steep::Diagnostic::Ruby::ResultPrinter
  # source://steep//lib/steep/diagnostic/ruby.rb#48
  def detail_lines; end

  # source://steep//lib/steep/diagnostic/ruby.rb#29
  def relation_message(relation); end
end

# source://steep//lib/steep/diagnostic/ruby.rb#261
class Steep::Diagnostic::Ruby::ReturnTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [ReturnTypeMismatch] a new instance of ReturnTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#268
  def initialize(node:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#263
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#262
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#275
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#264
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#526
class Steep::Diagnostic::Ruby::SetterBodyTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [SetterBodyTypeMismatch] a new instance of SetterBodyTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#531
  def initialize(node:, expected:, actual:, result:, method_name:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#527
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#527
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#539
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#527
  def method_name; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#527
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#280
class Steep::Diagnostic::Ruby::SetterReturnTypeMismatch < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [SetterReturnTypeMismatch] a new instance of SetterReturnTypeMismatch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#285
  def initialize(node:, method_name:, expected:, actual:, result:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#281
  def actual; end

  # Returns the value of attribute expected.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#281
  def expected; end

  # source://steep//lib/steep/diagnostic/ruby.rb#293
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#281
  def method_name; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#281
  def result; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#811
class Steep::Diagnostic::Ruby::SyntaxError < ::Steep::Diagnostic::Ruby::Base
  # @return [SyntaxError] a new instance of SyntaxError
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#814
  def initialize(message:, location:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#819
  def header_line; end

  # Returns the value of attribute message.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#812
  def message; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#879
class Steep::Diagnostic::Ruby::TypeArgumentMismatchError < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [TypeArgumentMismatchError] a new instance of TypeArgumentMismatchError
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#882
  def initialize(type_arg:, type_param:, result:, location:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#891
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#880
  def result; end

  # Returns the value of attribute type_argument.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#880
  def type_argument; end

  # Returns the value of attribute type_parameter.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#880
  def type_parameter; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#960
class Steep::Diagnostic::Ruby::UnannotatedEmptyCollection < ::Steep::Diagnostic::Ruby::Base
  # source://steep//lib/steep/diagnostic/ruby.rb#961
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#980
class Steep::Diagnostic::Ruby::UndeclaredMethodDefinition < ::Steep::Diagnostic::Ruby::Base
  # @return [UndeclaredMethodDefinition] a new instance of UndeclaredMethodDefinition
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#983
  def initialize(method_name:, type_name:, node:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#989
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#981
  def method_name; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#981
  def type_name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#298
class Steep::Diagnostic::Ruby::UnexpectedBlockGiven < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedBlockGiven] a new instance of UnexpectedBlockGiven
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#301
  def initialize(node:, method_type:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#307
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#299
  def method_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#590
class Steep::Diagnostic::Ruby::UnexpectedDynamicMethod < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedDynamicMethod] a new instance of UnexpectedDynamicMethod
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#594
  def initialize(node:, module_name:, method_name:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#600
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#592
  def method_name; end

  # Returns the value of attribute module_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#591
  def module_name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#777
class Steep::Diagnostic::Ruby::UnexpectedError < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedError] a new instance of UnexpectedError
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#780
  def initialize(node:, error:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#789
  def detail_lines; end

  # Returns the value of attribute error.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#778
  def error; end

  # source://steep//lib/steep/diagnostic/ruby.rb#785
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#399
class Steep::Diagnostic::Ruby::UnexpectedJump < ::Steep::Diagnostic::Ruby::Base
  # source://steep//lib/steep/diagnostic/ruby.rb#400
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#405
class Steep::Diagnostic::Ruby::UnexpectedJumpValue < ::Steep::Diagnostic::Ruby::Base
  # source://steep//lib/steep/diagnostic/ruby.rb#406
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#134
class Steep::Diagnostic::Ruby::UnexpectedKeywordArgument < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedKeywordArgument] a new instance of UnexpectedKeywordArgument
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#138
  def initialize(node:, params:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#151
  def header_line; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#135
  def node; end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#136
  def params; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#93
class Steep::Diagnostic::Ruby::UnexpectedPositionalArgument < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedPositionalArgument] a new instance of UnexpectedPositionalArgument
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#97
  def initialize(node:, params:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#102
  def header_line; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#94
  def node; end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#95
  def params; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#550
class Steep::Diagnostic::Ruby::UnexpectedSuper < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedSuper] a new instance of UnexpectedSuper
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#553
  def initialize(node:, method:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#558
  def header_line; end

  # Returns the value of attribute method.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#551
  def method; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#851
class Steep::Diagnostic::Ruby::UnexpectedTypeArgument < ::Steep::Diagnostic::Ruby::Base
  # @return [UnexpectedTypeArgument] a new instance of UnexpectedTypeArgument
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#854
  def initialize(type_arg:, method_type:, location:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#860
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#852
  def method_type; end

  # Returns the value of attribute type_arg.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#852
  def type_arg; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#544
class Steep::Diagnostic::Ruby::UnexpectedYield < ::Steep::Diagnostic::Ruby::Base
  # source://steep//lib/steep/diagnostic/ruby.rb#545
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#605
class Steep::Diagnostic::Ruby::UnknownConstant < ::Steep::Diagnostic::Ruby::Base
  # @return [UnknownConstant] a new instance of UnknownConstant
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#609
  def initialize(node:, name:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#615
  def class!; end

  # source://steep//lib/steep/diagnostic/ruby.rb#625
  def header_line; end

  # Returns the value of attribute kind.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#607
  def kind; end

  # source://steep//lib/steep/diagnostic/ruby.rb#620
  def module!; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#606
  def name; end
end

# source://steep//lib/steep/diagnostic/deprecated/unknown_constant_assigned.rb#6
class Steep::Diagnostic::Ruby::UnknownConstantAssigned < ::Steep::Diagnostic::Ruby::Base
  # @return [UnknownConstantAssigned] a new instance of UnknownConstantAssigned
  #
  # source://steep//lib/steep/diagnostic/deprecated/unknown_constant_assigned.rb#10
  def initialize(node:, context:, name:); end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/diagnostic/deprecated/unknown_constant_assigned.rb#7
  def context; end

  # source://steep//lib/steep/diagnostic/deprecated/unknown_constant_assigned.rb#22
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/deprecated/unknown_constant_assigned.rb#8
  def name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#646
class Steep::Diagnostic::Ruby::UnknownGlobalVariable < ::Steep::Diagnostic::Ruby::Base
  # @return [UnknownGlobalVariable] a new instance of UnknownGlobalVariable
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#649
  def initialize(node:, name:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#654
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#647
  def name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#633
class Steep::Diagnostic::Ruby::UnknownInstanceVariable < ::Steep::Diagnostic::Ruby::Base
  # @return [UnknownInstanceVariable] a new instance of UnknownInstanceVariable
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#636
  def initialize(node:, name:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#641
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#634
  def name; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#967
class Steep::Diagnostic::Ruby::UnknownRecordKey < ::Steep::Diagnostic::Ruby::Base
  # @return [UnknownRecordKey] a new instance of UnknownRecordKey
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#970
  def initialize(key:, node:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#975
  def header_line; end

  # Returns the value of attribute key.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#968
  def key; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#711
class Steep::Diagnostic::Ruby::UnreachableBranch < ::Steep::Diagnostic::Ruby::Base
  # source://steep//lib/steep/diagnostic/ruby.rb#712
  def header_line; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#717
class Steep::Diagnostic::Ruby::UnreachableValueBranch < ::Steep::Diagnostic::Ruby::Base
  # @return [UnreachableValueBranch] a new instance of UnreachableValueBranch
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#720
  def initialize(node:, type:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/diagnostic/ruby.rb#725
  def header_line; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#718
  def type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#187
class Steep::Diagnostic::Ruby::UnresolvedOverloading < ::Steep::Diagnostic::Ruby::Base
  # @return [UnresolvedOverloading] a new instance of UnresolvedOverloading
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#193
  def initialize(node:, receiver_type:, method_name:, method_types:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#204
  def detail_lines; end

  # source://steep//lib/steep/diagnostic/ruby.rb#200
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#190
  def method_name; end

  # Returns the value of attribute method_types.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#191
  def method_types; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#188
  def node; end

  # Returns the value of attribute receiver_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#189
  def receiver_type; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#669
class Steep::Diagnostic::Ruby::UnsatisfiableConstraint < ::Steep::Diagnostic::Ruby::Base
  include ::Steep::Diagnostic::Ruby::ResultPrinter

  # @return [UnsatisfiableConstraint] a new instance of UnsatisfiableConstraint
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#676
  def initialize(node:, method_type:, var:, sub_type:, super_type:, result:); end

  # source://steep//lib/steep/diagnostic/ruby.rb#687
  def header_line; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#670
  def method_type; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#674
  def result; end

  # Returns the value of attribute sub_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#672
  def sub_type; end

  # Returns the value of attribute super_type.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#673
  def super_type; end

  # Returns the value of attribute var.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#671
  def var; end
end

# source://steep//lib/steep/diagnostic/ruby.rb#759
class Steep::Diagnostic::Ruby::UnsupportedSyntax < ::Steep::Diagnostic::Ruby::Base
  # @return [UnsupportedSyntax] a new instance of UnsupportedSyntax
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#762
  def initialize(node:, message: T.unsafe(nil)); end

  # source://steep//lib/steep/diagnostic/ruby.rb#767
  def header_line; end

  # Returns the value of attribute message.
  #
  # source://steep//lib/steep/diagnostic/ruby.rb#760
  def message; end
end

# source://steep//lib/steep/diagnostic/signature.rb#3
module Steep::Diagnostic::Signature
  class << self
    # source://steep//lib/steep/diagnostic/signature.rb#508
    def from_rbs_error(error, factory:); end
  end
end

# source://steep//lib/steep/diagnostic/signature.rb#4
class Steep::Diagnostic::Signature::Base
  include ::Steep::Diagnostic::Helper

  # @return [Base] a new instance of Base
  #
  # source://steep//lib/steep/diagnostic/signature.rb#9
  def initialize(location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#17
  def detail_lines; end

  # source://steep//lib/steep/diagnostic/signature.rb#21
  def diagnostic_code; end

  # source://steep//lib/steep/diagnostic/signature.rb#13
  def header_line; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#7
  def location; end

  # source://steep//lib/steep/diagnostic/signature.rb#25
  def path; end
end

# source://steep//lib/steep/diagnostic/signature.rb#294
class Steep::Diagnostic::Signature::ClassInstanceVariableDuplicationError < ::Steep::Diagnostic::Signature::VariableDuplicationError
  # source://steep//lib/steep/diagnostic/signature.rb#295
  def header_line; end
end

# source://steep//lib/steep/diagnostic/signature.rb#300
class Steep::Diagnostic::Signature::ClassVariableDuplicationError < ::Steep::Diagnostic::Signature::Base
  # @return [ClassVariableDuplicationError] a new instance of ClassVariableDuplicationError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#305
  def initialize(class_name:, other_class_name:, variable_name:, location:); end

  # Returns the value of attribute class_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#301
  def class_name; end

  # source://steep//lib/steep/diagnostic/signature.rb#313
  def header_line; end

  # Returns the value of attribute other_class_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#302
  def other_class_name; end

  # Returns the value of attribute variable_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#303
  def variable_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#441
class Steep::Diagnostic::Signature::CyclicClassAliasDefinitionError < ::Steep::Diagnostic::Signature::Base
  # @return [CyclicClassAliasDefinitionError] a new instance of CyclicClassAliasDefinitionError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#444
  def initialize(decl:); end

  # Returns the value of attribute decl.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#442
  def decl; end

  # source://steep//lib/steep/diagnostic/signature.rb#449
  def header_line; end
end

# source://steep//lib/steep/diagnostic/signature.rb#487
class Steep::Diagnostic::Signature::DeprecatedTypeName < ::Steep::Diagnostic::Signature::Base
  # @return [DeprecatedTypeName] a new instance of DeprecatedTypeName
  #
  # source://steep//lib/steep/diagnostic/signature.rb#491
  def initialize(type_name, message, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#497
  def header_line; end

  # Returns the value of attribute message.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#489
  def message; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#488
  def type_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#54
class Steep::Diagnostic::Signature::DuplicatedDeclaration < ::Steep::Diagnostic::Signature::Base
  # @return [DuplicatedDeclaration] a new instance of DuplicatedDeclaration
  #
  # source://steep//lib/steep/diagnostic/signature.rb#57
  def initialize(type_name:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#62
  def header_line; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#55
  def type_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#155
class Steep::Diagnostic::Signature::DuplicatedMethodDefinition < ::Steep::Diagnostic::Signature::Base
  # @return [DuplicatedMethodDefinition] a new instance of DuplicatedMethodDefinition
  #
  # source://steep//lib/steep/diagnostic/signature.rb#159
  def initialize(class_name:, method_name:, location:); end

  # Returns the value of attribute class_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#156
  def class_name; end

  # source://steep//lib/steep/diagnostic/signature.rb#165
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#157
  def method_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#224
class Steep::Diagnostic::Signature::GenericParameterMismatch < ::Steep::Diagnostic::Signature::Base
  # @return [GenericParameterMismatch] a new instance of GenericParameterMismatch
  #
  # source://steep//lib/steep/diagnostic/signature.rb#227
  def initialize(name:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#232
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#225
  def name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#418
class Steep::Diagnostic::Signature::InconsistentClassModuleAliasError < ::Steep::Diagnostic::Signature::Base
  # @return [InconsistentClassModuleAliasError] a new instance of InconsistentClassModuleAliasError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#421
  def initialize(decl:); end

  # Returns the value of attribute decl.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#419
  def decl; end

  # source://steep//lib/steep/diagnostic/signature.rb#426
  def header_line; end
end

# source://steep//lib/steep/diagnostic/signature.rb#364
class Steep::Diagnostic::Signature::InheritModuleError < ::Steep::Diagnostic::Signature::Base
  # @return [InheritModuleError] a new instance of InheritModuleError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#367
  def initialize(super_class); end

  # source://steep//lib/steep/diagnostic/signature.rb#372
  def header_line; end

  # Returns the value of attribute super_class.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#365
  def super_class; end
end

# source://steep//lib/steep/diagnostic/signature.rb#288
class Steep::Diagnostic::Signature::InstanceVariableDuplicationError < ::Steep::Diagnostic::Signature::VariableDuplicationError
  # source://steep//lib/steep/diagnostic/signature.rb#289
  def header_line; end
end

# source://steep//lib/steep/diagnostic/signature.rb#318
class Steep::Diagnostic::Signature::InstanceVariableTypeError < ::Steep::Diagnostic::Signature::Base
  # @return [InstanceVariableTypeError] a new instance of InstanceVariableTypeError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#323
  def initialize(name:, location:, var_type:, parent_type:); end

  # source://steep//lib/steep/diagnostic/signature.rb#331
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#319
  def name; end

  # Returns the value of attribute parent_type.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#321
  def parent_type; end

  # Returns the value of attribute var_type.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#320
  def var_type; end
end

# source://steep//lib/steep/diagnostic/signature.rb#125
class Steep::Diagnostic::Signature::InvalidMethodOverload < ::Steep::Diagnostic::Signature::Base
  # @return [InvalidMethodOverload] a new instance of InvalidMethodOverload
  #
  # source://steep//lib/steep/diagnostic/signature.rb#129
  def initialize(class_name:, method_name:, location:); end

  # Returns the value of attribute class_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#126
  def class_name; end

  # source://steep//lib/steep/diagnostic/signature.rb#135
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#127
  def method_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#80
class Steep::Diagnostic::Signature::InvalidTypeApplication < ::Steep::Diagnostic::Signature::Base
  # @return [InvalidTypeApplication] a new instance of InvalidTypeApplication
  #
  # source://steep//lib/steep/diagnostic/signature.rb#85
  def initialize(name:, args:, params:, location:); end

  # Returns the value of attribute args.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#82
  def args; end

  # source://steep//lib/steep/diagnostic/signature.rb#92
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#81
  def name; end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#83
  def params; end
end

# source://steep//lib/steep/diagnostic/signature.rb#237
class Steep::Diagnostic::Signature::InvalidVarianceAnnotation < ::Steep::Diagnostic::Signature::Base
  # @return [InvalidVarianceAnnotation] a new instance of InvalidVarianceAnnotation
  #
  # source://steep//lib/steep/diagnostic/signature.rb#241
  def initialize(name:, param:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#247
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#238
  def name; end

  # Returns the value of attribute param.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#239
  def param; end
end

# source://steep//lib/steep/diagnostic/signature.rb#336
class Steep::Diagnostic::Signature::MixinClassError < ::Steep::Diagnostic::Signature::Base
  # @return [MixinClassError] a new instance of MixinClassError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#340
  def initialize(location:, member:, type_name:); end

  # source://steep//lib/steep/diagnostic/signature.rb#346
  def header_line; end

  # Returns the value of attribute member.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#337
  def member; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#338
  def type_name; end

  private

  # source://steep//lib/steep/diagnostic/signature.rb#352
  def mixin_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#252
class Steep::Diagnostic::Signature::ModuleSelfTypeError < ::Steep::Diagnostic::Signature::Base
  include ::Steep::Diagnostic::ResultPrinter2

  # @return [ModuleSelfTypeError] a new instance of ModuleSelfTypeError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#259
  def initialize(name:, ancestor:, result:, location:); end

  # Returns the value of attribute ancestor.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#254
  def ancestor; end

  # source://steep//lib/steep/diagnostic/signature.rb#271
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#253
  def name; end

  # source://steep//lib/steep/diagnostic/signature.rb#267
  def relation; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#255
  def result; end
end

# source://steep//lib/steep/diagnostic/signature.rb#403
class Steep::Diagnostic::Signature::NonregularTypeAlias < ::Steep::Diagnostic::Signature::Base
  # @return [NonregularTypeAlias] a new instance of NonregularTypeAlias
  #
  # source://steep//lib/steep/diagnostic/signature.rb#407
  def initialize(type_name:, nonregular_type:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#413
  def header_line; end

  # Returns the value of attribute nonregular_type.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#405
  def nonregular_type; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#404
  def type_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#170
class Steep::Diagnostic::Signature::RecursiveAlias < ::Steep::Diagnostic::Signature::Base
  # @return [RecursiveAlias] a new instance of RecursiveAlias
  #
  # source://steep//lib/steep/diagnostic/signature.rb#174
  def initialize(class_name:, names:, location:); end

  # Returns the value of attribute class_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#171
  def class_name; end

  # source://steep//lib/steep/diagnostic/signature.rb#180
  def header_line; end

  # Returns the value of attribute names.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#172
  def names; end
end

# source://steep//lib/steep/diagnostic/signature.rb#185
class Steep::Diagnostic::Signature::RecursiveAncestor < ::Steep::Diagnostic::Signature::Base
  # @return [RecursiveAncestor] a new instance of RecursiveAncestor
  #
  # source://steep//lib/steep/diagnostic/signature.rb#188
  def initialize(ancestors:, location:); end

  # Returns the value of attribute ancestors.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#186
  def ancestors; end

  # source://steep//lib/steep/diagnostic/signature.rb#193
  def header_line; end
end

# source://steep//lib/steep/diagnostic/signature.rb#390
class Steep::Diagnostic::Signature::RecursiveTypeAlias < ::Steep::Diagnostic::Signature::Base
  # @return [RecursiveTypeAlias] a new instance of RecursiveTypeAlias
  #
  # source://steep//lib/steep/diagnostic/signature.rb#393
  def initialize(alias_names:, location:); end

  # Returns the value of attribute alias_names.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#391
  def alias_names; end

  # source://steep//lib/steep/diagnostic/signature.rb#398
  def header_line; end
end

# source://steep//lib/steep/diagnostic/signature.rb#211
class Steep::Diagnostic::Signature::SuperclassMismatch < ::Steep::Diagnostic::Signature::Base
  # @return [SuperclassMismatch] a new instance of SuperclassMismatch
  #
  # source://steep//lib/steep/diagnostic/signature.rb#214
  def initialize(name:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#219
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#212
  def name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#32
class Steep::Diagnostic::Signature::SyntaxError < ::Steep::Diagnostic::Signature::Base
  # @return [SyntaxError] a new instance of SyntaxError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#35
  def initialize(exception, location:); end

  # Returns the value of attribute exception.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#33
  def exception; end

  # source://steep//lib/steep/diagnostic/signature.rb#49
  def header_line; end

  class << self
    # source://steep//lib/steep/diagnostic/signature.rb#40
    def parser_syntax_error_message(exception); end
  end
end

# source://steep//lib/steep/diagnostic/signature.rb#454
class Steep::Diagnostic::Signature::TypeParamDefaultReferenceError < ::Steep::Diagnostic::Signature::Base
  # @return [TypeParamDefaultReferenceError] a new instance of TypeParamDefaultReferenceError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#457
  def initialize(type_param, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#462
  def header_line; end

  # Returns the value of attribute type_param.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#455
  def type_param; end
end

# source://steep//lib/steep/diagnostic/signature.rb#377
class Steep::Diagnostic::Signature::UnexpectedError < ::Steep::Diagnostic::Signature::Base
  # @return [UnexpectedError] a new instance of UnexpectedError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#380
  def initialize(message:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#385
  def header_line; end

  # Returns the value of attribute message.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#378
  def message; end
end

# source://steep//lib/steep/diagnostic/signature.rb#140
class Steep::Diagnostic::Signature::UnknownMethodAlias < ::Steep::Diagnostic::Signature::Base
  # @return [UnknownMethodAlias] a new instance of UnknownMethodAlias
  #
  # source://steep//lib/steep/diagnostic/signature.rb#144
  def initialize(class_name:, method_name:, location:); end

  # Returns the value of attribute class_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#141
  def class_name; end

  # source://steep//lib/steep/diagnostic/signature.rb#150
  def header_line; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#142
  def method_name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#67
class Steep::Diagnostic::Signature::UnknownTypeName < ::Steep::Diagnostic::Signature::Base
  # @return [UnknownTypeName] a new instance of UnknownTypeName
  #
  # source://steep//lib/steep/diagnostic/signature.rb#70
  def initialize(name:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#75
  def header_line; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#68
  def name; end
end

# source://steep//lib/steep/diagnostic/signature.rb#467
class Steep::Diagnostic::Signature::UnsatisfiableGenericsDefaultType < ::Steep::Diagnostic::Signature::Base
  include ::Steep::Diagnostic::ResultPrinter2

  # @return [UnsatisfiableGenericsDefaultType] a new instance of UnsatisfiableGenericsDefaultType
  #
  # source://steep//lib/steep/diagnostic/signature.rb#472
  def initialize(param_name, result, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#482
  def header_line; end

  # Returns the value of attribute param_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#468
  def param_name; end

  # source://steep//lib/steep/diagnostic/signature.rb#478
  def relation; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#468
  def result; end
end

# source://steep//lib/steep/diagnostic/signature.rb#104
class Steep::Diagnostic::Signature::UnsatisfiableTypeApplication < ::Steep::Diagnostic::Signature::Base
  include ::Steep::Diagnostic::ResultPrinter2

  # @return [UnsatisfiableTypeApplication] a new instance of UnsatisfiableTypeApplication
  #
  # source://steep//lib/steep/diagnostic/signature.rb#112
  def initialize(type_name:, type_arg:, type_param:, result:, location:); end

  # source://steep//lib/steep/diagnostic/signature.rb#120
  def header_line; end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#108
  def result; end

  # Returns the value of attribute type_arg.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#106
  def type_arg; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#105
  def type_name; end

  # Returns the value of attribute type_param.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#107
  def type_param; end
end

# source://steep//lib/steep/diagnostic/signature.rb#276
class Steep::Diagnostic::Signature::VariableDuplicationError < ::Steep::Diagnostic::Signature::Base
  # @return [VariableDuplicationError] a new instance of VariableDuplicationError
  #
  # source://steep//lib/steep/diagnostic/signature.rb#281
  def initialize(type_name:, variable_name:, location:); end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#279
  def location; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#277
  def type_name; end

  # Returns the value of attribute variable_name.
  #
  # source://steep//lib/steep/diagnostic/signature.rb#278
  def variable_name; end
end

# source://steep//lib/steep/drivers/utils/driver_helper.rb#2
module Steep::Drivers; end

# source://steep//lib/steep/drivers/annotations.rb#3
class Steep::Drivers::Annotations
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Annotations] a new instance of Annotations
  #
  # source://steep//lib/steep/drivers/annotations.rb#10
  def initialize(stdout:, stderr:); end

  # Returns the value of attribute command_line_patterns.
  #
  # source://steep//lib/steep/drivers/annotations.rb#4
  def command_line_patterns; end

  # source://steep//lib/steep/drivers/annotations.rb#17
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/annotations.rb#6
  def stderr; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/annotations.rb#5
  def stdout; end
end

# source://steep//lib/steep/drivers/check.rb#3
class Steep::Drivers::Check
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Check] a new instance of Check
  #
  # source://steep//lib/steep/drivers/check.rb#23
  def initialize(stdout:, stderr:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/drivers/check.rb#37
  def active_group?(group); end

  # Returns the value of attribute active_group_names.
  #
  # source://steep//lib/steep/drivers/check.rb#14
  def active_group_names; end

  # Returns the value of attribute command_line_patterns.
  #
  # source://steep//lib/steep/drivers/check.rb#8
  def command_line_patterns; end

  # Returns the value of attribute formatter.
  #
  # source://steep//lib/steep/drivers/check.rb#19
  def formatter; end

  # Sets the attribute formatter
  #
  # @param value the value to set the attribute formatter to.
  #
  # source://steep//lib/steep/drivers/check.rb#19
  def formatter=(_arg0); end

  # Returns the value of attribute jobs_option.
  #
  # source://steep//lib/steep/drivers/check.rb#12
  def jobs_option; end

  # source://steep//lib/steep/drivers/check.rb#209
  def load_files(files, target, group, params:); end

  # source://steep//lib/steep/drivers/check.rb#239
  def print_expectations(project:, all_files:, expectations_path:, notifications:); end

  # source://steep//lib/steep/drivers/check.rb#315
  def print_result(project:, notifications:); end

  # source://steep//lib/steep/drivers/check.rb#53
  def run; end

  # source://steep//lib/steep/drivers/check.rb#288
  def save_expectations(project:, all_files:, expectations_path:, notifications:); end

  # Returns the value of attribute save_expectations_path.
  #
  # source://steep//lib/steep/drivers/check.rb#10
  def save_expectations_path; end

  # Sets the attribute save_expectations_path
  #
  # @param value the value to set the attribute save_expectations_path to.
  #
  # source://steep//lib/steep/drivers/check.rb#10
  def save_expectations_path=(_arg0); end

  # Returns the value of attribute severity_level.
  #
  # source://steep//lib/steep/drivers/check.rb#11
  def severity_level; end

  # Sets the attribute severity_level
  #
  # @param value the value to set the attribute severity_level to.
  #
  # source://steep//lib/steep/drivers/check.rb#11
  def severity_level=(_arg0); end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/check.rb#7
  def stderr; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/check.rb#6
  def stdout; end

  # Returns the value of attribute targets.
  #
  # source://steep//lib/steep/drivers/check.rb#13
  def targets; end

  # Returns the value of attribute type_check_code.
  #
  # source://steep//lib/steep/drivers/check.rb#15
  def type_check_code; end

  # Sets the attribute type_check_code
  #
  # @param value the value to set the attribute type_check_code to.
  #
  # source://steep//lib/steep/drivers/check.rb#15
  def type_check_code=(_arg0); end

  # Returns the value of attribute validate_group_signatures.
  #
  # source://steep//lib/steep/drivers/check.rb#16
  def validate_group_signatures; end

  # Sets the attribute validate_group_signatures
  #
  # @param value the value to set the attribute validate_group_signatures to.
  #
  # source://steep//lib/steep/drivers/check.rb#16
  def validate_group_signatures=(_arg0); end

  # Returns the value of attribute validate_library_signatures.
  #
  # source://steep//lib/steep/drivers/check.rb#18
  def validate_library_signatures; end

  # Sets the attribute validate_library_signatures
  #
  # @param value the value to set the attribute validate_library_signatures to.
  #
  # source://steep//lib/steep/drivers/check.rb#18
  def validate_library_signatures=(_arg0); end

  # Returns the value of attribute validate_project_signatures.
  #
  # source://steep//lib/steep/drivers/check.rb#17
  def validate_project_signatures; end

  # Sets the attribute validate_project_signatures
  #
  # @param value the value to set the attribute validate_project_signatures to.
  #
  # source://steep//lib/steep/drivers/check.rb#17
  def validate_project_signatures=(_arg0); end

  # Returns the value of attribute with_expectations_path.
  #
  # source://steep//lib/steep/drivers/check.rb#9
  def with_expectations_path; end

  # Sets the attribute with_expectations_path
  #
  # @param value the value to set the attribute with_expectations_path to.
  #
  # source://steep//lib/steep/drivers/check.rb#9
  def with_expectations_path=(_arg0); end
end

# source://steep//lib/steep/drivers/check.rb#4
Steep::Drivers::Check::LSP = LanguageServer::Protocol

# source://steep//lib/steep/drivers/checkfile.rb#3
class Steep::Drivers::Checkfile
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Checkfile] a new instance of Checkfile
  #
  # source://steep//lib/steep/drivers/checkfile.rb#15
  def initialize(stdout:, stderr:); end

  # Returns the value of attribute all_rbs.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#9
  def all_rbs; end

  # Sets the attribute all_rbs
  #
  # @param value the value to set the attribute all_rbs to.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#9
  def all_rbs=(_arg0); end

  # Returns the value of attribute all_ruby.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#9
  def all_ruby; end

  # Sets the attribute all_ruby
  #
  # @param value the value to set the attribute all_ruby to.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#9
  def all_ruby=(_arg0); end

  # Returns the value of attribute command_line_args.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#8
  def command_line_args; end

  # Returns the value of attribute jobs_option.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#11
  def jobs_option; end

  # source://steep//lib/steep/drivers/checkfile.rb#27
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#7
  def stderr; end

  # Returns the value of attribute stdin_input.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#10
  def stdin_input; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/checkfile.rb#6
  def stdout; end
end

# source://steep//lib/steep/drivers/checkfile.rb#4
Steep::Drivers::Checkfile::LSP = LanguageServer::Protocol

# source://steep//lib/steep/drivers/diagnostic_printer.rb#3
class Steep::Drivers::DiagnosticPrinter
  # @return [DiagnosticPrinter] a new instance of DiagnosticPrinter
  #
  # source://steep//lib/steep/drivers/diagnostic_printer.rb#10
  def initialize(stdout:, buffer:, formatter: T.unsafe(nil)); end

  # Returns the value of attribute buffer.
  #
  # source://steep//lib/steep/drivers/diagnostic_printer.rb#8
  def buffer; end

  # source://steep//lib/steep/drivers/diagnostic_printer.rb#23
  def print(diagnostic, prefix: T.unsafe(nil), source: T.unsafe(nil)); end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/diagnostic_printer.rb#7
  def stdout; end
end

# source://steep//lib/steep/drivers/diagnostic_printer/base_formatter.rb#4
class Steep::Drivers::DiagnosticPrinter::BaseFormatter
  # @return [BaseFormatter] a new instance of BaseFormatter
  #
  # source://steep//lib/steep/drivers/diagnostic_printer/base_formatter.rb#8
  def initialize(stdout:, buffer:); end

  # Returns the value of attribute buffer.
  #
  # source://steep//lib/steep/drivers/diagnostic_printer/base_formatter.rb#6
  def buffer; end

  # source://steep//lib/steep/drivers/diagnostic_printer/base_formatter.rb#13
  def path; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/diagnostic_printer/base_formatter.rb#5
  def stdout; end
end

# source://steep//lib/steep/drivers/diagnostic_printer/code_formatter.rb#4
class Steep::Drivers::DiagnosticPrinter::CodeFormatter < ::Steep::Drivers::DiagnosticPrinter::BaseFormatter
  # source://steep//lib/steep/drivers/diagnostic_printer/code_formatter.rb#5
  def print(diagnostic, prefix: T.unsafe(nil), source: T.unsafe(nil)); end

  private

  # source://steep//lib/steep/drivers/diagnostic_printer/code_formatter.rb#33
  def color_severity(string, severity:); end

  # source://steep//lib/steep/drivers/diagnostic_printer/code_formatter.rb#65
  def location(diagnostic); end

  # source://steep//lib/steep/drivers/diagnostic_printer/code_formatter.rb#70
  def print_source_line(diagnostic, prefix: T.unsafe(nil)); end

  # source://steep//lib/steep/drivers/diagnostic_printer/code_formatter.rb#48
  def severity_message(severity); end
end

# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions
#
# source://steep//lib/steep/drivers/diagnostic_printer/github_actions_formatter.rb#5
class Steep::Drivers::DiagnosticPrinter::GitHubActionsFormatter < ::Steep::Drivers::DiagnosticPrinter::BaseFormatter
  # source://steep//lib/steep/drivers/diagnostic_printer/github_actions_formatter.rb#8
  def print(diagnostic, prefix: T.unsafe(nil), source: T.unsafe(nil)); end

  private

  # source://steep//lib/steep/drivers/diagnostic_printer/github_actions_formatter.rb#38
  def github_escape(string); end

  # source://steep//lib/steep/drivers/diagnostic_printer/github_actions_formatter.rb#23
  def github_severity(severity); end
end

# source://steep//lib/steep/drivers/diagnostic_printer/github_actions_formatter.rb#6
Steep::Drivers::DiagnosticPrinter::GitHubActionsFormatter::ESCAPE_MAP = T.let(T.unsafe(nil), Hash)

# source://steep//lib/steep/drivers/diagnostic_printer.rb#5
Steep::Drivers::DiagnosticPrinter::LSP = LanguageServer::Protocol

# source://steep//lib/steep/drivers/init.rb#3
class Steep::Drivers::Init
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Init] a new instance of Init
  #
  # source://steep//lib/steep/drivers/init.rb#45
  def initialize(stdout:, stderr:); end

  # Returns the value of attribute force_write.
  #
  # source://steep//lib/steep/drivers/init.rb#6
  def force_write; end

  # Sets the attribute force_write
  #
  # @param value the value to set the attribute force_write to.
  #
  # source://steep//lib/steep/drivers/init.rb#6
  def force_write=(_arg0); end

  # source://steep//lib/steep/drivers/init.rb#51
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/init.rb#5
  def stderr; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/init.rb#4
  def stdout; end
end

# source://steep//lib/steep/drivers/init.rb#10
Steep::Drivers::Init::TEMPLATE = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/drivers/langserver.rb#3
class Steep::Drivers::Langserver
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Langserver] a new instance of Langserver
  #
  # source://steep//lib/steep/drivers/langserver.rb#15
  def initialize(stdout:, stderr:, stdin:); end

  # Returns the value of attribute jobs_option.
  #
  # source://steep//lib/steep/drivers/langserver.rb#10
  def jobs_option; end

  # source://steep//lib/steep/drivers/langserver.rb#33
  def project; end

  # source://steep//lib/steep/drivers/langserver.rb#29
  def reader; end

  # Returns the value of attribute refork.
  #
  # source://steep//lib/steep/drivers/langserver.rb#11
  def refork; end

  # Sets the attribute refork
  #
  # @param value the value to set the attribute refork to.
  #
  # source://steep//lib/steep/drivers/langserver.rb#11
  def refork=(_arg0); end

  # source://steep//lib/steep/drivers/langserver.rb#37
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/langserver.rb#5
  def stderr; end

  # Returns the value of attribute stdin.
  #
  # source://steep//lib/steep/drivers/langserver.rb#6
  def stdin; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/langserver.rb#4
  def stdout; end

  # Returns the value of attribute type_check_queue.
  #
  # source://steep//lib/steep/drivers/langserver.rb#8
  def type_check_queue; end

  # Returns the value of attribute type_check_thread.
  #
  # source://steep//lib/steep/drivers/langserver.rb#9
  def type_check_thread; end

  # Returns the value of attribute write_mutex.
  #
  # source://steep//lib/steep/drivers/langserver.rb#7
  def write_mutex; end

  # source://steep//lib/steep/drivers/langserver.rb#25
  def writer; end
end

# source://steep//lib/steep/drivers/print_project.rb#5
class Steep::Drivers::PrintProject
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [PrintProject] a new instance of PrintProject
  #
  # source://steep//lib/steep/drivers/print_project.rb#14
  def initialize(stdout:, stderr:); end

  # source://steep//lib/steep/drivers/print_project.rb#20
  def as_json(project); end

  # Returns the value of attribute files.
  #
  # source://steep//lib/steep/drivers/print_project.rb#10
  def files; end

  # source://steep//lib/steep/drivers/print_project.rb#66
  def group_as_json(group); end

  # source://steep//lib/steep/drivers/print_project.rb#86
  def pattern_as_json(pattern); end

  # Returns the value of attribute print_files.
  #
  # source://steep//lib/steep/drivers/print_project.rb#9
  def print_files; end

  # Sets the attribute print_files
  #
  # @param value the value to set the attribute print_files to.
  #
  # source://steep//lib/steep/drivers/print_project.rb#9
  def print_files=(_arg0); end

  # source://steep//lib/steep/drivers/print_project.rb#93
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/print_project.rb#7
  def stderr; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/print_project.rb#6
  def stdout; end

  # source://steep//lib/steep/drivers/print_project.rb#29
  def target_as_json(target); end
end

# source://steep//lib/steep/drivers/stats.rb#5
class Steep::Drivers::Stats
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Stats] a new instance of Stats
  #
  # source://steep//lib/steep/drivers/stats.rb#111
  def initialize(stdout:, stderr:); end

  # Returns the value of attribute command_line_patterns.
  #
  # source://steep//lib/steep/drivers/stats.rb#105
  def command_line_patterns; end

  # Returns the value of attribute format.
  #
  # source://steep//lib/steep/drivers/stats.rb#106
  def format; end

  # Sets the attribute format
  #
  # @param value the value to set the attribute format to.
  #
  # source://steep//lib/steep/drivers/stats.rb#106
  def format=(_arg0); end

  # Returns the value of attribute jobs_option.
  #
  # source://steep//lib/steep/drivers/stats.rb#107
  def jobs_option; end

  # source://steep//lib/steep/drivers/stats.rb#118
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/stats.rb#104
  def stderr; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/stats.rb#103
  def stdout; end
end

# source://steep//lib/steep/drivers/stats.rb#6
class Steep::Drivers::Stats::CSVPrinter
  # @return [CSVPrinter] a new instance of CSVPrinter
  #
  # source://steep//lib/steep/drivers/stats.rb#9
  def initialize(io:); end

  # Returns the value of attribute io.
  #
  # source://steep//lib/steep/drivers/stats.rb#7
  def io; end

  # source://steep//lib/steep/drivers/stats.rb#13
  def print(stats_result); end
end

# source://steep//lib/steep/drivers/stats.rb#51
class Steep::Drivers::Stats::TablePrinter
  # @return [TablePrinter] a new instance of TablePrinter
  #
  # source://steep//lib/steep/drivers/stats.rb#54
  def initialize(io:); end

  # Returns the value of attribute io.
  #
  # source://steep//lib/steep/drivers/stats.rb#52
  def io; end

  # source://steep//lib/steep/drivers/stats.rb#58
  def print(stats_result); end
end

# source://steep//lib/steep/drivers/utils/driver_helper.rb#3
module Steep::Drivers::Utils; end

# source://steep//lib/steep/drivers/utils/driver_helper.rb#4
module Steep::Drivers::Utils::DriverHelper
  # Returns the value of attribute disable_install_collection.
  #
  # source://steep//lib/steep/drivers/utils/driver_helper.rb#6
  def disable_install_collection; end

  # Sets the attribute disable_install_collection
  #
  # @param value the value to set the attribute disable_install_collection to.
  #
  # source://steep//lib/steep/drivers/utils/driver_helper.rb#6
  def disable_install_collection=(_arg0); end

  # source://steep//lib/steep/drivers/utils/driver_helper.rb#52
  def install_collection(target, config_path); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/drivers/utils/driver_helper.rb#124
  def keep_diagnostic?(diagnostic, severity_level:); end

  # source://steep//lib/steep/drivers/utils/driver_helper.rb#8
  def load_config(path: T.unsafe(nil)); end

  # source://steep//lib/steep/drivers/utils/driver_helper.rb#70
  def request_id; end

  # source://steep//lib/steep/drivers/utils/driver_helper.rb#99
  def shutdown_exit(writer:, reader:); end

  # Returns the value of attribute steepfile.
  #
  # source://steep//lib/steep/drivers/utils/driver_helper.rb#5
  def steepfile; end

  # Sets the attribute steepfile
  #
  # @param value the value to set the attribute steepfile to.
  #
  # source://steep//lib/steep/drivers/utils/driver_helper.rb#5
  def steepfile=(_arg0); end

  # source://steep//lib/steep/drivers/utils/driver_helper.rb#107
  def wait_for_message(reader:, unknown_messages: T.unsafe(nil), &block); end

  # source://steep//lib/steep/drivers/utils/driver_helper.rb#74
  def wait_for_response_id(reader:, id:, unknown_responses: T.unsafe(nil), &block); end
end

# source://steep//lib/steep/drivers/utils/driver_helper.rb#139
Steep::Drivers::Utils::DriverHelper::DEFAULT_CLI_LSP_INITIALIZE_PARAMS = T.let(T.unsafe(nil), Hash)

# source://steep//lib/steep/drivers/utils/jobs_option.rb#4
class Steep::Drivers::Utils::JobsOption
  # @return [JobsOption] a new instance of JobsOption
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#7
  def initialize(jobs_count_modifier: T.unsafe(nil)); end

  # source://steep//lib/steep/drivers/utils/jobs_option.rb#11
  def default_jobs_count; end

  # Returns the value of attribute jobs_count.
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#5
  def jobs_count; end

  # Sets the attribute jobs_count
  #
  # @param value the value to set the attribute jobs_count to.
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#5
  def jobs_count=(_arg0); end

  # Returns the value of attribute jobs_count_modifier.
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#5
  def jobs_count_modifier; end

  # Sets the attribute jobs_count_modifier
  #
  # @param value the value to set the attribute jobs_count_modifier to.
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#5
  def jobs_count_modifier=(_arg0); end

  # source://steep//lib/steep/drivers/utils/jobs_option.rb#15
  def jobs_count_value; end

  # Returns the value of attribute steep_command.
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#5
  def steep_command; end

  # Sets the attribute steep_command
  #
  # @param value the value to set the attribute steep_command to.
  #
  # source://steep//lib/steep/drivers/utils/jobs_option.rb#5
  def steep_command=(_arg0); end
end

# source://steep//lib/steep/drivers/vendor.rb#3
class Steep::Drivers::Vendor
  # @return [Vendor] a new instance of Vendor
  #
  # source://steep//lib/steep/drivers/vendor.rb#11
  def initialize(stdout:, stderr:, stdin:); end

  # Returns the value of attribute clean_before.
  #
  # source://steep//lib/steep/drivers/vendor.rb#9
  def clean_before; end

  # Sets the attribute clean_before
  #
  # @param value the value to set the attribute clean_before to.
  #
  # source://steep//lib/steep/drivers/vendor.rb#9
  def clean_before=(_arg0); end

  # source://steep//lib/steep/drivers/vendor.rb#20
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/vendor.rb#5
  def stderr; end

  # Returns the value of attribute stdin.
  #
  # source://steep//lib/steep/drivers/vendor.rb#6
  def stdin; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/vendor.rb#4
  def stdout; end

  # Returns the value of attribute vendor_dir.
  #
  # source://steep//lib/steep/drivers/vendor.rb#8
  def vendor_dir; end

  # Sets the attribute vendor_dir
  #
  # @param value the value to set the attribute vendor_dir to.
  #
  # source://steep//lib/steep/drivers/vendor.rb#8
  def vendor_dir=(_arg0); end
end

# source://steep//lib/steep/drivers/watch.rb#3
class Steep::Drivers::Watch
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Watch] a new instance of Watch
  #
  # source://steep//lib/steep/drivers/watch.rb#15
  def initialize(stdout:, stderr:); end

  # Returns the value of attribute dirs.
  #
  # source://steep//lib/steep/drivers/watch.rb#4
  def dirs; end

  # Returns the value of attribute jobs_option.
  #
  # source://steep//lib/steep/drivers/watch.rb#9
  def jobs_option; end

  # Returns the value of attribute queue.
  #
  # source://steep//lib/steep/drivers/watch.rb#7
  def queue; end

  # source://steep//lib/steep/drivers/watch.rb#28
  def run; end

  # Returns the value of attribute severity_level.
  #
  # source://steep//lib/steep/drivers/watch.rb#8
  def severity_level; end

  # Sets the attribute severity_level
  #
  # @param value the value to set the attribute severity_level to.
  #
  # source://steep//lib/steep/drivers/watch.rb#8
  def severity_level=(_arg0); end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/watch.rb#6
  def stderr; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/watch.rb#5
  def stdout; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/drivers/watch.rb#24
  def watching?(changed_path, files:, dirs:); end
end

# source://steep//lib/steep/drivers/watch.rb#13
Steep::Drivers::Watch::LSP = LanguageServer::Protocol

# source://steep//lib/steep/drivers/worker.rb#3
class Steep::Drivers::Worker
  include ::Steep::Drivers::Utils::DriverHelper

  # @return [Worker] a new instance of Worker
  #
  # source://steep//lib/steep/drivers/worker.rb#16
  def initialize(stdout:, stderr:, stdin:); end

  # Returns the value of attribute commandline_args.
  #
  # source://steep//lib/steep/drivers/worker.rb#11
  def commandline_args; end

  # Sets the attribute commandline_args
  #
  # @param value the value to set the attribute commandline_args to.
  #
  # source://steep//lib/steep/drivers/worker.rb#11
  def commandline_args=(_arg0); end

  # Returns the value of attribute delay_shutdown.
  #
  # source://steep//lib/steep/drivers/worker.rb#8
  def delay_shutdown; end

  # Sets the attribute delay_shutdown
  #
  # @param value the value to set the attribute delay_shutdown to.
  #
  # source://steep//lib/steep/drivers/worker.rb#8
  def delay_shutdown=(_arg0); end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/drivers/worker.rb#10
  def index; end

  # Sets the attribute index
  #
  # @param value the value to set the attribute index to.
  #
  # source://steep//lib/steep/drivers/worker.rb#10
  def index=(_arg0); end

  # Returns the value of attribute io_socket.
  #
  # source://steep//lib/steep/drivers/worker.rb#12
  def io_socket; end

  # Sets the attribute io_socket
  #
  # @param value the value to set the attribute io_socket to.
  #
  # source://steep//lib/steep/drivers/worker.rb#12
  def io_socket=(_arg0); end

  # Returns the value of attribute max_index.
  #
  # source://steep//lib/steep/drivers/worker.rb#9
  def max_index; end

  # Sets the attribute max_index
  #
  # @param value the value to set the attribute max_index to.
  #
  # source://steep//lib/steep/drivers/worker.rb#9
  def max_index=(_arg0); end

  # source://steep//lib/steep/drivers/worker.rb#23
  def run; end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/drivers/worker.rb#4
  def stderr; end

  # Returns the value of attribute stdin.
  #
  # source://steep//lib/steep/drivers/worker.rb#4
  def stdin; end

  # Returns the value of attribute stdout.
  #
  # source://steep//lib/steep/drivers/worker.rb#4
  def stdout; end

  # Returns the value of attribute worker_name.
  #
  # source://steep//lib/steep/drivers/worker.rb#7
  def worker_name; end

  # Sets the attribute worker_name
  #
  # @param value the value to set the attribute worker_name to.
  #
  # source://steep//lib/steep/drivers/worker.rb#7
  def worker_name=(_arg0); end

  # Returns the value of attribute worker_type.
  #
  # source://steep//lib/steep/drivers/worker.rb#6
  def worker_type; end

  # Sets the attribute worker_type
  #
  # @param value the value to set the attribute worker_type to.
  #
  # source://steep//lib/steep/drivers/worker.rb#6
  def worker_type=(_arg0); end
end

# source://steep//lib/steep/equatable.rb#2
module Steep::Equatable
  # source://steep//lib/steep/equatable.rb#3
  def ==(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/equatable.rb#13
  def eql?(other); end

  # source://steep//lib/steep/equatable.rb#17
  def hash; end
end

# source://steep//lib/steep/expectations.rb#2
class Steep::Expectations
  # @return [Expectations] a new instance of Expectations
  #
  # source://steep//lib/steep/expectations.rb#190
  def initialize; end

  # Returns the value of attribute diagnostics.
  #
  # source://steep//lib/steep/expectations.rb#188
  def diagnostics; end

  # source://steep//lib/steep/expectations.rb#194
  def test(path:, diagnostics:); end

  # source://steep//lib/steep/expectations.rb#202
  def to_yaml; end

  class << self
    # source://steep//lib/steep/expectations.rb#198
    def empty; end

    # source://steep//lib/steep/expectations.rb#216
    def load(path:, content:); end
  end
end

# source://steep//lib/steep/expectations.rb#3
class Steep::Expectations::Diagnostic < ::Struct
  # source://steep//lib/steep/expectations.rb#88
  def lsp_severity; end

  # source://steep//lib/steep/expectations.rb#121
  def sort_key; end

  # source://steep//lib/steep/expectations.rb#70
  def to_hash; end

  # source://steep//lib/steep/expectations.rb#103
  def to_lsp; end

  class << self
    # source://steep//lib/steep/expectations.rb#6
    def from_hash(hash); end

    # source://steep//lib/steep/expectations.rb#37
    def from_lsp(diagnostic); end
  end
end

# source://steep//lib/steep/expectations.rb#4
Steep::Expectations::Diagnostic::DiagnosticSeverity = LanguageServer::Protocol::Constant::DiagnosticSeverity

# source://steep//lib/steep/expectations.rb#186
Steep::Expectations::LSP = LanguageServer::Protocol

# source://steep//lib/steep/expectations.rb#134
class Steep::Expectations::TestResult
  # @return [TestResult] a new instance of TestResult
  #
  # source://steep//lib/steep/expectations.rb#139
  def initialize(path:, expectation:, actual:); end

  # Returns the value of attribute actual.
  #
  # source://steep//lib/steep/expectations.rb#137
  def actual; end

  # source://steep//lib/steep/expectations.rb#153
  def each_diagnostics; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/expectations.rb#145
  def empty?; end

  # Returns the value of attribute expectation.
  #
  # source://steep//lib/steep/expectations.rb#136
  def expectation; end

  # source://steep//lib/steep/expectations.rb#173
  def expected_diagnostics; end

  # source://steep//lib/steep/expectations.rb#181
  def missing_diagnostics; end

  # Returns the value of attribute path.
  #
  # source://steep//lib/steep/expectations.rb#135
  def path; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/expectations.rb#149
  def satisfied?; end

  # source://steep//lib/steep/expectations.rb#177
  def unexpected_diagnostics; end
end

# source://steep//lib/steep/index/rbs_index.rb#2
module Steep::Index; end

# source://steep//lib/steep/index/rbs_index.rb#3
class Steep::Index::RBSIndex
  # @return [RBSIndex] a new instance of RBSIndex
  #
  # source://steep//lib/steep/index/rbs_index.rb#132
  def initialize; end

  # source://steep//lib/steep/index/rbs_index.rb#173
  def add_constant_declaration(const_name, decl); end

  # source://steep//lib/steep/index/rbs_index.rb#177
  def add_global_declaration(global_name, decl); end

  # source://steep//lib/steep/index/rbs_index.rb#169
  def add_method_declaration(method_name, member); end

  # source://steep//lib/steep/index/rbs_index.rb#165
  def add_type_declaration(type_name, declaration); end

  # source://steep//lib/steep/index/rbs_index.rb#190
  def add_type_reference(type_name, ref); end

  # Returns the value of attribute const_index.
  #
  # source://steep//lib/steep/index/rbs_index.rb#129
  def const_index; end

  # source://steep//lib/steep/index/rbs_index.rb#181
  def each_declaration(type_name: T.unsafe(nil), method_name: T.unsafe(nil), const_name: T.unsafe(nil), global_name: T.unsafe(nil), &block); end

  # source://steep//lib/steep/index/rbs_index.rb#154
  def each_entry(&block); end

  # source://steep//lib/steep/index/rbs_index.rb#194
  def each_reference(type_name:, &block); end

  # source://steep//lib/steep/index/rbs_index.rb#139
  def entry(type_name: T.unsafe(nil), method_name: T.unsafe(nil), const_name: T.unsafe(nil), global_name: T.unsafe(nil)); end

  # Returns the value of attribute global_index.
  #
  # source://steep//lib/steep/index/rbs_index.rb#130
  def global_index; end

  # Returns the value of attribute method_index.
  #
  # source://steep//lib/steep/index/rbs_index.rb#128
  def method_index; end

  # Returns the value of attribute type_index.
  #
  # source://steep//lib/steep/index/rbs_index.rb#127
  def type_index; end
end

# source://steep//lib/steep/index/rbs_index.rb#205
class Steep::Index::RBSIndex::Builder
  # @return [Builder] a new instance of Builder
  #
  # source://steep//lib/steep/index/rbs_index.rb#208
  def initialize(index:); end

  # source://steep//lib/steep/index/rbs_index.rb#291
  def env(env); end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/index/rbs_index.rb#206
  def index; end

  # source://steep//lib/steep/index/rbs_index.rb#212
  def member(type_name, member); end

  # source://steep//lib/steep/index/rbs_index.rb#280
  def type_reference(type, from:); end
end

# source://steep//lib/steep/index/rbs_index.rb#85
class Steep::Index::RBSIndex::ConstantEntry
  # @return [ConstantEntry] a new instance of ConstantEntry
  #
  # source://steep//lib/steep/index/rbs_index.rb#89
  def initialize(const_name:); end

  # source://steep//lib/steep/index/rbs_index.rb#94
  def add_declaration(decl); end

  # Returns the value of attribute const_name.
  #
  # source://steep//lib/steep/index/rbs_index.rb#86
  def const_name; end

  # Returns the value of attribute declarations.
  #
  # source://steep//lib/steep/index/rbs_index.rb#87
  def declarations; end
end

# source://steep//lib/steep/index/rbs_index.rb#106
class Steep::Index::RBSIndex::GlobalEntry
  # @return [GlobalEntry] a new instance of GlobalEntry
  #
  # source://steep//lib/steep/index/rbs_index.rb#110
  def initialize(global_name:); end

  # source://steep//lib/steep/index/rbs_index.rb#115
  def add_declaration(decl); end

  # Returns the value of attribute declarations.
  #
  # source://steep//lib/steep/index/rbs_index.rb#108
  def declarations; end

  # Returns the value of attribute global_name.
  #
  # source://steep//lib/steep/index/rbs_index.rb#107
  def global_name; end
end

# source://steep//lib/steep/index/rbs_index.rb#58
class Steep::Index::RBSIndex::MethodEntry
  # @return [MethodEntry] a new instance of MethodEntry
  #
  # source://steep//lib/steep/index/rbs_index.rb#63
  def initialize(method_name:); end

  # source://steep//lib/steep/index/rbs_index.rb#69
  def add_declaration(decl); end

  # Returns the value of attribute declarations.
  #
  # source://steep//lib/steep/index/rbs_index.rb#60
  def declarations; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/index/rbs_index.rb#59
  def method_name; end

  # Returns the value of attribute references.
  #
  # source://steep//lib/steep/index/rbs_index.rb#61
  def references; end
end

# source://steep//lib/steep/index/rbs_index.rb#4
class Steep::Index::RBSIndex::TypeEntry
  # @return [TypeEntry] a new instance of TypeEntry
  #
  # source://steep//lib/steep/index/rbs_index.rb#9
  def initialize(type_name:); end

  # source://steep//lib/steep/index/rbs_index.rb#15
  def add_declaration(decl); end

  # source://steep//lib/steep/index/rbs_index.rb#32
  def add_reference(ref); end

  # Returns the value of attribute declarations.
  #
  # source://steep//lib/steep/index/rbs_index.rb#6
  def declarations; end

  # Returns the value of attribute references.
  #
  # source://steep//lib/steep/index/rbs_index.rb#7
  def references; end

  # Returns the value of attribute type_name.
  #
  # source://steep//lib/steep/index/rbs_index.rb#5
  def type_name; end
end

# source://steep//lib/steep/index/signature_symbol_provider.rb#3
class Steep::Index::SignatureSymbolProvider
  # @return [SignatureSymbolProvider] a new instance of SignatureSymbolProvider
  #
  # source://steep//lib/steep/index/signature_symbol_provider.rb#13
  def initialize(project:, assignment:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/index/signature_symbol_provider.rb#42
  def assigned?(target, path); end

  # Returns the value of attribute assignment.
  #
  # source://steep//lib/steep/index/signature_symbol_provider.rb#11
  def assignment; end

  # Returns the value of attribute indexes.
  #
  # source://steep//lib/steep/index/signature_symbol_provider.rb#10
  def indexes; end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/index/signature_symbol_provider.rb#9
  def project; end

  # source://steep//lib/steep/index/signature_symbol_provider.rb#52
  def query_symbol(query); end

  class << self
    # source://steep//lib/steep/index/signature_symbol_provider.rb#19
    def test_const_name(query, type_name); end

    # source://steep//lib/steep/index/signature_symbol_provider.rb#19
    def test_global_name(query, type_name); end

    # source://steep//lib/steep/index/signature_symbol_provider.rb#33
    def test_method_name(query, method_name); end

    # source://steep//lib/steep/index/signature_symbol_provider.rb#19
    def test_type_name(query, type_name); end
  end
end

# source://steep//lib/steep/index/signature_symbol_provider.rb#4
Steep::Index::SignatureSymbolProvider::LSP = LanguageServer::Protocol

# source://steep//lib/steep/index/signature_symbol_provider.rb#6
class Steep::Index::SignatureSymbolProvider::SymbolInformation < ::Struct; end

# source://steep//lib/steep/index/source_index.rb#3
class Steep::Index::SourceIndex
  # @return [SourceIndex] a new instance of SourceIndex
  #
  # source://steep//lib/steep/index/source_index.rb#96
  def initialize(source:, parent: T.unsafe(nil)); end

  # source://steep//lib/steep/index/source_index.rb#126
  def add_definition(definition:, constant: T.unsafe(nil), method: T.unsafe(nil)); end

  # source://steep//lib/steep/index/source_index.rb#132
  def add_reference(ref:, constant: T.unsafe(nil), method: T.unsafe(nil)); end

  # Returns the value of attribute constant_index.
  #
  # source://steep//lib/steep/index/source_index.rb#89
  def constant_index; end

  # Returns the value of attribute count.
  #
  # source://steep//lib/steep/index/source_index.rb#93
  def count; end

  # source://steep//lib/steep/index/source_index.rb#138
  def entry(constant: T.unsafe(nil), method: T.unsafe(nil)); end

  # source://steep//lib/steep/index/source_index.rb#111
  def merge!(child); end

  # Returns the value of attribute method_index.
  #
  # source://steep//lib/steep/index/source_index.rb#90
  def method_index; end

  # source://steep//lib/steep/index/source_index.rb#107
  def new_child; end

  # Returns the value of attribute parent.
  #
  # source://steep//lib/steep/index/source_index.rb#92
  def parent; end

  # Returns the value of attribute parent_count.
  #
  # source://steep//lib/steep/index/source_index.rb#94
  def parent_count; end

  # source://steep//lib/steep/index/source_index.rb#149
  def reference(constant_node: T.unsafe(nil)); end

  # Returns the value of attribute source.
  #
  # source://steep//lib/steep/index/source_index.rb#88
  def source; end
end

# source://steep//lib/steep/index/source_index.rb#4
class Steep::Index::SourceIndex::ConstantEntry
  # @return [ConstantEntry] a new instance of ConstantEntry
  #
  # source://steep//lib/steep/index/source_index.rb#10
  def initialize(name:); end

  # source://steep//lib/steep/index/source_index.rb#17
  def add_definition(node); end

  # source://steep//lib/steep/index/source_index.rb#28
  def add_reference(node); end

  # Returns the value of attribute definitions.
  #
  # source://steep//lib/steep/index/source_index.rb#7
  def definitions; end

  # source://steep//lib/steep/index/source_index.rb#39
  def merge!(other); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/index/source_index.rb#5
  def name; end

  # Returns the value of attribute references.
  #
  # source://steep//lib/steep/index/source_index.rb#8
  def references; end
end

# source://steep//lib/steep/index/source_index.rb#46
class Steep::Index::SourceIndex::MethodEntry
  # @return [MethodEntry] a new instance of MethodEntry
  #
  # source://steep//lib/steep/index/source_index.rb#52
  def initialize(name:); end

  # source://steep//lib/steep/index/source_index.rb#59
  def add_definition(node); end

  # source://steep//lib/steep/index/source_index.rb#70
  def add_reference(node); end

  # Returns the value of attribute definitions.
  #
  # source://steep//lib/steep/index/source_index.rb#49
  def definitions; end

  # source://steep//lib/steep/index/source_index.rb#81
  def merge!(other); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/index/source_index.rb#47
  def name; end

  # Returns the value of attribute references.
  #
  # source://steep//lib/steep/index/source_index.rb#50
  def references; end
end

# source://steep//lib/steep/method_name.rb#2
class Steep::InstanceMethodName < ::Struct
  def method_name; end
  def method_name=(_); end

  # source://steep//lib/steep/method_name.rb#8
  def relative; end

  # source://steep//lib/steep/method_name.rb#4
  def to_s; end

  def type_name; end
  def type_name=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/interface/type_param.rb#2
module Steep::Interface; end

# source://steep//lib/steep/interface/block.rb#3
class Steep::Interface::Block
  # @return [Block] a new instance of Block
  #
  # source://steep//lib/steep/interface/block.rb#8
  def initialize(type:, optional:, self_type:); end

  # source://steep//lib/steep/interface/block.rb#82
  def +(other); end

  # source://steep//lib/steep/interface/block.rb#30
  def ==(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/block.rb#40
  def closed?; end

  # source://steep//lib/steep/interface/block.rb#30
  def eql?(other); end

  # source://steep//lib/steep/interface/block.rb#55
  def free_variables; end

  # source://steep//lib/steep/interface/block.rb#36
  def hash; end

  # source://steep//lib/steep/interface/block.rb#64
  def map_type(&block); end

  # Returns the value of attribute optional.
  #
  # source://steep//lib/steep/interface/block.rb#5
  def optional; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/block.rb#14
  def optional?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/block.rb#18
  def required?; end

  # Returns the value of attribute self_type.
  #
  # source://steep//lib/steep/interface/block.rb#6
  def self_type; end

  # source://steep//lib/steep/interface/block.rb#44
  def subst(s); end

  # source://steep//lib/steep/interface/block.rb#22
  def to_optional; end

  # source://steep//lib/steep/interface/block.rb#72
  def to_proc_type; end

  # source://steep//lib/steep/interface/block.rb#59
  def to_s; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/interface/block.rb#4
  def type; end
end

# source://steep//lib/steep/interface/builder.rb#3
class Steep::Interface::Builder
  # @return [Builder] a new instance of Builder
  #
  # source://steep//lib/steep/interface/builder.rb#59
  def initialize(factory, implicitly_returns_nil:); end

  # source://steep//lib/steep/interface/builder.rb#829
  def add_implicitly_returns_nil(annotations, method_type); end

  # source://steep//lib/steep/interface/builder.rb#234
  def app_subst(type); end

  # source://steep//lib/steep/interface/builder.rb#255
  def class_subst(type); end

  # Returns the value of attribute factory.
  #
  # source://steep//lib/steep/interface/builder.rb#57
  def factory; end

  # source://steep//lib/steep/interface/builder.rb#84
  def fetch_cache(cache, key); end

  # Returns the value of attribute implicitly_returns_nil.
  #
  # source://steep//lib/steep/interface/builder.rb#57
  def implicitly_returns_nil; end

  # source://steep//lib/steep/interface/builder.rb#270
  def interface_subst(type); end

  # source://steep//lib/steep/interface/builder.rb#392
  def intersection_shape(type, shapes); end

  # source://steep//lib/steep/interface/builder.rb#408
  def method_name_for(type_def, name); end

  # source://steep//lib/steep/interface/builder.rb#298
  def object_shape(type_name); end

  # Returns the value of attribute object_shape_cache.
  #
  # source://steep//lib/steep/interface/builder.rb#57
  def object_shape_cache; end

  # source://steep//lib/steep/interface/builder.rb#705
  def proc_shape(proc, proc_shape); end

  # source://steep//lib/steep/interface/builder.rb#92
  def raw_shape(type, config); end

  # source://steep//lib/steep/interface/builder.rb#590
  def record_shape(record); end

  # source://steep//lib/steep/interface/builder.rb#812
  def replace_kernel_class(method_name, method_def, method_type); end

  # source://steep//lib/steep/interface/builder.rb#728
  def replace_primitive_method(method_name, method_def, method_type); end

  # source://steep//lib/steep/interface/builder.rb#196
  def self_shape(type, config); end

  # source://steep//lib/steep/interface/builder.rb#67
  def shape(type, config); end

  # source://steep//lib/steep/interface/builder.rb#274
  def singleton_shape(type_name); end

  # Returns the value of attribute singleton_shape_cache.
  #
  # source://steep//lib/steep/interface/builder.rb#57
  def singleton_shape_cache; end

  # source://steep//lib/steep/interface/builder.rb#428
  def subtyping; end

  # source://steep//lib/steep/interface/builder.rb#432
  def tuple_shape(tuple); end

  # source://steep//lib/steep/interface/builder.rb#332
  def union_shape(shape_type, shapes); end

  # Returns the value of attribute union_shape_cache.
  #
  # source://steep//lib/steep/interface/builder.rb#57
  def union_shape_cache; end
end

# source://steep//lib/steep/interface/builder.rb#4
class Steep::Interface::Builder::Config
  # @return [Config] a new instance of Config
  #
  # source://steep//lib/steep/interface/builder.rb#7
  def initialize(self_type:, variable_bounds:, class_type: T.unsafe(nil), instance_type: T.unsafe(nil)); end

  # Returns the value of attribute class_type.
  #
  # source://steep//lib/steep/interface/builder.rb#5
  def class_type; end

  # Returns the value of attribute instance_type.
  #
  # source://steep//lib/steep/interface/builder.rb#5
  def instance_type; end

  # Returns the value of attribute self_type.
  #
  # source://steep//lib/steep/interface/builder.rb#5
  def self_type; end

  # source://steep//lib/steep/interface/builder.rb#18
  def subst; end

  # source://steep//lib/steep/interface/builder.rb#52
  def upper_bound(a); end

  # source://steep//lib/steep/interface/builder.rb#32
  def validate_class_type; end

  # source://steep//lib/steep/interface/builder.rb#36
  def validate_fvs(name, type); end

  # source://steep//lib/steep/interface/builder.rb#28
  def validate_instance_type; end

  # source://steep//lib/steep/interface/builder.rb#24
  def validate_self_type; end

  # Returns the value of attribute variable_bounds.
  #
  # source://steep//lib/steep/interface/builder.rb#5
  def variable_bounds; end

  class << self
    # source://steep//lib/steep/interface/builder.rb#14
    def empty; end
  end
end

# source://steep//lib/steep/interface/function.rb#3
class Steep::Interface::Function
  # @return [Function] a new instance of Function
  #
  # source://steep//lib/steep/interface/function.rb#992
  def initialize(params:, return_type:, location:); end

  # source://steep//lib/steep/interface/function.rb#998
  def ==(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#1060
  def accept_one_arg?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#1081
  def closed?; end

  # source://steep//lib/steep/interface/function.rb#1033
  def each_child(&block); end

  # source://steep//lib/steep/interface/function.rb#1033
  def each_type(&block); end

  # source://steep//lib/steep/interface/function.rb#998
  def eql?(other); end

  # source://steep//lib/steep/interface/function.rb#1008
  def free_variables; end

  # source://steep//lib/steep/interface/function.rb#1004
  def hash; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/interface/function.rb#990
  def location; end

  # source://steep//lib/steep/interface/function.rb#1044
  def map_type(&block); end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/interface/function.rb#988
  def params; end

  # Returns the value of attribute return_type.
  #
  # source://steep//lib/steep/interface/function.rb#989
  def return_type; end

  # source://steep//lib/steep/interface/function.rb#1016
  def subst(s); end

  # source://steep//lib/steep/interface/function.rb#1073
  def to_s; end

  # source://steep//lib/steep/interface/function.rb#1052
  def with(params: T.unsafe(nil), return_type: T.unsafe(nil)); end
end

# source://steep//lib/steep/interface/function.rb#4
class Steep::Interface::Function::Params
  # @return [Params] a new instance of Params
  #
  # source://steep//lib/steep/interface/function.rb#781
  def initialize(positional_params:, keyword_params:); end

  # Returns the intersection between self and other.
  # Returns nil if the intersection cannot be computed.
  #
  #   (self & other) <: self
  #   (self & other) <: other
  #
  # `self & other` accept `arg` if `arg` is acceptable for both of `self` and `other`.
  #
  # source://steep//lib/steep/interface/function.rb#968
  def &(other); end

  # self + params returns a new params for overloading.
  #
  # source://steep//lib/steep/interface/function.rb#954
  def +(other); end

  # source://steep//lib/steep/interface/function.rb#811
  def ==(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#900
  def closed?; end

  # source://steep//lib/steep/interface/function.rb#872
  def drop_first; end

  # source://steep//lib/steep/interface/function.rb#858
  def each_positional_param(&block); end

  # source://steep//lib/steep/interface/function.rb#883
  def each_type(&block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#943
  def empty?; end

  # source://steep//lib/steep/interface/function.rb#811
  def eql?(other); end

  # source://steep//lib/steep/interface/function.rb#790
  def first_param; end

  # source://steep//lib/steep/interface/function.rb#838
  def flat_keywords; end

  # source://steep//lib/steep/interface/function.rb#823
  def flat_unnamed_params; end

  # source://steep//lib/steep/interface/function.rb#892
  def free_variables; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#854
  def has_keywords?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#803
  def has_positional?; end

  # source://steep//lib/steep/interface/function.rb#819
  def hash; end

  # Returns the value of attribute keyword_params.
  #
  # source://steep//lib/steep/interface/function.rb#773
  def keyword_params; end

  # source://steep//lib/steep/interface/function.rb#936
  def map_type(&block); end

  # source://steep//lib/steep/interface/function.rb#742
  def optional; end

  # Returns true if all arguments are non-required.
  #
  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#948
  def optional?; end

  # source://steep//lib/steep/interface/function.rb#846
  def optional_keywords; end

  # Returns the value of attribute positional_params.
  #
  # source://steep//lib/steep/interface/function.rb#772
  def positional_params; end

  # source://steep//lib/steep/interface/function.rb#727
  def required; end

  # source://steep//lib/steep/interface/function.rb#842
  def required_keywords; end

  # source://steep//lib/steep/interface/function.rb#759
  def rest; end

  # source://steep//lib/steep/interface/function.rb#850
  def rest_keywords; end

  # source://steep//lib/steep/interface/function.rb#922
  def size; end

  # source://steep//lib/steep/interface/function.rb#904
  def subst(s); end

  # source://steep//lib/steep/interface/function.rb#926
  def to_s; end

  # source://steep//lib/steep/interface/function.rb#786
  def update(positional_params: T.unsafe(nil), keyword_params: T.unsafe(nil)); end

  # source://steep//lib/steep/interface/function.rb#794
  def with_first_param(param); end

  # source://steep//lib/steep/interface/function.rb#868
  def without_keywords; end

  # Returns the union between self and other.
  #
  #    self <: (self | other)
  #   other <: (self | other)
  #
  # `self | other` accept `arg` if `self` accepts `arg` or `other` accepts `arg`.
  #
  # source://steep//lib/steep/interface/function.rb#981
  def |(other); end

  class << self
    # source://steep//lib/steep/interface/function.rb#775
    def build(required: T.unsafe(nil), optional: T.unsafe(nil), rest: T.unsafe(nil), required_keywords: T.unsafe(nil), optional_keywords: T.unsafe(nil), rest_keywords: T.unsafe(nil)); end

    # source://steep//lib/steep/interface/function.rb#807
    def empty; end
  end
end

# source://steep//lib/steep/interface/function.rb#437
class Steep::Interface::Function::Params::KeywordParams
  include ::Steep::Interface::Function::Params::Utils

  # @return [KeywordParams] a new instance of KeywordParams
  #
  # source://steep//lib/steep/interface/function.rb#442
  def initialize(requireds: T.unsafe(nil), optionals: T.unsafe(nil), rest: T.unsafe(nil)); end

  # For intersection
  #
  # source://steep//lib/steep/interface/function.rb#662
  def &(other); end

  # For overloading
  #
  # source://steep//lib/steep/interface/function.rb#533
  def +(other); end

  # source://steep//lib/steep/interface/function.rb#448
  def ==(other); end

  # source://steep//lib/steep/interface/function.rb#473
  def each(&block); end

  # source://steep//lib/steep/interface/function.rb#485
  def each_type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/function.rb#469
  def empty?; end

  # source://steep//lib/steep/interface/function.rb#448
  def eql?(other); end

  # source://steep//lib/steep/interface/function.rb#457
  def hash; end

  # source://steep//lib/steep/interface/function.rb#526
  def keywords; end

  # source://steep//lib/steep/interface/function.rb#495
  def map_type(&block); end

  # Returns the value of attribute optionals.
  #
  # source://steep//lib/steep/interface/function.rb#439
  def optionals; end

  # Returns the value of attribute requireds.
  #
  # source://steep//lib/steep/interface/function.rb#438
  def requireds; end

  # Returns the value of attribute rest.
  #
  # source://steep//lib/steep/interface/function.rb#440
  def rest; end

  # source://steep//lib/steep/interface/function.rb#522
  def size; end

  # source://steep//lib/steep/interface/function.rb#511
  def subst(s); end

  # source://steep//lib/steep/interface/function.rb#461
  def update(requireds: T.unsafe(nil), optionals: T.unsafe(nil), rest: T.unsafe(nil)); end

  # For union
  #
  # source://steep//lib/steep/interface/function.rb#597
  def |(other); end
end

# source://steep//lib/steep/interface/function.rb#16
class Steep::Interface::Function::Params::PositionalParams
  extend ::Steep::Interface::Function::Params::Utils

  # @return [PositionalParams] a new instance of PositionalParams
  #
  # source://steep//lib/steep/interface/function.rb#64
  def initialize(head:, tail:); end

  # source://steep//lib/steep/interface/function.rb#115
  def ==(other); end

  # source://steep//lib/steep/interface/function.rb#125
  def each(&block); end

  # source://steep//lib/steep/interface/function.rb#134
  def each_type; end

  # source://steep//lib/steep/interface/function.rb#115
  def eql?(other); end

  # source://steep//lib/steep/interface/function.rb#121
  def hash; end

  # Returns the value of attribute head.
  #
  # source://steep//lib/steep/interface/function.rb#61
  def head; end

  # source://steep//lib/steep/interface/function.rb#85
  def map(&block); end

  # source://steep//lib/steep/interface/function.rb#96
  def map_type(&block); end

  # source://steep//lib/steep/interface/function.rb#144
  def size; end

  # source://steep//lib/steep/interface/function.rb#104
  def subst(s); end

  # Returns the value of attribute tail.
  #
  # source://steep//lib/steep/interface/function.rb#62
  def tail; end

  # source://steep//lib/steep/interface/function.rb#81
  def to_ary; end

  class << self
    # source://steep//lib/steep/interface/function.rb#148
    def build(required:, optional:, rest:); end

    # Calculates xs & ys.
    # Raises when failed.
    #
    # source://steep//lib/steep/interface/function.rb#356
    def merge_for_intersection(xs, ys); end

    # Calculates xs + ys.
    # Never fails.
    #
    # source://steep//lib/steep/interface/function.rb#160
    def merge_for_overload(xs, ys); end

    # xs | ys
    #
    # source://steep//lib/steep/interface/function.rb#259
    def merge_for_union(xs, ys); end

    # source://steep//lib/steep/interface/function.rb#73
    def optional(type, tail = T.unsafe(nil)); end

    # source://steep//lib/steep/interface/function.rb#69
    def required(type, tail = T.unsafe(nil)); end

    # source://steep//lib/steep/interface/function.rb#77
    def rest(type, tail = T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/interface/function.rb#17
class Steep::Interface::Function::Params::PositionalParams::Base
  # @return [Base] a new instance of Base
  #
  # source://steep//lib/steep/interface/function.rb#20
  def initialize(type); end

  # source://steep//lib/steep/interface/function.rb#24
  def ==(other); end

  # source://steep//lib/steep/interface/function.rb#24
  def eql?(other); end

  # source://steep//lib/steep/interface/function.rb#30
  def hash; end

  # source://steep//lib/steep/interface/function.rb#48
  def map_type(&block); end

  # source://steep//lib/steep/interface/function.rb#34
  def subst(s); end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/interface/function.rb#18
  def type; end

  # source://steep//lib/steep/interface/function.rb#44
  def var_type; end
end

# source://steep//lib/steep/interface/function.rb#58
class Steep::Interface::Function::Params::PositionalParams::Optional < ::Steep::Interface::Function::Params::PositionalParams::Base; end

# source://steep//lib/steep/interface/function.rb#57
class Steep::Interface::Function::Params::PositionalParams::Required < ::Steep::Interface::Function::Params::PositionalParams::Base; end

# source://steep//lib/steep/interface/function.rb#59
class Steep::Interface::Function::Params::PositionalParams::Rest < ::Steep::Interface::Function::Params::PositionalParams::Base; end

# source://steep//lib/steep/interface/function.rb#5
module Steep::Interface::Function::Params::Utils
  # source://steep//lib/steep/interface/function.rb#11
  def intersection(*types); end

  # source://steep//lib/steep/interface/function.rb#6
  def union(*types, null: T.unsafe(nil)); end
end

# source://steep//lib/steep/interface/method_type.rb#3
class Steep::Interface::MethodType
  # @return [MethodType] a new instance of MethodType
  #
  # source://steep//lib/steep/interface/method_type.rb#8
  def initialize(type_params:, type:, block:); end

  # source://steep//lib/steep/interface/method_type.rb#281
  def &(other); end

  # source://steep//lib/steep/interface/method_type.rb#127
  def +(other); end

  # source://steep//lib/steep/interface/method_type.rb#14
  def ==(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/method_type.rb#324
  def accept_one_arg?; end

  # Returns the value of attribute block.
  #
  # source://steep//lib/steep/interface/method_type.rb#6
  def block; end

  # source://steep//lib/steep/interface/method_type.rb#57
  def each_type(&block); end

  # source://steep//lib/steep/interface/method_type.rb#14
  def eql?(other); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/method_type.rb#131
  def equals_modulo_type_params?(other); end

  # source://steep//lib/steep/interface/method_type.rb#27
  def free_variables; end

  # source://steep//lib/steep/interface/method_type.rb#23
  def hash; end

  # source://steep//lib/steep/interface/method_type.rb#70
  def instantiate(s); end

  # source://steep//lib/steep/interface/method_type.rb#91
  def map_type(&block); end

  # source://steep//lib/steep/interface/method_type.rb#37
  def subst(s); end

  # source://steep//lib/steep/interface/method_type.rb#82
  def to_s; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/interface/method_type.rb#5
  def type; end

  # Returns the value of attribute type_params.
  #
  # source://steep//lib/steep/interface/method_type.rb#4
  def type_params; end

  # Returns a new method type which can be used for the method implementation type of both `self` and `other`.
  #
  # source://steep//lib/steep/interface/method_type.rb#99
  def unify_overload(other); end

  # source://steep//lib/steep/interface/method_type.rb#76
  def with(type_params: T.unsafe(nil), type: T.unsafe(nil), block: T.unsafe(nil)); end

  # source://steep//lib/steep/interface/method_type.rb#230
  def |(other); end

  class << self
    # source://steep//lib/steep/interface/method_type.rb#157
    def intersection(type1, type2, check); end

    # source://steep//lib/steep/interface/method_type.rb#167
    def try_type_params(type1, type2, check, generate, relation); end

    # source://steep//lib/steep/interface/method_type.rb#147
    def union(type1, type2, check); end
  end
end

# source://steep//lib/steep/interface/shape.rb#3
class Steep::Interface::Shape
  # @return [Shape] a new instance of Shape
  #
  # source://steep//lib/steep/interface/shape.rb#193
  def initialize(type:, private:, methods: T.unsafe(nil)); end

  # Returns the value of attribute methods.
  #
  # source://steep//lib/steep/interface/shape.rb#191
  def methods; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/shape.rb#218
  def private?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/shape.rb#222
  def public?; end

  # source://steep//lib/steep/interface/shape.rb#226
  def public_shape; end

  # source://steep//lib/steep/interface/shape.rb#207
  def subst(s, type: T.unsafe(nil)); end

  # source://steep//lib/steep/interface/shape.rb#199
  def to_s; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/interface/shape.rb#190
  def type; end

  # source://steep//lib/steep/interface/shape.rb#203
  def update(type: T.unsafe(nil), methods: T.unsafe(nil)); end
end

# source://steep//lib/steep/interface/shape.rb#52
class Steep::Interface::Shape::Entry
  # @return [Entry] a new instance of Entry
  #
  # source://steep//lib/steep/interface/shape.rb#55
  def initialize(private_method:, method_name:, overloads: T.unsafe(nil), &block); end

  # source://steep//lib/steep/interface/shape.rb#62
  def force; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/shape.rb#78
  def has_method_type?; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/interface/shape.rb#53
  def method_name; end

  # source://steep//lib/steep/interface/shape.rb#74
  def method_types; end

  # source://steep//lib/steep/interface/shape.rb#69
  def overloads; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/shape.rb#91
  def private_method?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/shape.rb#95
  def public_method?; end

  # source://steep//lib/steep/interface/shape.rb#83
  def to_s; end
end

# source://steep//lib/steep/interface/shape.rb#4
class Steep::Interface::Shape::MethodOverload
  # @return [MethodOverload] a new instance of MethodOverload
  #
  # source://steep//lib/steep/interface/shape.rb#9
  def initialize(method_type, defs); end

  # source://steep//lib/steep/interface/shape.rb#31
  def method_decls(name); end

  # Returns the value of attribute method_defs.
  #
  # source://steep//lib/steep/interface/shape.rb#7
  def method_defs; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/interface/shape.rb#5
  def method_type; end

  # source://steep//lib/steep/interface/shape.rb#25
  def subst(s); end
end

# source://steep//lib/steep/interface/shape.rb#100
class Steep::Interface::Shape::Methods
  include ::Enumerable

  # @return [Methods] a new instance of Methods
  #
  # source://steep//lib/steep/interface/shape.rb#105
  def initialize(substs:, methods:); end

  # source://steep//lib/steep/interface/shape.rb#124
  def [](name); end

  # source://steep//lib/steep/interface/shape.rb#119
  def []=(name, entry); end

  # source://steep//lib/steep/interface/shape.rb#139
  def each(&block); end

  # source://steep//lib/steep/interface/shape.rb#150
  def each_name(&block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/shape.rb#111
  def key?(name); end

  # source://steep//lib/steep/interface/shape.rb#172
  def merge!(other, &block); end

  # Returns the value of attribute methods.
  #
  # source://steep//lib/steep/interface/shape.rb#101
  def methods; end

  # source://steep//lib/steep/interface/shape.rb#182
  def public_methods; end

  # source://steep//lib/steep/interface/shape.rb#168
  def push_substitution(subst); end

  # Returns the value of attribute resolved_methods.
  #
  # source://steep//lib/steep/interface/shape.rb#101
  def resolved_methods; end

  # source://steep//lib/steep/interface/shape.rb#160
  def subst; end

  # Returns the value of attribute substs.
  #
  # source://steep//lib/steep/interface/shape.rb#101
  def substs; end
end

# source://steep//lib/steep/interface/substitution.rb#3
class Steep::Interface::Substitution
  # @return [Substitution] a new instance of Substitution
  #
  # source://steep//lib/steep/interface/substitution.rb#21
  def initialize(dictionary:, instance_type:, module_type:, self_type:); end

  # source://steep//lib/steep/interface/substitution.rb#67
  def [](key); end

  # source://steep//lib/steep/interface/substitution.rb#154
  def add!(v, ty); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/substitution.rb#75
  def apply?(type); end

  # Returns the value of attribute dictionary.
  #
  # source://steep//lib/steep/interface/substitution.rb#16
  def dictionary; end

  # source://steep//lib/steep/interface/substitution.rb#42
  def domain; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/substitution.rb#35
  def empty?; end

  # source://steep//lib/steep/interface/substitution.rb#105
  def except(vars); end

  # source://steep//lib/steep/interface/substitution.rb#114
  def except!(vars); end

  # Returns the value of attribute instance_type.
  #
  # source://steep//lib/steep/interface/substitution.rb#17
  def instance_type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/interface/substitution.rb#71
  def key?(var); end

  # source://steep//lib/steep/interface/substitution.rb#147
  def merge(s); end

  # source://steep//lib/steep/interface/substitution.rb#122
  def merge!(s, overwrite: T.unsafe(nil)); end

  # Returns the value of attribute module_type.
  #
  # source://steep//lib/steep/interface/substitution.rb#18
  def module_type; end

  # Returns the value of attribute self_type.
  #
  # source://steep//lib/steep/interface/substitution.rb#19
  def self_type; end

  # source://steep//lib/steep/interface/substitution.rb#53
  def to_s; end

  # source://steep//lib/steep/interface/substitution.rb#143
  def update(self_type: T.unsafe(nil), instance_type: T.unsafe(nil), module_type: T.unsafe(nil)); end

  class << self
    # @raise [InvalidSubstitutionError]
    #
    # source://steep//lib/steep/interface/substitution.rb#92
    def build(vars, types = T.unsafe(nil), instance_type: T.unsafe(nil), module_type: T.unsafe(nil), self_type: T.unsafe(nil)); end

    # source://steep//lib/steep/interface/substitution.rb#28
    def empty; end
  end
end

# source://steep//lib/steep/interface/substitution.rb#4
class Steep::Interface::Substitution::InvalidSubstitutionError < ::StandardError
  # @return [InvalidSubstitutionError] a new instance of InvalidSubstitutionError
  #
  # source://steep//lib/steep/interface/substitution.rb#8
  def initialize(vars_size:, types_size:); end

  # Returns the value of attribute types_size.
  #
  # source://steep//lib/steep/interface/substitution.rb#6
  def types_size; end

  # Returns the value of attribute vars_size.
  #
  # source://steep//lib/steep/interface/substitution.rb#5
  def vars_size; end
end

# source://steep//lib/steep/interface/type_param.rb#3
class Steep::Interface::TypeParam
  # @return [TypeParam] a new instance of TypeParam
  #
  # source://steep//lib/steep/interface/type_param.rb#11
  def initialize(name:, upper_bound:, variance:, unchecked:, default_type:, location: T.unsafe(nil)); end

  # source://steep//lib/steep/interface/type_param.rb#20
  def ==(other); end

  # Returns the value of attribute default_type.
  #
  # source://steep//lib/steep/interface/type_param.rb#9
  def default_type; end

  # source://steep//lib/steep/interface/type_param.rb#20
  def eql?(other); end

  # source://steep//lib/steep/interface/type_param.rb#31
  def hash; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/interface/type_param.rb#8
  def location; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/interface/type_param.rb#4
  def name; end

  # source://steep//lib/steep/interface/type_param.rb#98
  def subst(s); end

  # source://steep//lib/steep/interface/type_param.rb#64
  def to_s; end

  # Returns the value of attribute unchecked.
  #
  # source://steep//lib/steep/interface/type_param.rb#7
  def unchecked; end

  # source://steep//lib/steep/interface/type_param.rb#87
  def update(name: T.unsafe(nil), upper_bound: T.unsafe(nil), variance: T.unsafe(nil), unchecked: T.unsafe(nil), location: T.unsafe(nil), default_type: T.unsafe(nil)); end

  # Returns the value of attribute upper_bound.
  #
  # source://steep//lib/steep/interface/type_param.rb#5
  def upper_bound; end

  # Returns the value of attribute variance.
  #
  # source://steep//lib/steep/interface/type_param.rb#6
  def variance; end

  class << self
    # source://steep//lib/steep/interface/type_param.rb#35
    def rename(params, conflicting_names = T.unsafe(nil), new_names = T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/located_value.rb#2
class Steep::LocatedValue
  # @return [LocatedValue] a new instance of LocatedValue
  #
  # source://steep//lib/steep/located_value.rb#5
  def initialize(value:, location:); end

  # source://steep//lib/steep/located_value.rb#10
  def ==(other); end

  # source://steep//lib/steep/located_value.rb#10
  def eql?(other); end

  # source://steep//lib/steep/located_value.rb#16
  def hash; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/located_value.rb#3
  def location; end

  # Returns the value of attribute value.
  #
  # source://steep//lib/steep/located_value.rb#3
  def value; end
end

# source://steep//lib/steep/module_helper.rb#2
module Steep::ModuleHelper
  # source://steep//lib/steep/module_helper.rb#3
  def module_name_from_node(parent_node, constant_name); end

  # source://steep//lib/steep/module_helper.rb#9
  def namespace_from_node(node); end
end

# source://steep//lib/steep/node_helper.rb#2
module Steep::NodeHelper
  # source://steep//lib/steep/node_helper.rb#261
  def clone_node(node); end

  # source://steep//lib/steep/node_helper.rb#97
  def deconstruct_case_node(node); end

  # source://steep//lib/steep/node_helper.rb#110
  def deconstruct_case_node!(node); end

  # source://steep//lib/steep/node_helper.rb#51
  def deconstruct_if_node(node); end

  # source://steep//lib/steep/node_helper.rb#62
  def deconstruct_if_node!(node); end

  # source://steep//lib/steep/node_helper.rb#172
  def deconstruct_resbody_node(node); end

  # source://steep//lib/steep/node_helper.rb#184
  def deconstruct_resbody_node!(node); end

  # source://steep//lib/steep/node_helper.rb#146
  def deconstruct_rescue_node(node); end

  # source://steep//lib/steep/node_helper.rb#160
  def deconstruct_rescue_node!(node); end

  # source://steep//lib/steep/node_helper.rb#196
  def deconstruct_send_node(node); end

  # source://steep//lib/steep/node_helper.rb#209
  def deconstruct_send_node!(node); end

  # source://steep//lib/steep/node_helper.rb#238
  def deconstruct_sendish_and_block_nodes(*nodes); end

  # source://steep//lib/steep/node_helper.rb#122
  def deconstruct_when_node(node); end

  # source://steep//lib/steep/node_helper.rb#134
  def deconstruct_when_node!(node); end

  # source://steep//lib/steep/node_helper.rb#74
  def deconstruct_whileish_node(node); end

  # source://steep//lib/steep/node_helper.rb#85
  def deconstruct_whileish_node!(node); end

  # source://steep//lib/steep/node_helper.rb#3
  def each_child_node(node, &block); end

  # source://steep//lib/steep/node_helper.rb#15
  def each_descendant_node(node, &block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/node_helper.rb#221
  def private_send?(node); end

  # source://steep//lib/steep/node_helper.rb#114
  def test_case_node(node); end

  # source://steep//lib/steep/node_helper.rb#66
  def test_if_node(node); end

  # source://steep//lib/steep/node_helper.rb#188
  def test_resbody_node(node); end

  # source://steep//lib/steep/node_helper.rb#164
  def test_rescue_node(node); end

  # source://steep//lib/steep/node_helper.rb#213
  def test_send_node(node); end

  # source://steep//lib/steep/node_helper.rb#138
  def test_when_node(node); end

  # source://steep//lib/steep/node_helper.rb#89
  def test_whileish_node(node); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/node_helper.rb#26
  def value_node?(node); end
end

# source://steep//lib/steep/path_helper.rb#2
module Steep::PathHelper
  private

  # source://steep//lib/steep/path_helper.rb#7
  def to_pathname(uri, dosish: T.unsafe(nil)); end

  # source://steep//lib/steep/path_helper.rb#17
  def to_pathname!(uri, dosish: T.unsafe(nil)); end

  # source://steep//lib/steep/path_helper.rb#21
  def to_uri(path, dosish: T.unsafe(nil)); end

  class << self
    # source://steep//lib/steep/path_helper.rb#7
    def to_pathname(uri, dosish: T.unsafe(nil)); end

    # source://steep//lib/steep/path_helper.rb#17
    def to_pathname!(uri, dosish: T.unsafe(nil)); end

    # source://steep//lib/steep/path_helper.rb#21
    def to_uri(path, dosish: T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/path_helper.rb#5
Steep::PathHelper::URIParser = T.let(T.unsafe(nil), URI::RFC2396_Parser)

# source://steep//lib/steep/project.rb#2
class Steep::Project
  # @return [Project] a new instance of Project
  #
  # source://steep//lib/steep/project.rb#8
  def initialize(steepfile_path:, base_dir: T.unsafe(nil)); end

  # source://steep//lib/steep/project.rb#30
  def absolute_path(path); end

  # Returns the value of attribute base_dir.
  #
  # source://steep//lib/steep/project.rb#5
  def base_dir; end

  # Returns the value of attribute global_options.
  #
  # source://steep//lib/steep/project.rb#6
  def global_options; end

  # Sets the attribute global_options
  #
  # @param value the value to set the attribute global_options to.
  #
  # source://steep//lib/steep/project.rb#6
  def global_options=(_arg0); end

  # source://steep//lib/steep/project.rb#43
  def group_for_path(path); end

  # source://steep//lib/steep/project.rb#47
  def group_for_signature_path(path); end

  # source://steep//lib/steep/project.rb#34
  def group_for_source_path(path); end

  # source://steep//lib/steep/project.rb#24
  def relative_path(path); end

  # Returns the value of attribute steepfile_path.
  #
  # source://steep//lib/steep/project.rb#4
  def steepfile_path; end

  # source://steep//lib/steep/project.rb#74
  def target_for_path(path); end

  # source://steep//lib/steep/project.rb#65
  def target_for_signature_path(path); end

  # source://steep//lib/steep/project.rb#56
  def target_for_source_path(path); end

  # Returns the value of attribute targets.
  #
  # source://steep//lib/steep/project.rb#3
  def targets; end
end

# source://steep//lib/steep/project/dsl.rb#3
class Steep::Project::DSL
  include ::Steep::Project::DSL::LibraryOptions

  # @return [DSL] a new instance of DSL
  #
  # source://steep//lib/steep/project/dsl.rb#220
  def initialize(project:); end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/project/dsl.rb#218
  def project; end

  # source://steep//lib/steep/project/dsl.rb#240
  def target(name, &block); end

  class << self
    # source://steep//lib/steep/project/dsl.rb#232
    def eval(project, &block); end

    # source://steep//lib/steep/project/dsl.rb#224
    def parse(project, code, filename: T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/project/dsl.rb#185
class Steep::Project::DSL::GroupDSL
  include ::Steep::Project::DSL::WithPattern

  # @return [GroupDSL] a new instance of GroupDSL
  #
  # source://steep//lib/steep/project/dsl.rb#194
  def initialize(name, target); end

  # Returns the value of attribute code_diagnostics_config.
  #
  # source://steep//lib/steep/project/dsl.rb#192
  def code_diagnostics_config; end

  # source://steep//lib/steep/project/dsl.rb#199
  def configure_code_diagnostics(config = T.unsafe(nil)); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/project/dsl.rb#188
  def name; end

  # Returns the value of attribute target.
  #
  # source://steep//lib/steep/project/dsl.rb#190
  def target; end
end

# source://steep//lib/steep/project/dsl.rb#4
module Steep::Project::DSL::LibraryOptions
  # source://steep//lib/steep/project/dsl.rb#19
  def collection_config(path); end

  # Returns the value of attribute collection_config_path.
  #
  # source://steep//lib/steep/project/dsl.rb#7
  def collection_config_path; end

  # Returns the value of attribute core_root.
  #
  # source://steep//lib/steep/project/dsl.rb#6
  def core_root; end

  # source://steep//lib/steep/project/dsl.rb#24
  def disable_collection; end

  # source://steep//lib/steep/project/dsl.rb#38
  def libraries; end

  # source://steep//lib/steep/project/dsl.rb#29
  def library(*args); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/dsl.rb#42
  def library_configured?; end

  # source://steep//lib/steep/project/dsl.rb#14
  def repo_path(*paths); end

  # source://steep//lib/steep/project/dsl.rb#34
  def repo_paths; end

  # source://steep//lib/steep/project/dsl.rb#9
  def stdlib_path(core_root:, stdlib_root:); end

  # Returns the value of attribute stdlib_root.
  #
  # source://steep//lib/steep/project/dsl.rb#5
  def stdlib_root; end

  # source://steep//lib/steep/project/dsl.rb#46
  def to_library_options; end
end

# source://steep//lib/steep/project/dsl.rb#114
class Steep::Project::DSL::TargetDSL
  include ::Steep::Project::DSL::LibraryOptions
  include ::Steep::Project::DSL::WithPattern

  # @return [TargetDSL] a new instance of TargetDSL
  #
  # source://steep//lib/steep/project/dsl.rb#124
  def initialize(name, project:); end

  # source://steep//lib/steep/project/dsl.rb#169
  def code_diagnostics_config; end

  # @yield [code_diagnostics_config]
  #
  # source://steep//lib/steep/project/dsl.rb#161
  def configure_code_diagnostics(hash = T.unsafe(nil)); end

  # source://steep//lib/steep/project/dsl.rb#173
  def group(name, &block); end

  # Returns the value of attribute groups.
  #
  # source://steep//lib/steep/project/dsl.rb#121
  def groups; end

  # Returns the value of attribute implicitly_returns_nil.
  #
  # source://steep//lib/steep/project/dsl.rb#122
  def implicitly_returns_nil; end

  # source://steep//lib/steep/project/dsl.rb#157
  def implicitly_returns_nil!(value = T.unsafe(nil)); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/project/dsl.rb#118
  def name; end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/project/dsl.rb#119
  def project; end

  # Returns the value of attribute unreferenced.
  #
  # source://steep//lib/steep/project/dsl.rb#120
  def unreferenced; end

  # source://steep//lib/steep/project/dsl.rb#153
  def unreferenced!(value = T.unsafe(nil)); end

  private

  # source://steep//lib/steep/project/dsl.rb#135
  def initialize_copy(other); end
end

# source://steep//lib/steep/project/dsl.rb#72
module Steep::Project::DSL::WithPattern
  # source://steep//lib/steep/project/dsl.rb#73
  def check(*args); end

  # source://steep//lib/steep/project/dsl.rb#77
  def ignore(*args); end

  # source://steep//lib/steep/project/dsl.rb#85
  def ignore_signature(*args); end

  # source://steep//lib/steep/project/dsl.rb#101
  def ignored_signatures; end

  # source://steep//lib/steep/project/dsl.rb#93
  def ignored_sources; end

  # source://steep//lib/steep/project/dsl.rb#81
  def signature(*args); end

  # source://steep//lib/steep/project/dsl.rb#109
  def signature_pattern; end

  # source://steep//lib/steep/project/dsl.rb#97
  def signatures; end

  # source://steep//lib/steep/project/dsl.rb#105
  def source_pattern; end

  # source://steep//lib/steep/project/dsl.rb#89
  def sources; end
end

# source://steep//lib/steep/project/group.rb#3
class Steep::Project::Group
  # @return [Group] a new instance of Group
  #
  # source://steep//lib/steep/project/group.rb#10
  def initialize(target, name, source_pattern, signature_pattern, code_diagnostics_config); end

  # Returns the value of attribute code_diagnostics_config.
  #
  # source://steep//lib/steep/project/group.rb#8
  def code_diagnostics_config; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/project/group.rb#4
  def name; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/group.rb#26
  def possible_signature_file?(path); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/group.rb#22
  def possible_source_file?(path); end

  # source://steep//lib/steep/project/group.rb#18
  def project; end

  # Returns the value of attribute signature_pattern.
  #
  # source://steep//lib/steep/project/group.rb#6
  def signature_pattern; end

  # Returns the value of attribute source_pattern.
  #
  # source://steep//lib/steep/project/group.rb#5
  def source_pattern; end

  # Returns the value of attribute target.
  #
  # source://steep//lib/steep/project/group.rb#7
  def target; end
end

# source://steep//lib/steep/project/options.rb#3
class Steep::Project::Options
  # @return [Options] a new instance of Options
  #
  # source://steep//lib/steep/project/options.rb#20
  def initialize; end

  # Returns the value of attribute collection_config_path.
  #
  # source://steep//lib/steep/project/options.rb#18
  def collection_config_path; end

  # Sets the attribute collection_config_path
  #
  # @param value the value to set the attribute collection_config_path to.
  #
  # source://steep//lib/steep/project/options.rb#18
  def collection_config_path=(_arg0); end

  # source://steep//lib/steep/project/options.rb#53
  def collection_lock; end

  # source://steep//lib/steep/project/options.rb#25
  def collection_lock_path; end

  # Returns the value of attribute libraries.
  #
  # source://steep//lib/steep/project/options.rb#16
  def libraries; end

  # source://steep//lib/steep/project/options.rb#31
  def load_collection_lock(force: T.unsafe(nil)); end

  # Returns the value of attribute paths.
  #
  # source://steep//lib/steep/project/options.rb#17
  def paths; end

  # Sets the attribute paths
  #
  # @param value the value to set the attribute paths to.
  #
  # source://steep//lib/steep/project/options.rb#17
  def paths=(_arg0); end
end

# source://steep//lib/steep/project/options.rb#4
class Steep::Project::Options::PathOptions < ::Struct
  def core_root; end
  def core_root=(_); end

  # source://steep//lib/steep/project/options.rb#11
  def customized_core?; end

  # source://steep//lib/steep/project/options.rb#7
  def customized_stdlib?; end

  def repo_paths; end
  def repo_paths=(_); end
  def stdlib_root; end
  def stdlib_root=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/project/pattern.rb#3
class Steep::Project::Pattern
  # @return [Pattern] a new instance of Pattern
  #
  # source://steep//lib/steep/project/pattern.rb#10
  def initialize(patterns:, ext:, ignores: T.unsafe(nil)); end

  # source://steep//lib/steep/project/pattern.rb#31
  def =~(path); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/pattern.rb#54
  def empty?; end

  # Returns the value of attribute ext.
  #
  # source://steep//lib/steep/project/pattern.rb#8
  def ext; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/pattern.rb#43
  def ignore?(path); end

  # Returns the value of attribute ignore_prefixes.
  #
  # source://steep//lib/steep/project/pattern.rb#7
  def ignore_prefixes; end

  # Returns the value of attribute ignores.
  #
  # source://steep//lib/steep/project/pattern.rb#5
  def ignores; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/pattern.rb#39
  def match?(path); end

  # Returns the value of attribute patterns.
  #
  # source://steep//lib/steep/project/pattern.rb#4
  def patterns; end

  # Returns the value of attribute prefixes.
  #
  # source://steep//lib/steep/project/pattern.rb#6
  def prefixes; end

  # source://steep//lib/steep/project/pattern.rb#47
  def test_string(path, patterns, prefixes); end
end

# source://steep//lib/steep/project/target.rb#3
class Steep::Project::Target
  # @return [Target] a new instance of Target
  #
  # source://steep//lib/steep/project/target.rb#15
  def initialize(name:, options:, source_pattern:, signature_pattern:, code_diagnostics_config:, project:, unreferenced:, implicitly_returns_nil:); end

  # Returns the value of attribute code_diagnostics_config.
  #
  # source://steep//lib/steep/project/target.rb#9
  def code_diagnostics_config; end

  # Returns the value of attribute groups.
  #
  # source://steep//lib/steep/project/target.rb#12
  def groups; end

  # Returns the value of attribute implicitly_returns_nil.
  #
  # source://steep//lib/steep/project/target.rb#13
  def implicitly_returns_nil; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/project/target.rb#4
  def name; end

  # source://steep//lib/steep/project/target.rb#55
  def new_env_loader; end

  # source://steep//lib/steep/project/target.rb#27
  def options; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/target.rb#43
  def possible_signature_file?(path); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/project/target.rb#31
  def possible_source_file?(path); end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/project/target.rb#10
  def project; end

  # Returns the value of attribute signature_pattern.
  #
  # source://steep//lib/steep/project/target.rb#8
  def signature_pattern; end

  # Returns the value of attribute source_pattern.
  #
  # source://steep//lib/steep/project/target.rb#7
  def source_pattern; end

  # Returns the value of attribute target_options.
  #
  # source://steep//lib/steep/project/target.rb#5
  def target_options; end

  # Returns the value of attribute unreferenced.
  #
  # source://steep//lib/steep/project/target.rb#11
  def unreferenced; end

  class << self
    # source://steep//lib/steep/project/target.rb#59
    def construct_env_loader(options:, project:); end
  end
end

# source://steep//lib/steep.rb#239
class Steep::Sampler
  # @return [Sampler] a new instance of Sampler
  #
  # source://steep//lib/steep.rb#240
  def initialize; end

  # source://steep//lib/steep.rb#266
  def average; end

  # source://steep//lib/steep.rb#254
  def count; end

  # source://steep//lib/steep.rb#274
  def percentile(p); end

  # source://steep//lib/steep.rb#244
  def sample(message); end

  # source://steep//lib/steep.rb#262
  def slowests(num); end

  # source://steep//lib/steep.rb#258
  def total; end
end

# source://steep//lib/steep/server/custom_methods.rb#2
module Steep::Server; end

# source://steep//lib/steep/server/base_worker.rb#3
class Steep::Server::BaseWorker
  # @return [BaseWorker] a new instance of BaseWorker
  #
  # source://steep//lib/steep/server/base_worker.rb#11
  def initialize(project:, reader:, writer:); end

  # source://steep//lib/steep/server/base_worker.rb#36
  def handle_job(job); end

  # source://steep//lib/steep/server/base_worker.rb#32
  def handle_request(request); end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/server/base_worker.rb#6
  def project; end

  # Returns the value of attribute queue.
  #
  # source://steep//lib/steep/server/base_worker.rb#7
  def queue; end

  # Returns the value of attribute reader.
  #
  # source://steep//lib/steep/server/base_worker.rb#7
  def reader; end

  # source://steep//lib/steep/server/base_worker.rb#40
  def run; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/base_worker.rb#28
  def skip_job?; end

  # source://steep//lib/steep/server/base_worker.rb#20
  def skip_jobs_after_shutdown!(flag = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/base_worker.rb#24
  def skip_jobs_after_shutdown?; end

  # Returns the value of attribute writer.
  #
  # source://steep//lib/steep/server/base_worker.rb#7
  def writer; end
end

# source://steep//lib/steep/server/base_worker.rb#4
Steep::Server::BaseWorker::LSP = LanguageServer::Protocol

# source://steep//lib/steep/server/base_worker.rb#9
class Steep::Server::BaseWorker::ShutdownJob < ::Struct
  def id; end
  def id=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/change_buffer.rb#3
module Steep::Server::ChangeBuffer
  # Returns the value of attribute buffered_changes.
  #
  # source://steep//lib/steep/server/change_buffer.rb#5
  def buffered_changes; end

  # source://steep//lib/steep/server/change_buffer.rb#40
  def collect_changes(request); end

  # source://steep//lib/steep/server/change_buffer.rb#27
  def load_files(input); end

  # Returns the value of attribute mutex.
  #
  # source://steep//lib/steep/server/change_buffer.rb#4
  def mutex; end

  # source://steep//lib/steep/server/change_buffer.rb#13
  def pop_buffer; end

  # source://steep//lib/steep/server/change_buffer.rb#7
  def push_buffer; end

  # source://steep//lib/steep/server/change_buffer.rb#63
  def reset_change(uri:, text:); end
end

# source://steep//lib/steep/server/custom_methods.rb#3
module Steep::Server::CustomMethods; end

# source://steep//lib/steep/server/custom_methods.rb#4
module Steep::Server::CustomMethods::FileLoad
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#7
    def notification(params); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#5
Steep::Server::CustomMethods::FileLoad::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#12
module Steep::Server::CustomMethods::FileReset
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#15
    def notification(params); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#13
Steep::Server::CustomMethods::FileReset::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#68
module Steep::Server::CustomMethods::Groups
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#71
    def response(id, result); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#69
Steep::Server::CustomMethods::Groups::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#76
module Steep::Server::CustomMethods::Refork
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#79
    def request(id, params); end

    # source://steep//lib/steep/server/custom_methods.rb#83
    def response(id, result); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#77
Steep::Server::CustomMethods::Refork::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#56
module Steep::Server::CustomMethods::Stats
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#59
    def request(id); end

    # source://steep//lib/steep/server/custom_methods.rb#63
    def response(id, result); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#57
Steep::Server::CustomMethods::Stats::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#20
module Steep::Server::CustomMethods::TypeCheck
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#23
    def request(id, params); end

    # source://steep//lib/steep/server/custom_methods.rb#27
    def response(id, result); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#21
Steep::Server::CustomMethods::TypeCheck::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#32
module Steep::Server::CustomMethods::TypeCheckGroups
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#35
    def notification(params); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#33
Steep::Server::CustomMethods::TypeCheckGroups::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#48
module Steep::Server::CustomMethods::TypeCheck__Progress
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#51
    def notification(params); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#49
Steep::Server::CustomMethods::TypeCheck__Progress::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/custom_methods.rb#40
module Steep::Server::CustomMethods::TypeCheck__Start
  class << self
    # source://steep//lib/steep/server/custom_methods.rb#43
    def notification(params); end
  end
end

# source://steep//lib/steep/server/custom_methods.rb#41
Steep::Server::CustomMethods::TypeCheck__Start::METHOD = T.let(T.unsafe(nil), String)

# source://steep//lib/steep/server/delay_queue.rb#3
class Steep::Server::DelayQueue
  # @return [DelayQueue] a new instance of DelayQueue
  #
  # source://steep//lib/steep/server/delay_queue.rb#6
  def initialize(delay:); end

  # source://steep//lib/steep/server/delay_queue.rb#33
  def cancel; end

  # Returns the value of attribute delay.
  #
  # source://steep//lib/steep/server/delay_queue.rb#4
  def delay; end

  # source://steep//lib/steep/server/delay_queue.rb#38
  def execute(&block); end

  # Returns the value of attribute last_task.
  #
  # source://steep//lib/steep/server/delay_queue.rb#4
  def last_task; end

  # Returns the value of attribute queue.
  #
  # source://steep//lib/steep/server/delay_queue.rb#4
  def queue; end

  # Returns the value of attribute thread.
  #
  # source://steep//lib/steep/server/delay_queue.rb#4
  def thread; end
end

# source://steep//lib/steep/server/interaction_worker.rb#3
class Steep::Server::InteractionWorker < ::Steep::Server::BaseWorker
  include ::Steep::Server::ChangeBuffer

  # @return [InteractionWorker] a new instance of InteractionWorker
  #
  # source://steep//lib/steep/server/interaction_worker.rb#14
  def initialize(project:, reader:, writer:, queue: T.unsafe(nil)); end

  # source://steep//lib/steep/server/interaction_worker.rb#334
  def format_completion_item(item); end

  # source://steep//lib/steep/server/interaction_worker.rb#257
  def format_completion_item_for_rbs(sig_service, type_name, job, complete_text, prefix_size); end

  # source://steep//lib/steep/server/interaction_worker.rb#23
  def handle_job(job); end

  # source://steep//lib/steep/server/interaction_worker.rb#77
  def handle_request(request); end

  # Returns the value of attribute mutex.
  #
  # source://steep//lib/steep/server/interaction_worker.rb#12
  def mutex; end

  # source://steep//lib/steep/server/interaction_worker.rb#151
  def process_completion(job); end

  # source://steep//lib/steep/server/interaction_worker.rb#125
  def process_hover(job); end

  # source://steep//lib/steep/server/interaction_worker.rb#58
  def process_latest_job(job); end

  # source://steep//lib/steep/server/interaction_worker.rb#477
  def process_signature_help(job); end

  # source://steep//lib/steep/server/interaction_worker.rb#70
  def queue_job(job); end

  # Returns the value of attribute service.
  #
  # source://steep//lib/steep/server/interaction_worker.rb#12
  def service; end
end

# source://steep//lib/steep/server/interaction_worker.rb#7
class Steep::Server::InteractionWorker::CompletionJob < ::Struct
  def column; end
  def column=(_); end
  def id; end
  def id=(_); end
  def line; end
  def line=(_); end
  def path; end
  def path=(_); end
  def trigger; end
  def trigger=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/interaction_worker.rb#6
class Steep::Server::InteractionWorker::HoverJob < ::Struct
  def column; end
  def column=(_); end
  def id; end
  def id=(_); end
  def line; end
  def line=(_); end
  def path; end
  def path=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/interaction_worker.rb#10
Steep::Server::InteractionWorker::LSP = LanguageServer::Protocol

# source://steep//lib/steep/server/interaction_worker.rb#8
class Steep::Server::InteractionWorker::SignatureHelpJob < ::Struct
  def column; end
  def column=(_); end
  def id; end
  def id=(_); end
  def line; end
  def line=(_); end
  def path; end
  def path=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/lsp_formatter.rb#3
module Steep::Server::LSPFormatter
  include ::Steep::Services

  private

  # source://steep//lib/steep/server/lsp_formatter.rb#397
  def declaration_summary(decl); end

  # source://steep//lib/steep/server/lsp_formatter.rb#330
  def format_comment(comment, header: T.unsafe(nil), &block); end

  # source://steep//lib/steep/server/lsp_formatter.rb#296
  def format_comments(comments); end

  # source://steep//lib/steep/server/lsp_formatter.rb#212
  def format_completion_docs(item); end

  # source://steep//lib/steep/server/lsp_formatter.rb#20
  def format_hover_content(content); end

  # source://steep//lib/steep/server/lsp_formatter.rb#425
  def format_method_item_doc(method_types, method_names, comments, footer = T.unsafe(nil)); end

  # source://steep//lib/steep/server/lsp_formatter.rb#273
  def format_rbs_completion_docs(type_name, decl, comments); end

  # source://steep//lib/steep/server/lsp_formatter.rb#353
  def instance_variable(name, type); end

  # source://steep//lib/steep/server/lsp_formatter.rb#347
  def local_variable(name, type); end

  # source://steep//lib/steep/server/lsp_formatter.rb#10
  def markup_content(string = T.unsafe(nil), &block); end

  # source://steep//lib/steep/server/lsp_formatter.rb#389
  def name_and_args(name, args); end

  # source://steep//lib/steep/server/lsp_formatter.rb#359
  def name_and_params(name, params); end

  class << self
    # source://steep//lib/steep/server/lsp_formatter.rb#397
    def declaration_summary(decl); end

    # source://steep//lib/steep/server/lsp_formatter.rb#330
    def format_comment(comment, header: T.unsafe(nil), &block); end

    # source://steep//lib/steep/server/lsp_formatter.rb#296
    def format_comments(comments); end

    # source://steep//lib/steep/server/lsp_formatter.rb#212
    def format_completion_docs(item); end

    # source://steep//lib/steep/server/lsp_formatter.rb#20
    def format_hover_content(content); end

    # source://steep//lib/steep/server/lsp_formatter.rb#425
    def format_method_item_doc(method_types, method_names, comments, footer = T.unsafe(nil)); end

    # source://steep//lib/steep/server/lsp_formatter.rb#273
    def format_rbs_completion_docs(type_name, decl, comments); end

    # source://steep//lib/steep/server/lsp_formatter.rb#353
    def instance_variable(name, type); end

    # source://steep//lib/steep/server/lsp_formatter.rb#347
    def local_variable(name, type); end

    # source://steep//lib/steep/server/lsp_formatter.rb#10
    def markup_content(string = T.unsafe(nil), &block); end

    # source://steep//lib/steep/server/lsp_formatter.rb#389
    def name_and_args(name, args); end

    # source://steep//lib/steep/server/lsp_formatter.rb#359
    def name_and_params(name, params); end
  end
end

# source://steep//lib/steep/server/lsp_formatter.rb#6
Steep::Server::LSPFormatter::LSP = LanguageServer::Protocol

# source://steep//lib/steep/server/master.rb#3
class Steep::Server::Master
  # @return [Master] a new instance of Master
  #
  # source://steep//lib/steep/server/master.rb#189
  def initialize(project:, reader:, writer:, interaction_worker:, typecheck_workers:, queue: T.unsafe(nil), refork: T.unsafe(nil)); end

  # source://steep//lib/steep/server/master.rb#336
  def assign_initialize_params(params); end

  # source://steep//lib/steep/server/master.rb#879
  def broadcast_notification(message); end

  # Returns the value of attribute commandline_args.
  #
  # source://steep//lib/steep/server/master.rb#173
  def commandline_args; end

  # Returns the value of attribute controller.
  #
  # source://steep//lib/steep/server/master.rb#182
  def controller; end

  # Returns the value of attribute current_type_check_request.
  #
  # source://steep//lib/steep/server/master.rb#180
  def current_type_check_request; end

  # source://steep//lib/steep/server/master.rb#323
  def each_worker(&block); end

  # source://steep//lib/steep/server/master.rb#937
  def enqueue_write_job(job); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#345
  def file_system_watcher_supported?; end

  # source://steep//lib/steep/server/master.rb#713
  def finish_type_check(request); end

  # source://steep//lib/steep/server/master.rb#891
  def fresh_request_id; end

  # source://steep//lib/steep/server/master.rb#925
  def group_request; end

  # Returns the value of attribute initialize_params.
  #
  # source://steep//lib/steep/server/master.rb#185
  def initialize_params; end

  # Returns the value of attribute interaction_worker.
  #
  # source://steep//lib/steep/server/master.rb#175
  def interaction_worker; end

  # Returns the value of attribute job_queue.
  #
  # source://steep//lib/steep/server/master.rb#178
  def job_queue; end

  # source://steep//lib/steep/server/master.rb#931
  def kill; end

  # source://steep//lib/steep/server/master.rb#789
  def on_type_check_update(guid:, path:, target:, diagnostics:); end

  # source://steep//lib/steep/server/master.rb#332
  def pathname(uri); end

  # source://steep//lib/steep/server/master.rb#1002
  def paths_to_watch(pattern, extname:); end

  # source://steep//lib/steep/server/master.rb#350
  def process_message_from_client(message); end

  # source://steep//lib/steep/server/master.rb#684
  def process_message_from_worker(message, worker:); end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/server/master.rb#171
  def project; end

  # source://steep//lib/steep/server/master.rb#954
  def push_diagnostics(path, diagnostics); end

  # Returns the value of attribute reader.
  #
  # source://steep//lib/steep/server/master.rb#172
  def reader; end

  # Returns the value of attribute refork_mutex.
  #
  # source://steep//lib/steep/server/master.rb#181
  def refork_mutex; end

  # source://steep//lib/steep/server/master.rb#810
  def refork_workers; end

  # Returns the value of attribute result_controller.
  #
  # source://steep//lib/steep/server/master.rb#183
  def result_controller; end

  # source://steep//lib/steep/server/master.rb#886
  def send_notification(message, worker:); end

  # source://steep//lib/steep/server/master.rb#906
  def send_refork_request(params:, worker:, id: T.unsafe(nil), &block); end

  # source://steep//lib/steep/server/master.rb#895
  def send_request(method:, worker:, id: T.unsafe(nil), params: T.unsafe(nil), &block); end

  # source://steep//lib/steep/server/master.rb#965
  def setup_file_system_watcher; end

  # source://steep//lib/steep/server/master.rb#208
  def start; end

  # source://steep//lib/steep/server/master.rb#739
  def start_type_check(last_request:, request: T.unsafe(nil), progress: T.unsafe(nil), include_unchanged: T.unsafe(nil), report_progress_threshold: T.unsafe(nil), needs_response: T.unsafe(nil)); end

  # Returns the value of attribute start_type_checking_queue.
  #
  # source://steep//lib/steep/server/master.rb#187
  def start_type_checking_queue; end

  # Returns the value of attribute typecheck_automatically.
  #
  # source://steep//lib/steep/server/master.rb#186
  def typecheck_automatically; end

  # Sets the attribute typecheck_automatically
  #
  # @param value the value to set the attribute typecheck_automatically to.
  #
  # source://steep//lib/steep/server/master.rb#186
  def typecheck_automatically=(_arg0); end

  # Returns the value of attribute typecheck_workers.
  #
  # source://steep//lib/steep/server/master.rb#176
  def typecheck_workers; end

  # source://steep//lib/steep/server/master.rb#942
  def work_done_progress(guid); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#340
  def work_done_progress_supported?; end

  # Returns the value of attribute write_queue.
  #
  # source://steep//lib/steep/server/master.rb#178
  def write_queue; end

  # Returns the value of attribute writer.
  #
  # source://steep//lib/steep/server/master.rb#172
  def writer; end
end

# source://steep//lib/steep/server/master.rb#41
class Steep::Server::Master::GroupHandler
  # @return [GroupHandler] a new instance of GroupHandler
  #
  # source://steep//lib/steep/server/master.rb#46
  def initialize; end

  # source://steep//lib/steep/server/master.rb#69
  def <<(handler); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#65
  def completed?; end

  # Returns the value of attribute completion_handler.
  #
  # source://steep//lib/steep/server/master.rb#44
  def completion_handler; end

  # Returns the value of attribute handlers.
  #
  # source://steep//lib/steep/server/master.rb#43
  def handlers; end

  # source://steep//lib/steep/server/master.rb#73
  def on_completion(&block); end

  # source://steep//lib/steep/server/master.rb#51
  def process_response(message); end

  # Returns the value of attribute request.
  #
  # source://steep//lib/steep/server/master.rb#42
  def request; end
end

# source://steep//lib/steep/server/master.rb#4
Steep::Server::Master::LSP = LanguageServer::Protocol

# source://steep//lib/steep/server/master.rb#105
module Steep::Server::Master::MessageUtils
  # source://steep//lib/steep/server/master.rb#134
  def id; end

  # source://steep//lib/steep/server/master.rb#130
  def method; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#122
  def notification?; end

  # source://steep//lib/steep/server/master.rb#142
  def params; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#106
  def request?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#114
  def response?; end

  # source://steep//lib/steep/server/master.rb#138
  def result; end
end

# source://steep//lib/steep/server/master.rb#147
class Steep::Server::Master::ReceiveMessageJob < ::Struct
  include ::Steep::Server::Master::MessageUtils

  def message; end
  def message=(_); end

  # source://steep//lib/steep/server/master.rb#150
  def response?; end

  def source; end
  def source=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/master.rb#78
class Steep::Server::Master::ResultController
  # @return [ResultController] a new instance of ResultController
  #
  # source://steep//lib/steep/server/master.rb#81
  def initialize; end

  # source://steep//lib/steep/server/master.rb#85
  def <<(handler); end

  # Returns the value of attribute handlers.
  #
  # source://steep//lib/steep/server/master.rb#79
  def handlers; end

  # source://steep//lib/steep/server/master.rb#95
  def process_response(message); end

  # @yield [group]
  #
  # source://steep//lib/steep/server/master.rb#89
  def request_group; end
end

# source://steep//lib/steep/server/master.rb#6
class Steep::Server::Master::ResultHandler
  # @return [ResultHandler] a new instance of ResultHandler
  #
  # source://steep//lib/steep/server/master.rb#11
  def initialize(request:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/master.rb#32
  def completed?; end

  # Returns the value of attribute completion_handler.
  #
  # source://steep//lib/steep/server/master.rb#8
  def completion_handler; end

  # source://steep//lib/steep/server/master.rb#36
  def on_completion(&block); end

  # source://steep//lib/steep/server/master.rb#18
  def process_response(message); end

  # Returns the value of attribute request.
  #
  # source://steep//lib/steep/server/master.rb#7
  def request; end

  # Returns the value of attribute response.
  #
  # source://steep//lib/steep/server/master.rb#9
  def response; end

  # source://steep//lib/steep/server/master.rb#28
  def result; end
end

# source://steep//lib/steep/server/master.rb#157
class Steep::Server::Master::SendMessageJob < ::Struct
  include ::Steep::Server::Master::MessageUtils

  class << self
    # source://steep//lib/steep/server/master.rb#164
    def to_client(message:); end

    # source://steep//lib/steep/server/master.rb#160
    def to_worker(worker, message:); end
  end
end

# source://steep//lib/steep/server/target_group_files.rb#3
class Steep::Server::TargetGroupFiles
  # @return [TargetGroupFiles] a new instance of TargetGroupFiles
  #
  # source://steep//lib/steep/server/target_group_files.rb#10
  def initialize(project); end

  # source://steep//lib/steep/server/target_group_files.rb#30
  def add_library_path(target, *paths); end

  # source://steep//lib/steep/server/target_group_files.rb#17
  def add_path(path); end

  # source://steep//lib/steep/server/target_group_files.rb#84
  def each_group_signature_path(target, no_group = T.unsafe(nil), &block); end

  # source://steep//lib/steep/server/target_group_files.rb#144
  def each_group_source_path(target, no_group = T.unsafe(nil), &block); end

  # source://steep//lib/steep/server/target_group_files.rb#34
  def each_library_path(target, &block); end

  # source://steep//lib/steep/server/target_group_files.rb#121
  def each_project_signature_path(target, &block); end

  # source://steep//lib/steep/server/target_group_files.rb#181
  def each_project_source_path(target, &block); end

  # source://steep//lib/steep/server/target_group_files.rb#104
  def each_target_signature_path(target, group, &block); end

  # source://steep//lib/steep/server/target_group_files.rb#164
  def each_target_source_path(target, group, &block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/target_group_files.rb#42
  def library_path?(path); end

  # Returns the value of attribute library_paths.
  #
  # source://steep//lib/steep/server/target_group_files.rb#8
  def library_paths; end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/server/target_group_files.rb#4
  def project; end

  # source://steep//lib/steep/server/target_group_files.rb#46
  def signature_path_target(path); end

  # Returns the value of attribute signature_paths.
  #
  # source://steep//lib/steep/server/target_group_files.rb#6
  def signature_paths; end

  # source://steep//lib/steep/server/target_group_files.rb#55
  def source_path_target(path); end

  # Returns the value of attribute source_paths.
  #
  # source://steep//lib/steep/server/target_group_files.rb#6
  def source_paths; end

  # source://steep//lib/steep/server/target_group_files.rb#74
  def target_group_for_signature_path(path); end

  # source://steep//lib/steep/server/target_group_files.rb#64
  def target_group_for_source_path(path); end
end

# source://steep//lib/steep/server/type_check_controller.rb#3
class Steep::Server::TypeCheckController
  # @return [TypeCheckController] a new instance of TypeCheckController
  #
  # source://steep//lib/steep/server/type_check_controller.rb#177
  def initialize(project:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_controller.rb#220
  def active_target?(target_group); end

  # Returns the value of attribute changed_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#174
  def changed_paths; end

  # Returns the value of attribute files.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#175
  def files; end

  # @yield [files.dup]
  #
  # source://steep//lib/steep/server/type_check_controller.rb#184
  def load(command_line_args:); end

  # source://steep//lib/steep/server/type_check_controller.rb#257
  def make_group_request(groups, progress:); end

  # source://steep//lib/steep/server/type_check_controller.rb#301
  def make_request(progress:, guid: T.unsafe(nil), include_unchanged: T.unsafe(nil)); end

  # Returns the value of attribute priority_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#173
  def priority_paths; end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#172
  def project; end

  # source://steep//lib/steep/server/type_check_controller.rb#212
  def push_changes(path); end

  # source://steep//lib/steep/server/type_check_controller.rb#228
  def push_changes_for_target(target_group); end

  # source://steep//lib/steep/server/type_check_controller.rb#238
  def update_priority(open: T.unsafe(nil), close: T.unsafe(nil)); end
end

# source://steep//lib/steep/server/type_check_controller.rb#4
class Steep::Server::TypeCheckController::Request
  # @return [Request] a new instance of Request
  #
  # source://steep//lib/steep/server/type_check_controller.rb#16
  def initialize(guid:, progress:); end

  # source://steep//lib/steep/server/type_check_controller.rb#38
  def as_json(assignment:); end

  # source://steep//lib/steep/server/type_check_controller.rb#48
  def assigned_uris(assignment, paths); end

  # source://steep//lib/steep/server/type_check_controller.rb#94
  def checked(path, target); end

  # Returns the value of attribute checked_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#10
  def checked_paths; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_controller.rb#88
  def checking_path?(target_path); end

  # Returns the value of attribute code_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#8
  def code_paths; end

  # source://steep//lib/steep/server/type_check_controller.rb#68
  def each_path(&block); end

  # source://steep//lib/steep/server/type_check_controller.rb#78
  def each_target_path(&block); end

  # source://steep//lib/steep/server/type_check_controller.rb#127
  def each_unchecked_code_target_path(&block); end

  # source://steep//lib/steep/server/type_check_controller.rb#139
  def each_unchecked_library_target_path(&block); end

  # source://steep//lib/steep/server/type_check_controller.rb#105
  def each_unchecked_path(&block); end

  # source://steep//lib/steep/server/type_check_controller.rb#151
  def each_unchecked_signature_target_path(&block); end

  # source://steep//lib/steep/server/type_check_controller.rb#115
  def each_unchecked_target_path(&block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_controller.rb#60
  def empty?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_controller.rb#101
  def finished?; end

  # Returns the value of attribute guid.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#5
  def guid; end

  # Returns the value of attribute library_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#6
  def library_paths; end

  # source://steep//lib/steep/server/type_check_controller.rb#163
  def merge!(request); end

  # Returns the value of attribute needs_response.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#13
  def needs_response; end

  # Sets the attribute needs_response
  #
  # @param value the value to set the attribute needs_response to.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#13
  def needs_response=(_arg0); end

  # source://steep//lib/steep/server/type_check_controller.rb#64
  def percentage; end

  # Returns the value of attribute priority_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#9
  def priority_paths; end

  # Returns the value of attribute report_progress.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#14
  def report_progress; end

  # source://steep//lib/steep/server/type_check_controller.rb#29
  def report_progress!(value = T.unsafe(nil)); end

  # Returns the value of attribute signature_paths.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#7
  def signature_paths; end

  # Returns the value of attribute started_at.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#12
  def started_at; end

  # source://steep//lib/steep/server/type_check_controller.rb#56
  def total; end

  # source://steep//lib/steep/server/type_check_controller.rb#34
  def uri(path); end

  # Returns the value of attribute work_done_progress.
  #
  # source://steep//lib/steep/server/type_check_controller.rb#11
  def work_done_progress; end
end

# source://steep//lib/steep/server/type_check_worker.rb#3
class Steep::Server::TypeCheckWorker < ::Steep::Server::BaseWorker
  include ::Steep::Server::ChangeBuffer

  # @return [TypeCheckWorker] a new instance of TypeCheckWorker
  #
  # source://steep//lib/steep/server/type_check_worker.rb#56
  def initialize(project:, reader:, writer:, assignment:, commandline_args:, io_socket: T.unsafe(nil), buffered_changes: T.unsafe(nil), service: T.unsafe(nil)); end

  # Returns the value of attribute assignment.
  #
  # source://steep//lib/steep/server/type_check_worker.rb#4
  def assignment; end

  # Returns the value of attribute commandline_args.
  #
  # source://steep//lib/steep/server/type_check_worker.rb#5
  def commandline_args; end

  # Returns the value of attribute current_type_check_guid.
  #
  # source://steep//lib/steep/server/type_check_worker.rb#6
  def current_type_check_guid; end

  # source://steep//lib/steep/server/type_check_worker.rb#150
  def enqueue_typecheck_jobs(params); end

  # source://steep//lib/steep/server/type_check_worker.rb#312
  def goto(job); end

  # source://steep//lib/steep/server/type_check_worker.rb#204
  def handle_job(job); end

  # source://steep//lib/steep/server/type_check_worker.rb#82
  def handle_request(request); end

  # Returns the value of attribute io_socket.
  #
  # source://steep//lib/steep/server/type_check_worker.rb#54
  def io_socket; end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/server/type_check_worker.rb#4
  def project; end

  # Returns the value of attribute service.
  #
  # source://steep//lib/steep/server/type_check_worker.rb#78
  def service; end

  # source://steep//lib/steep/server/type_check_worker.rb#298
  def stats_result; end

  # source://steep//lib/steep/server/type_check_worker.rb#264
  def typecheck_progress(guid:, path:, target:, diagnostics:); end

  # source://steep//lib/steep/server/type_check_worker.rb#268
  def workspace_symbol_result(query); end
end

# source://steep//lib/steep/server/type_check_worker.rb#14
class Steep::Server::TypeCheckWorker::GotoJob < ::Struct
  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_worker.rb#43
  def definition?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_worker.rb#39
  def implementation?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/server/type_check_worker.rb#47
  def type_definition?; end

  class << self
    # source://steep//lib/steep/server/type_check_worker.rb#23
    def definition(id:, params:); end

    # source://steep//lib/steep/server/type_check_worker.rb#15
    def implementation(id:, params:); end

    # source://steep//lib/steep/server/type_check_worker.rb#31
    def type_definition(id:, params:); end
  end
end

# source://steep//lib/steep/server/type_check_worker.rb#10
class Steep::Server::TypeCheckWorker::StartTypeCheckJob < ::Struct
  def changes; end
  def changes=(_); end
  def guid; end
  def guid=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/type_check_worker.rb#9
class Steep::Server::TypeCheckWorker::StatsJob < ::Struct
  def id; end
  def id=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/type_check_worker.rb#11
class Steep::Server::TypeCheckWorker::TypeCheckCodeJob < ::Struct
  def guid; end
  def guid=(_); end
  def path; end
  def path=(_); end
  def target; end
  def target=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/type_check_worker.rb#12
class Steep::Server::TypeCheckWorker::ValidateAppSignatureJob < ::Struct
  def guid; end
  def guid=(_); end
  def path; end
  def path=(_); end
  def target; end
  def target=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/type_check_worker.rb#13
class Steep::Server::TypeCheckWorker::ValidateLibrarySignatureJob < ::Struct
  def guid; end
  def guid=(_); end
  def path; end
  def path=(_); end
  def target; end
  def target=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/type_check_worker.rb#8
class Steep::Server::TypeCheckWorker::WorkspaceSymbolJob < ::Struct
  def id; end
  def id=(_); end
  def query; end
  def query=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/server/work_done_progress.rb#3
class Steep::Server::WorkDoneProgress
  # @return [WorkDoneProgress] a new instance of WorkDoneProgress
  #
  # source://steep//lib/steep/server/work_done_progress.rb#6
  def initialize(guid, &block); end

  # source://steep//lib/steep/server/work_done_progress.rb#12
  def begin(title, message = T.unsafe(nil), request_id:); end

  # source://steep//lib/steep/server/work_done_progress.rb#49
  def end(message = T.unsafe(nil)); end

  # Returns the value of attribute guid.
  #
  # source://steep//lib/steep/server/work_done_progress.rb#4
  def guid; end

  # Returns the value of attribute percentage.
  #
  # source://steep//lib/steep/server/work_done_progress.rb#4
  def percentage; end

  # source://steep//lib/steep/server/work_done_progress.rb#34
  def report(percentage, message = T.unsafe(nil)); end

  # Returns the value of attribute sender.
  #
  # source://steep//lib/steep/server/work_done_progress.rb#4
  def sender; end
end

# source://steep//lib/steep/server/worker_process.rb#3
class Steep::Server::WorkerProcess
  # @return [WorkerProcess] a new instance of WorkerProcess
  #
  # source://steep//lib/steep/server/worker_process.rb#13
  def initialize(reader:, writer:, stderr:, wait_thread:, name:, io_socket: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://steep//lib/steep/server/worker_process.rb#156
  def <<(message); end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/server/worker_process.rb#10
  def index; end

  # Returns the value of attribute io_socket.
  #
  # source://steep//lib/steep/server/worker_process.rb#11
  def io_socket; end

  # source://steep//lib/steep/server/worker_process.rb#164
  def kill(force: T.unsafe(nil)); end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/server/worker_process.rb#8
  def name; end

  # source://steep//lib/steep/server/worker_process.rb#182
  def pid; end

  # source://steep//lib/steep/server/worker_process.rb#160
  def read(&block); end

  # Returns the value of attribute reader.
  #
  # source://steep//lib/steep/server/worker_process.rb#4
  def reader; end

  # source://steep//lib/steep/server/worker_process.rb#152
  def redirect_to(worker); end

  # Returns the value of attribute stderr.
  #
  # source://steep//lib/steep/server/worker_process.rb#6
  def stderr; end

  # Returns the value of attribute wait_thread.
  #
  # source://steep//lib/steep/server/worker_process.rb#9
  def wait_thread; end

  # Returns the value of attribute writer.
  #
  # source://steep//lib/steep/server/worker_process.rb#5
  def writer; end

  class << self
    # source://steep//lib/steep/server/worker_process.rb#47
    def fork_worker(type, name:, steepfile:, index:, delay_shutdown:, patterns:, is_primary:); end

    # source://steep//lib/steep/server/worker_process.rb#98
    def spawn_worker(type, name:, steepfile:, steep_command:, index:, delay_shutdown:, patterns:); end

    # source://steep//lib/steep/server/worker_process.rb#138
    def start_typecheck_workers(steepfile:, args:, steep_command:, count: T.unsafe(nil), delay_shutdown: T.unsafe(nil)); end

    # source://steep//lib/steep/server/worker_process.rb#23
    def start_worker(type, name:, steepfile:, steep_command:, index: T.unsafe(nil), delay_shutdown: T.unsafe(nil), patterns: T.unsafe(nil)); end
  end
end

# source://steep//lib/steep/services/content_change.rb#2
module Steep::Services; end

# source://steep//lib/steep/services/completion_provider.rb#3
class Steep::Services::CompletionProvider
  include ::Steep::NodeHelper

  # @return [CompletionProvider] a new instance of CompletionProvider
  #
  # source://steep//lib/steep/services/completion_provider.rb#178
  def initialize(source_text:, path:, subtyping:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/completion_provider.rb#340
  def at_comment?(position); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/completion_provider.rb#334
  def at_end?(pos, of:); end

  # source://steep//lib/steep/services/completion_provider.rb#706
  def constant_items_for_context(context, position:, prefix:, items:, parent: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/completion_provider.rb#795
  def disallowed_method?(name); end

  # source://steep//lib/steep/services/completion_provider.rb#200
  def env; end

  # source://steep//lib/steep/services/completion_provider.rb#780
  def index_for(string, line:, column:); end

  # source://steep//lib/steep/services/completion_provider.rb#730
  def instance_variable_items_for_context(context, position:, prefix:, items:); end

  # source://steep//lib/steep/services/completion_provider.rb#556
  def items_for_atmark(position:); end

  # source://steep//lib/steep/services/completion_provider.rb#531
  def items_for_colon2(position:); end

  # source://steep//lib/steep/services/completion_provider.rb#471
  def items_for_dot(position:); end

  # source://steep//lib/steep/services/completion_provider.rb#588
  def items_for_following_keyword_arguments(text, index:, line:, column:, items:); end

  # source://steep//lib/steep/services/completion_provider.rb#501
  def items_for_qcall(position:); end

  # source://steep//lib/steep/services/completion_provider.rb#570
  def items_for_rbs(position:, buffer:); end

  # source://steep//lib/steep/services/completion_provider.rb#352
  def items_for_trigger(position:); end

  # source://steep//lib/steep/services/completion_provider.rb#739
  def keyword_argument_items_for_method(call_node:, send_node:, position:, prefix:, items:); end

  # source://steep//lib/steep/services/completion_provider.rb#695
  def local_variable_items_for_context(context, position:, prefix:, items:); end

  # source://steep//lib/steep/services/completion_provider.rb#619
  def method_items_for_receiver_type(type, include_private:, prefix:, position:, items:); end

  # Returns the value of attribute modified_text.
  #
  # source://steep//lib/steep/services/completion_provider.rb#174
  def modified_text; end

  # Returns the value of attribute path.
  #
  # source://steep//lib/steep/services/completion_provider.rb#172
  def path; end

  # source://steep//lib/steep/services/completion_provider.rb#344
  def range_for(position, prefix: T.unsafe(nil)); end

  # source://steep//lib/steep/services/completion_provider.rb#327
  def range_from_loc(loc); end

  # source://steep//lib/steep/services/completion_provider.rb#204
  def run(line:, column:); end

  # Returns the value of attribute source.
  #
  # source://steep//lib/steep/services/completion_provider.rb#175
  def source; end

  # Returns the value of attribute source_text.
  #
  # source://steep//lib/steep/services/completion_provider.rb#171
  def source_text; end

  # Returns the value of attribute subtyping.
  #
  # source://steep//lib/steep/services/completion_provider.rb#173
  def subtyping; end

  # source://steep//lib/steep/services/completion_provider.rb#184
  def type_check!(text, line:, column:); end

  # Returns the value of attribute typing.
  #
  # source://steep//lib/steep/services/completion_provider.rb#176
  def typing; end

  # source://steep//lib/steep/services/completion_provider.rb#802
  def unwrap_optional(type); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/completion_provider.rb#691
  def word_name?(name); end
end

# source://steep//lib/steep/services/completion_provider.rb#72
class Steep::Services::CompletionProvider::ComplexMethodNameItem < ::Struct
  # source://steep//lib/steep/services/completion_provider.rb#90
  def defining_method_name(type_name, name, member); end

  def identifier; end
  def identifier=(_); end
  def method_decls; end
  def method_decls=(_); end

  # source://steep//lib/steep/services/completion_provider.rb#79
  def method_definitions; end

  # source://steep//lib/steep/services/completion_provider.rb#75
  def method_names; end

  def method_types; end
  def method_types=(_); end
  def range; end
  def range=(_); end
  def receiver_type; end
  def receiver_type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#18
class Steep::Services::CompletionProvider::ConstantItem < ::Struct
  # source://steep//lib/steep/services/completion_provider.rb#21
  def class?; end

  # source://steep//lib/steep/services/completion_provider.rb#29
  def comments; end

  # source://steep//lib/steep/services/completion_provider.rb#42
  def decl; end

  # source://steep//lib/steep/services/completion_provider.rb#55
  def deprecated?; end

  def env; end
  def env=(_); end
  def full_name; end
  def full_name=(_); end
  def identifier; end
  def identifier=(_); end

  # source://steep//lib/steep/services/completion_provider.rb#25
  def module?; end

  def range; end
  def range=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#108
class Steep::Services::CompletionProvider::GeneratedMethodNameItem < ::Struct
  def identifier; end
  def identifier=(_); end
  def method_types; end
  def method_types=(_); end
  def range; end
  def range=(_); end
  def receiver_type; end
  def receiver_type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#15
class Steep::Services::CompletionProvider::InstanceVariableItem < ::Struct
  def identifier; end
  def identifier=(_); end
  def range; end
  def range=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#16
class Steep::Services::CompletionProvider::KeywordArgumentItem < ::Struct
  def identifier; end
  def identifier=(_); end
  def range; end
  def range=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#17
class Steep::Services::CompletionProvider::LocalVariableItem < ::Struct
  def identifier; end
  def identifier=(_); end
  def range; end
  def range=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#6
class Steep::Services::CompletionProvider::Position < ::Struct
  # source://steep//lib/steep/services/completion_provider.rb#8
  def -(size); end

  def column; end
  def column=(_); end
  def line; end
  def line=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#13
class Steep::Services::CompletionProvider::Range < ::Struct
  def end; end
  def end=(_); end
  def start; end
  def start=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#64
class Steep::Services::CompletionProvider::SimpleMethodNameItem < ::Struct
  # source://steep//lib/steep/services/completion_provider.rb#67
  def comment; end

  def deprecated; end
  def deprecated=(_); end
  def identifier; end
  def identifier=(_); end
  def method_member; end
  def method_member=(_); end
  def method_name; end
  def method_name=(_); end
  def method_types; end
  def method_types=(_); end
  def range; end
  def range=(_); end
  def receiver_type; end
  def receiver_type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/completion_provider.rb#168
class Steep::Services::CompletionProvider::TextItem < ::Struct; end

# source://steep//lib/steep/services/completion_provider.rb#112
class Steep::Services::CompletionProvider::TypeNameItem < ::Struct
  # source://steep//lib/steep/services/completion_provider.rb#133
  def comments; end

  # source://steep//lib/steep/services/completion_provider.rb#113
  def decl; end
end

# source://steep//lib/steep/services/content_change.rb#3
class Steep::Services::ContentChange
  # @return [ContentChange] a new instance of ContentChange
  #
  # source://steep//lib/steep/services/content_change.rb#25
  def initialize(text:, range: T.unsafe(nil)); end

  # source://steep//lib/steep/services/content_change.rb#30
  def ==(other); end

  # source://steep//lib/steep/services/content_change.rb#44
  def apply_to(text); end

  # source://steep//lib/steep/services/content_change.rb#30
  def eql?(other); end

  # source://steep//lib/steep/services/content_change.rb#36
  def hash; end

  # Returns the value of attribute range.
  #
  # source://steep//lib/steep/services/content_change.rb#23
  def range; end

  # Returns the value of attribute text.
  #
  # source://steep//lib/steep/services/content_change.rb#23
  def text; end

  class << self
    # source://steep//lib/steep/services/content_change.rb#40
    def string(string); end
  end
end

# source://steep//lib/steep/services/content_change.rb#4
class Steep::Services::ContentChange::Position
  # @return [Position] a new instance of Position
  #
  # source://steep//lib/steep/services/content_change.rb#7
  def initialize(line:, column:); end

  # source://steep//lib/steep/services/content_change.rb#12
  def ==(other); end

  # Returns the value of attribute column.
  #
  # source://steep//lib/steep/services/content_change.rb#5
  def column; end

  # source://steep//lib/steep/services/content_change.rb#12
  def eql?(other); end

  # source://steep//lib/steep/services/content_change.rb#18
  def hash; end

  # Returns the value of attribute line.
  #
  # source://steep//lib/steep/services/content_change.rb#5
  def line; end
end

# source://steep//lib/steep/services/file_loader.rb#3
class Steep::Services::FileLoader
  # @return [FileLoader] a new instance of FileLoader
  #
  # source://steep//lib/steep/services/file_loader.rb#6
  def initialize(base_dir:); end

  # Returns the value of attribute base_dir.
  #
  # source://steep//lib/steep/services/file_loader.rb#4
  def base_dir; end

  # source://steep//lib/steep/services/file_loader.rb#33
  def each_path_in_patterns(pattern, commandline_patterns = T.unsafe(nil)); end

  # source://steep//lib/steep/services/file_loader.rb#10
  def each_path_in_target(target, command_line_patterns = T.unsafe(nil), &block); end

  # source://steep//lib/steep/services/file_loader.rb#63
  def load_changes(pattern, command_line_patterns = T.unsafe(nil), changes:); end
end

# source://steep//lib/steep/services/goto_service.rb#3
class Steep::Services::GotoService
  include ::Steep::ModuleHelper

  # @return [GotoService] a new instance of GotoService
  #
  # source://steep//lib/steep/services/goto_service.rb#27
  def initialize(type_check:, assignment:); end

  # Returns the value of attribute assignment.
  #
  # source://steep//lib/steep/services/goto_service.rb#25
  def assignment; end

  # source://steep//lib/steep/services/goto_service.rb#301
  def constant_definition_in_rbs(name, locations:); end

  # source://steep//lib/steep/services/goto_service.rb#327
  def constant_definition_in_ruby(name, locations:); end

  # source://steep//lib/steep/services/goto_service.rb#56
  def definition(path:, line:, column:); end

  # source://steep//lib/steep/services/goto_service.rb#129
  def each_type_name(type, &block); end

  # source://steep//lib/steep/services/goto_service.rb#36
  def implementation(path:, line:, column:); end

  # source://steep//lib/steep/services/goto_service.rb#353
  def method_locations(name, in_ruby:, in_rbs:, locations:); end

  # source://steep//lib/steep/services/goto_service.rb#32
  def project; end

  # source://steep//lib/steep/services/goto_service.rb#159
  def query_at(path:, line:, column:); end

  # source://steep//lib/steep/services/goto_service.rb#151
  def test_ast_location(loc, line:, column:); end

  # Returns the value of attribute type_check.
  #
  # source://steep//lib/steep/services/goto_service.rb#25
  def type_check; end

  # source://steep//lib/steep/services/goto_service.rb#286
  def type_check_path(target:, path:, content:, line:, column:); end

  # source://steep//lib/steep/services/goto_service.rb#94
  def type_definition(path:, line:, column:); end

  # source://steep//lib/steep/services/goto_service.rb#415
  def type_name_locations(name, locations: T.unsafe(nil)); end
end

# source://steep//lib/steep/services/goto_service.rb#16
class Steep::Services::GotoService::ConstantQuery < ::Struct
  include ::Steep::Services::GotoService::SourceHelper
end

# source://steep//lib/steep/services/goto_service.rb#19
class Steep::Services::GotoService::MethodQuery < ::Struct
  include ::Steep::Services::GotoService::SourceHelper
end

# source://steep//lib/steep/services/goto_service.rb#6
module Steep::Services::GotoService::SourceHelper
  # @return [Boolean]
  #
  # source://steep//lib/steep/services/goto_service.rb#11
  def from_rbs?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/goto_service.rb#7
  def from_ruby?; end
end

# source://steep//lib/steep/services/goto_service.rb#22
class Steep::Services::GotoService::TypeNameQuery < ::Struct; end

# source://steep//lib/steep/services/hover_provider/singleton_methods.rb#3
module Steep::Services::HoverProvider
  extend ::Steep::Services::HoverProvider::SingletonMethods
end

# source://steep//lib/steep/services/hover_provider/rbs.rb#4
class Steep::Services::HoverProvider::RBS
  # @return [RBS] a new instance of RBS
  #
  # source://steep//lib/steep/services/hover_provider/rbs.rb#11
  def initialize(service:); end

  # source://steep//lib/steep/services/hover_provider/rbs.rb#19
  def content_for(target:, path:, line:, column:); end

  # source://steep//lib/steep/services/hover_provider/rbs.rb#64
  def content_for_type_name(type_name, env:, location:); end

  # source://steep//lib/steep/services/hover_provider/rbs.rb#15
  def project; end

  # Returns the value of attribute service.
  #
  # source://steep//lib/steep/services/hover_provider/rbs.rb#9
  def service; end
end

# source://steep//lib/steep/services/hover_provider/rbs.rb#6
class Steep::Services::HoverProvider::RBS::ClassContent < ::Struct
  def decl; end
  def decl=(_); end
  def location; end
  def location=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/rbs.rb#7
class Steep::Services::HoverProvider::RBS::InterfaceContent < ::Struct
  def decl; end
  def decl=(_); end
  def location; end
  def location=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/rbs.rb#5
class Steep::Services::HoverProvider::RBS::TypeAliasContent < ::Struct
  def decl; end
  def decl=(_); end
  def location; end
  def location=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#4
class Steep::Services::HoverProvider::Ruby
  # @return [Ruby] a new instance of Ruby
  #
  # source://steep//lib/steep/services/hover_provider/ruby.rb#57
  def initialize(service:); end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#113
  def content_for(target:, path:, line:, column:); end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#65
  def method_definition_for(factory, type_name, singleton_method: T.unsafe(nil), instance_method: T.unsafe(nil)); end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#93
  def method_name_from_method(context, builder:); end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#61
  def project; end

  # Returns the value of attribute service.
  #
  # source://steep//lib/steep/services/hover_provider/ruby.rb#55
  def service; end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#82
  def typecheck(target, path:, content:, line:, column:); end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#10
class Steep::Services::HoverProvider::Ruby::ConstantContent < ::Struct
  # source://steep//lib/steep/services/hover_provider/ruby.rb#33
  def class_alias; end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#26
  def class_decl; end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#50
  def class_or_module?; end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#13
  def comments; end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#46
  def constant?; end

  # source://steep//lib/steep/services/hover_provider/ruby.rb#40
  def constant_decl; end

  def decl; end
  def decl=(_); end
  def full_name; end
  def full_name=(_); end
  def location; end
  def location=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#9
class Steep::Services::HoverProvider::Ruby::DefinitionContent < ::Struct
  def definition; end
  def definition=(_); end
  def location; end
  def location=(_); end
  def method_name; end
  def method_name=(_); end
  def method_type; end
  def method_type=(_); end
  def node; end
  def node=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#8
class Steep::Services::HoverProvider::Ruby::MethodCallContent < ::Struct
  def location; end
  def location=(_); end
  def method_call; end
  def method_call=(_); end
  def node; end
  def node=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#7
class Steep::Services::HoverProvider::Ruby::TypeAssertionContent < ::Struct
  def asserted_type; end
  def asserted_type=(_); end
  def location; end
  def location=(_); end
  def node; end
  def node=(_); end
  def original_type; end
  def original_type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#5
class Steep::Services::HoverProvider::Ruby::TypeContent < ::Struct
  def location; end
  def location=(_); end
  def node; end
  def node=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/ruby.rb#6
class Steep::Services::HoverProvider::Ruby::VariableContent < ::Struct
  def location; end
  def location=(_); end
  def name; end
  def name=(_); end
  def node; end
  def node=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/hover_provider/singleton_methods.rb#4
module Steep::Services::HoverProvider::SingletonMethods
  # source://steep//lib/steep/services/hover_provider/singleton_methods.rb#5
  def content_for(service:, path:, line:, column:); end
end

# source://steep//lib/steep/services/path_assignment.rb#3
class Steep::Services::PathAssignment
  # @return [PathAssignment] a new instance of PathAssignment
  #
  # source://steep//lib/steep/services/path_assignment.rb#6
  def initialize(index:, max_index:); end

  # source://steep//lib/steep/services/path_assignment.rb#16
  def ===(target_path); end

  # source://steep//lib/steep/services/path_assignment.rb#16
  def =~(target_path); end

  # source://steep//lib/steep/services/path_assignment.rb#23
  def assign!(path, index); end

  # Returns the value of attribute cache.
  #
  # source://steep//lib/steep/services/path_assignment.rb#4
  def cache; end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/services/path_assignment.rb#4
  def index; end

  # Returns the value of attribute max_index.
  #
  # source://steep//lib/steep/services/path_assignment.rb#4
  def max_index; end

  # source://steep//lib/steep/services/path_assignment.rb#29
  def stringify(target_path); end

  class << self
    # source://steep//lib/steep/services/path_assignment.rb#12
    def all; end

    # source://steep//lib/steep/services/path_assignment.rb#41
    def index_for(key:, max_index:); end
  end
end

# source://steep//lib/steep/services/signature_help_provider.rb#3
class Steep::Services::SignatureHelpProvider
  include ::Steep::NodeHelper

  # @return [SignatureHelpProvider] a new instance of SignatureHelpProvider
  #
  # source://steep//lib/steep/services/signature_help_provider.rb#32
  def initialize(source:, subtyping:); end

  # source://steep//lib/steep/services/signature_help_provider.rb#138
  def active_parameter_for(method_type, argument_nodes, last_argument_nodes, node); end

  # Returns the value of attribute buffer.
  #
  # source://steep//lib/steep/services/signature_help_provider.rb#26
  def buffer; end

  # source://steep//lib/steep/services/signature_help_provider.rb#28
  def env; end

  # source://steep//lib/steep/services/signature_help_provider.rb#83
  def last_argument_nodes_for(argument_nodes:, line:, column:); end

  # Returns the value of attribute path.
  #
  # source://steep//lib/steep/services/signature_help_provider.rb#26
  def path; end

  # source://steep//lib/steep/services/signature_help_provider.rb#38
  def run(line:, column:); end

  # source://steep//lib/steep/services/signature_help_provider.rb#101
  def signature_help_for(node, argument, last_argument, typing); end

  # Returns the value of attribute source.
  #
  # source://steep//lib/steep/services/signature_help_provider.rb#26
  def source; end

  # Returns the value of attribute subtyping.
  #
  # source://steep//lib/steep/services/signature_help_provider.rb#26
  def subtyping; end

  # source://steep//lib/steep/services/signature_help_provider.rb#76
  def type_check!(line:, column:); end

  # Returns the value of attribute typing.
  #
  # source://steep//lib/steep/services/signature_help_provider.rb#26
  def typing; end
end

# source://steep//lib/steep/services/signature_help_provider.rb#6
class Steep::Services::SignatureHelpProvider::Item < ::Struct
  def active_parameter; end
  def active_parameter=(_); end
  def comment; end
  def comment=(_); end
  def method_type; end
  def method_type=(_); end

  # source://steep//lib/steep/services/signature_help_provider.rb#9
  def parameters; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/signature_help_provider.rb#4
Steep::Services::SignatureHelpProvider::MethodCall = Steep::TypeInference::MethodCall

# source://steep//lib/steep/services/signature_service.rb#3
class Steep::Services::SignatureService
  # @return [SignatureService] a new instance of SignatureService
  #
  # source://steep//lib/steep/services/signature_service.rb#83
  def initialize(env:, implicitly_returns_nil:); end

  # source://steep//lib/steep/services/signature_service.rb#384
  def add_descendants(graph:, names:, set:); end

  # source://steep//lib/steep/services/signature_service.rb#403
  def add_nested_decls(env:, names:, set:); end

  # source://steep//lib/steep/services/signature_service.rb#154
  def apply_changes(files, changes); end

  # source://steep//lib/steep/services/signature_service.rb#351
  def const_decls(paths:, env:); end

  # source://steep//lib/steep/services/signature_service.rb#148
  def current_subtyping; end

  # source://steep//lib/steep/services/signature_service.rb#100
  def each_rbs_path(&block); end

  # source://steep//lib/steep/services/signature_service.rb#94
  def env_rbs_paths; end

  # source://steep//lib/steep/services/signature_service.rb#114
  def files; end

  # source://steep//lib/steep/services/signature_service.rb#359
  def global_decls(paths:, env: T.unsafe(nil)); end

  # Returns the value of attribute implicitly_returns_nil.
  #
  # source://steep//lib/steep/services/signature_service.rb#81
  def implicitly_returns_nil; end

  # source://steep//lib/steep/services/signature_service.rb#131
  def latest_builder; end

  # source://steep//lib/steep/services/signature_service.rb#144
  def latest_constant_resolver; end

  # source://steep//lib/steep/services/signature_service.rb#127
  def latest_env; end

  # source://steep//lib/steep/services/signature_service.rb#140
  def latest_rbs_index; end

  # source://steep//lib/steep/services/signature_service.rb#118
  def pending_changed_paths; end

  # source://steep//lib/steep/services/signature_service.rb#306
  def rescue_rbs_error(errors); end

  # Returns the value of attribute status.
  #
  # source://steep//lib/steep/services/signature_service.rb#4
  def status; end

  # source://steep//lib/steep/services/signature_service.rb#367
  def type_name_from_decl(decl, set:); end

  # source://steep//lib/steep/services/signature_service.rb#341
  def type_names(paths:, env:); end

  # source://steep//lib/steep/services/signature_service.rb#184
  def update(changes); end

  # source://steep//lib/steep/services/signature_service.rb#314
  def update_builder(ancestor_builder:, paths:); end

  # source://steep//lib/steep/services/signature_service.rb#235
  def update_env(updated_files, paths:); end

  class << self
    # source://steep//lib/steep/services/signature_service.rb#89
    def load_from(loader, implicitly_returns_nil:); end
  end
end

# source://steep//lib/steep/services/signature_service.rb#28
class Steep::Services::SignatureService::AncestorErrorStatus
  # @return [AncestorErrorStatus] a new instance of AncestorErrorStatus
  #
  # source://steep//lib/steep/services/signature_service.rb#31
  def initialize(files:, changed_paths:, diagnostics:, last_builder:); end

  # Returns the value of attribute changed_paths.
  #
  # source://steep//lib/steep/services/signature_service.rb#29
  def changed_paths; end

  # source://steep//lib/steep/services/signature_service.rb#45
  def constant_resolver; end

  # Returns the value of attribute diagnostics.
  #
  # source://steep//lib/steep/services/signature_service.rb#29
  def diagnostics; end

  # Returns the value of attribute files.
  #
  # source://steep//lib/steep/services/signature_service.rb#29
  def files; end

  # Returns the value of attribute last_builder.
  #
  # source://steep//lib/steep/services/signature_service.rb#29
  def last_builder; end

  # source://steep//lib/steep/services/signature_service.rb#38
  def rbs_index; end
end

# source://steep//lib/steep/services/signature_service.rb#79
class Steep::Services::SignatureService::FileStatus < ::Struct
  def content; end
  def content=(_); end
  def path; end
  def path=(_); end
  def signature; end
  def signature=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/signature_service.rb#50
class Steep::Services::SignatureService::LoadedStatus
  # @return [LoadedStatus] a new instance of LoadedStatus
  #
  # source://steep//lib/steep/services/signature_service.rb#53
  def initialize(files:, builder:, implicitly_returns_nil:); end

  # Returns the value of attribute builder.
  #
  # source://steep//lib/steep/services/signature_service.rb#51
  def builder; end

  # source://steep//lib/steep/services/signature_service.rb#74
  def constant_resolver; end

  # Returns the value of attribute files.
  #
  # source://steep//lib/steep/services/signature_service.rb#51
  def files; end

  # Returns the value of attribute implicitly_returns_nil.
  #
  # source://steep//lib/steep/services/signature_service.rb#51
  def implicitly_returns_nil; end

  # source://steep//lib/steep/services/signature_service.rb#67
  def rbs_index; end

  # source://steep//lib/steep/services/signature_service.rb#59
  def subtyping; end
end

# source://steep//lib/steep/services/signature_service.rb#6
class Steep::Services::SignatureService::SyntaxErrorStatus
  # @return [SyntaxErrorStatus] a new instance of SyntaxErrorStatus
  #
  # source://steep//lib/steep/services/signature_service.rb#9
  def initialize(files:, changed_paths:, diagnostics:, last_builder:); end

  # Returns the value of attribute changed_paths.
  #
  # source://steep//lib/steep/services/signature_service.rb#7
  def changed_paths; end

  # source://steep//lib/steep/services/signature_service.rb#23
  def constant_resolver; end

  # Returns the value of attribute diagnostics.
  #
  # source://steep//lib/steep/services/signature_service.rb#7
  def diagnostics; end

  # Returns the value of attribute files.
  #
  # source://steep//lib/steep/services/signature_service.rb#7
  def files; end

  # Returns the value of attribute last_builder.
  #
  # source://steep//lib/steep/services/signature_service.rb#7
  def last_builder; end

  # source://steep//lib/steep/services/signature_service.rb#16
  def rbs_index; end
end

# source://steep//lib/steep/services/stats_calculator.rb#3
class Steep::Services::StatsCalculator
  # @return [StatsCalculator] a new instance of StatsCalculator
  #
  # source://steep//lib/steep/services/stats_calculator.rb#29
  def initialize(service:); end

  # source://steep//lib/steep/services/stats_calculator.rb#37
  def calc_stats(target, file:); end

  # source://steep//lib/steep/services/stats_calculator.rb#33
  def project; end

  # Returns the value of attribute service.
  #
  # source://steep//lib/steep/services/stats_calculator.rb#27
  def service; end
end

# source://steep//lib/steep/services/stats_calculator.rb#17
class Steep::Services::StatsCalculator::ErrorStats < ::Struct
  # source://steep//lib/steep/services/stats_calculator.rb#18
  def as_json; end
end

# source://steep//lib/steep/services/stats_calculator.rb#4
class Steep::Services::StatsCalculator::SuccessStats < ::Struct
  # source://steep//lib/steep/services/stats_calculator.rb#5
  def as_json; end
end

# source://steep//lib/steep/services/type_check_service.rb#3
class Steep::Services::TypeCheckService
  # @return [TypeCheckService] a new instance of TypeCheckService
  #
  # source://steep//lib/steep/services/type_check_service.rb#79
  def initialize(project:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/type_check_service.rb#382
  def app_signature_file?(path); end

  # source://steep//lib/steep/services/type_check_service.rb#126
  def diagnostics; end

  # source://steep//lib/steep/services/type_check_service.rb#130
  def each_diagnostics(&block); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/type_check_service.rb#122
  def has_diagnostics?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/type_check_service.rb#389
  def lib_signature_file?(path); end

  # Returns the value of attribute project.
  #
  # source://steep//lib/steep/services/type_check_service.rb#4
  def project; end

  # source://steep//lib/steep/services/type_check_service.rb#92
  def signature_diagnostics; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/type_check_service.rb#374
  def signature_file?(path); end

  # Returns the value of attribute signature_services.
  #
  # source://steep//lib/steep/services/type_check_service.rb#7
  def signature_services; end

  # Returns the value of attribute signature_validation_diagnostics.
  #
  # source://steep//lib/steep/services/type_check_service.rb#5
  def signature_validation_diagnostics; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/services/type_check_service.rb#370
  def source_file?(path); end

  # Returns the value of attribute source_files.
  #
  # source://steep//lib/steep/services/type_check_service.rb#6
  def source_files; end

  # source://steep//lib/steep/services/type_check_service.rb#282
  def type_check_file(target:, subtyping:, path:, text:); end

  # source://steep//lib/steep/services/type_check_service.rb#229
  def typecheck_source(path:, target:); end

  # source://steep//lib/steep/services/type_check_service.rb#144
  def update(changes:); end

  # source://steep//lib/steep/services/type_check_service.rb#248
  def update_signature(changes:); end

  # source://steep//lib/steep/services/type_check_service.rb#272
  def update_sources(changes:); end

  # source://steep//lib/steep/services/type_check_service.rb#154
  def validate_signature(path:, target:); end

  class << self
    # source://steep//lib/steep/services/type_check_service.rb#302
    def type_check(source:, subtyping:, constant_resolver:, cursor:); end
  end
end

# source://steep//lib/steep/services/type_check_service.rb#9
class Steep::Services::TypeCheckService::SourceFile
  # @return [SourceFile] a new instance of SourceFile
  #
  # source://steep//lib/steep/services/type_check_service.rb#18
  def initialize(path:, node:, content:, typing:, ignores:, errors:); end

  # Returns the value of attribute content.
  #
  # source://steep//lib/steep/services/type_check_service.rb#12
  def content; end

  # source://steep//lib/steep/services/type_check_service.rb#50
  def diagnostics; end

  # Returns the value of attribute errors.
  #
  # source://steep//lib/steep/services/type_check_service.rb#15
  def errors; end

  # Returns the value of attribute ignores.
  #
  # source://steep//lib/steep/services/type_check_service.rb#16
  def ignores; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/services/type_check_service.rb#13
  def node; end

  # Returns the value of attribute path.
  #
  # source://steep//lib/steep/services/type_check_service.rb#10
  def path; end

  # Returns the value of attribute target.
  #
  # source://steep//lib/steep/services/type_check_service.rb#11
  def target; end

  # Returns the value of attribute typing.
  #
  # source://steep//lib/steep/services/type_check_service.rb#14
  def typing; end

  # source://steep//lib/steep/services/type_check_service.rb#39
  def update_content(content); end

  class << self
    # source://steep//lib/steep/services/type_check_service.rb#35
    def no_data(path:, content:); end

    # source://steep//lib/steep/services/type_check_service.rb#27
    def with_syntax_error(path:, content:, error:); end

    # source://steep//lib/steep/services/type_check_service.rb#31
    def with_typing(path:, content:, typing:, node:, ignores:); end
  end
end

# source://steep//lib/steep/services/type_name_completion.rb#3
class Steep::Services::TypeNameCompletion
  # @return [TypeNameCompletion] a new instance of TypeNameCompletion
  #
  # source://steep//lib/steep/services/type_name_completion.rb#54
  def initialize(env:, context:, dirs:); end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/services/type_name_completion.rb#52
  def context; end

  # source://steep//lib/steep/services/type_name_completion.rb#75
  def each_outer_module(context = T.unsafe(nil), &block); end

  # source://steep//lib/steep/services/type_name_completion.rb#96
  def each_type_name(&block); end

  # source://steep//lib/steep/services/type_name_completion.rb#146
  def each_type_name_under(module_name, normalized_name, table:, &block); end

  # Returns the value of attribute env.
  #
  # source://steep//lib/steep/services/type_name_completion.rb#52
  def env; end

  # source://steep//lib/steep/services/type_name_completion.rb#206
  def find_type_names(prefix); end

  # Returns the value of attribute map.
  #
  # source://steep//lib/steep/services/type_name_completion.rb#52
  def map; end

  # source://steep//lib/steep/services/type_name_completion.rb#180
  def resolve_name_in_context(name); end

  # source://steep//lib/steep/services/type_name_completion.rb#162
  def resolve_used_name(name); end

  # Returns the value of attribute type_name_resolver.
  #
  # source://steep//lib/steep/services/type_name_completion.rb#52
  def type_name_resolver; end
end

# source://steep//lib/steep/services/type_name_completion.rb#4
module Steep::Services::TypeNameCompletion::Prefix
  class << self
    # source://steep//lib/steep/services/type_name_completion.rb#27
    def parse(buffer, line:, column:); end
  end
end

# source://steep//lib/steep/services/type_name_completion.rb#25
class Steep::Services::TypeNameCompletion::Prefix::NamespacePrefix < ::Struct
  def namespace; end
  def namespace=(_); end
  def size; end
  def size=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/type_name_completion.rb#17
class Steep::Services::TypeNameCompletion::Prefix::NamespacedIdentPrefix < ::Struct
  # source://steep//lib/steep/services/type_name_completion.rb#20
  def const_name?; end

  def ident; end
  def ident=(_); end
  def namespace; end
  def namespace=(_); end
  def size; end
  def size=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/services/type_name_completion.rb#5
class Steep::Services::TypeNameCompletion::Prefix::RawIdentPrefix < ::Struct
  # source://steep//lib/steep/services/type_name_completion.rb#8
  def const_name?; end

  def ident; end
  def ident=(_); end

  # source://steep//lib/steep/services/type_name_completion.rb#12
  def size; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/signature/validator.rb#2
module Steep::Signature; end

# source://steep//lib/steep/signature/validator.rb#3
class Steep::Signature::Validator
  # @return [Validator] a new instance of Validator
  #
  # source://steep//lib/steep/signature/validator.rb#10
  def initialize(checker:); end

  # source://steep//lib/steep/signature/validator.rb#182
  def ancestor_to_type(ancestor); end

  # source://steep//lib/steep/signature/validator.rb#47
  def builder; end

  # Returns the value of attribute checker.
  #
  # source://steep//lib/steep/signature/validator.rb#7
  def checker; end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/signature/validator.rb#8
  def context; end

  # source://steep//lib/steep/signature/validator.rb#35
  def each_error(&block); end

  # source://steep//lib/steep/signature/validator.rb#232
  def each_method_type(definition); end

  # source://steep//lib/steep/signature/validator.rb#244
  def each_variable_type(definition); end

  # source://steep//lib/steep/signature/validator.rb#43
  def env; end

  # source://steep//lib/steep/signature/validator.rb#59
  def factory; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/signature/validator.rb#27
  def has_error?; end

  # source://steep//lib/steep/signature/validator.rb#23
  def latest_context; end

  # source://steep//lib/steep/signature/validator.rb#200
  def mixin_constraints(definition, mixin_ancestors, immediate_self_types:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/signature/validator.rb#31
  def no_error?; end

  # source://steep//lib/steep/signature/validator.rb#16
  def push_context(self_type: T.unsafe(nil), class_type: T.unsafe(nil), instance_type: T.unsafe(nil)); end

  # source://steep//lib/steep/signature/validator.rb#696
  def rescue_validation_errors(type_name = T.unsafe(nil)); end

  # source://steep//lib/steep/signature/validator.rb#51
  def type_name_resolver; end

  # source://steep//lib/steep/signature/validator.rb#63
  def validate; end

  # source://steep//lib/steep/signature/validator.rb#690
  def validate_alias; end

  # source://steep//lib/steep/signature/validator.rb#522
  def validate_ancestor_application(name, ancestor); end

  # source://steep//lib/steep/signature/validator.rb#619
  def validate_const; end

  # source://steep//lib/steep/signature/validator.rb#605
  def validate_decl; end

  # source://steep//lib/steep/signature/validator.rb#260
  def validate_definition_type(definition); end

  # source://steep//lib/steep/signature/validator.rb#633
  def validate_global; end

  # source://steep//lib/steep/signature/validator.rb#646
  def validate_one_alias(name, entry = T.unsafe(nil)); end

  # source://steep//lib/steep/signature/validator.rb#511
  def validate_one_class(name); end

  # source://steep//lib/steep/signature/validator.rb#680
  def validate_one_class_alias(name, entry); end

  # source://steep//lib/steep/signature/validator.rb#314
  def validate_one_class_decl(name, entry); end

  # source://steep//lib/steep/signature/validator.rb#625
  def validate_one_constant(name, entry); end

  # source://steep//lib/steep/signature/validator.rb#639
  def validate_one_global(name, entry); end

  # source://steep//lib/steep/signature/validator.rb#562
  def validate_one_interface(name); end

  # source://steep//lib/steep/signature/validator.rb#149
  def validate_type(type); end

  # source://steep//lib/steep/signature/validator.rb#156
  def validate_type_0(type); end

  # source://steep//lib/steep/signature/validator.rb#116
  def validate_type_application(type); end

  # source://steep//lib/steep/signature/validator.rb#72
  def validate_type_application_constraints(type_name, type_params, type_args, location:); end

  # source://steep//lib/steep/signature/validator.rb#176
  def validate_type_name_deprecation(type_name, location); end

  # source://steep//lib/steep/signature/validator.rb#278
  def validate_type_params(type_name, type_params); end

  # source://steep//lib/steep/signature/validator.rb#55
  def validator; end
end

# source://steep//lib/steep/signature/validator.rb#5
Steep::Signature::Validator::Declarations = RBS::AST::Declarations

# source://steep//lib/steep/signature/validator.rb#4
Steep::Signature::Validator::Location = RBS::Location

# source://steep//lib/steep/method_name.rb#13
class Steep::SingletonMethodName < ::Struct
  def method_name; end
  def method_name=(_); end

  # source://steep//lib/steep/method_name.rb#19
  def relative; end

  # source://steep//lib/steep/method_name.rb#15
  def to_s; end

  def type_name; end
  def type_name=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/source.rb#2
class Steep::Source
  extend ::Steep::NodeHelper
  extend ::Steep::ModuleHelper

  # source://steep//lib/steep/source.rb#13
  def initialize(buffer:, path:, node:, mapping:, comments:, ignores:); end

  # source://steep//lib/steep/source.rb#298
  def annotations(block:, factory:, context:); end

  # source://steep//lib/steep/source.rb#3
  def buffer; end

  # source://steep//lib/steep/source.rb#7
  def comments; end

  # source://steep//lib/steep/source.rb#312
  def each_annotation(&block); end

  # source://steep//lib/steep/source.rb#322
  def each_heredoc_node(node = T.unsafe(nil), parents = T.unsafe(nil), &block); end

  # source://steep//lib/steep/source.rb#394
  def find_comment(line:, column:); end

  # source://steep//lib/steep/source.rb#343
  def find_heredoc_nodes(line, column, position); end

  # source://steep//lib/steep/source.rb#376
  def find_nodes(line:, column:); end

  # source://steep//lib/steep/source.rb#358
  def find_nodes_loc(node, position, parents); end

  # source://steep//lib/steep/source.rb#8
  def ignores; end

  # source://steep//lib/steep/source.rb#6
  def mapping; end

  # source://steep//lib/steep/source.rb#5
  def node; end

  # source://steep//lib/steep/source.rb#4
  def path; end

  # source://steep//lib/steep/source.rb#429
  def without_unrelated_defs(line:, column:); end

  class << self
    # source://steep//lib/steep/source.rb#658
    def adjust_location(node); end

    # source://steep//lib/steep/source.rb#674
    def assertion_node(node, type); end

    # source://steep//lib/steep/source.rb#101
    def construct_mapping(node:, annotations:, mapping:, line_range: T.unsafe(nil)); end

    # source://steep//lib/steep/source.rb#408
    def delete_defs(node, allow_list); end

    # source://steep//lib/steep/source.rb#480
    def insert_type_node(node, comments); end

    # source://steep//lib/steep/source.rb#278
    def map_child_node(node, type = T.unsafe(nil), skip: T.unsafe(nil)); end

    # source://steep//lib/steep/source.rb#33
    def new_parser; end

    # source://steep//lib/steep/source.rb#40
    def parse(source_code, path:, factory:); end

    # source://steep//lib/steep/source.rb#632
    def sendish_node?(node); end

    # source://steep//lib/steep/source.rb#454
    def skip_arg_assertions(node); end

    # source://steep//lib/steep/source.rb#679
    def type_application_node(node, tapp); end
  end
end

# source://steep//lib/steep/source.rb#22
class Steep::Source::Builder < ::Parser::Builders::Default
  # source://steep//lib/steep/source.rb#23
  def string_value(token); end
end

# source://steep//lib/steep/source/ignore_ranges.rb#3
class Steep::Source::IgnoreRanges
  # @return [IgnoreRanges] a new instance of IgnoreRanges
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#6
  def initialize(ignores:); end

  # Returns the value of attribute all_ignores.
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#4
  def all_ignores; end

  # Returns the value of attribute error_ignores.
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#4
  def error_ignores; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#43
  def ignore?(start_line, end_line, code); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#59
  def ignore_code?(line, code); end

  # Returns the value of attribute ignored_lines.
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#4
  def ignored_lines; end

  # Returns the value of attribute ignored_ranges.
  #
  # source://steep//lib/steep/source/ignore_ranges.rb#4
  def ignored_ranges; end
end

# source://steep//lib/steep/subtyping/result.rb#2
module Steep::Subtyping; end

# source://steep//lib/steep/subtyping/cache.rb#3
class Steep::Subtyping::Cache
  # @return [Cache] a new instance of Cache
  #
  # source://steep//lib/steep/subtyping/cache.rb#6
  def initialize; end

  # source://steep//lib/steep/subtyping/cache.rb#15
  def [](relation, self_type, instance_type, class_type, bounds); end

  # source://steep//lib/steep/subtyping/cache.rb#20
  def []=(relation, self_type, instance_type, class_type, bounds, value); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/cache.rb#25
  def no_subtype_cache?; end

  # source://steep//lib/steep/subtyping/cache.rb#10
  def subtype(relation, self_type, instance_type, class_type, bounds); end

  # Returns the value of attribute subtypes.
  #
  # source://steep//lib/steep/subtyping/cache.rb#4
  def subtypes; end
end

# source://steep//lib/steep/subtyping/check.rb#3
class Steep::Subtyping::Check
  include ::Steep::Subtyping::Result::Helper

  # @return [Check] a new instance of Check
  #
  # source://steep//lib/steep/subtyping/check.rb#9
  def initialize(builder:); end

  # source://steep//lib/steep/subtyping/check.rb#966
  def Relation(sub, sup); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#223
  def alias?(type); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#629
  def arg_type?(type); end

  # source://steep//lib/steep/subtyping/check.rb#75
  def assumptions; end

  # Returns the value of attribute builder.
  #
  # source://steep//lib/steep/subtyping/check.rb#6
  def builder; end

  # Returns the value of attribute cache.
  #
  # source://steep//lib/steep/subtyping/check.rb#7
  def cache; end

  # source://steep//lib/steep/subtyping/check.rb#213
  def cache_bounds(relation); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#227
  def cacheable?(relation); end

  # source://steep//lib/steep/subtyping/check.rb#179
  def check(relation, constraints:, self_type:, instance_type:, class_type:); end

  # source://steep//lib/steep/subtyping/check.rb#839
  def check_constraints(relation, variables:, variance:); end

  # source://steep//lib/steep/subtyping/check.rb#909
  def check_function(name, relation); end

  # source://steep//lib/steep/subtyping/check.rb#716
  def check_generic_method_type(name, relation); end

  # source://steep//lib/steep/subtyping/check.rb#674
  def check_interface(relation); end

  # source://steep//lib/steep/subtyping/check.rb#696
  def check_method(name, relation); end

  # source://steep//lib/steep/subtyping/check.rb#942
  def check_method_params(name, relation); end

  # source://steep//lib/steep/subtyping/check.rb#856
  def check_method_type(name, relation); end

  # source://steep//lib/steep/subtyping/check.rb#925
  def check_self_type_binding(relation, sub_self, super_self); end

  # source://steep//lib/steep/subtyping/check.rb#185
  def check_type(relation); end

  # source://steep//lib/steep/subtyping/check.rb#251
  def check_type0(relation); end

  # source://steep//lib/steep/subtyping/check.rb#638
  def check_type_arg(relation); end

  # source://steep//lib/steep/subtyping/check.rb#87
  def class_type; end

  # source://steep//lib/steep/subtyping/check.rb#91
  def constraints; end

  # source://steep//lib/steep/subtyping/check.rb#616
  def definition_for_type(type); end

  # source://steep//lib/steep/subtyping/check.rb#95
  def each_ancestor(ancestors, &block); end

  # source://steep//lib/steep/subtyping/check.rb#1089
  def expand_alias(type, &block); end

  # source://steep//lib/steep/subtyping/check.rb#892
  def expand_block_given(name, relation, &block); end

  # source://steep//lib/steep/subtyping/check.rb#15
  def factory; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#240
  def false_type?(type); end

  # Returns the shortest type paths for one of the _unknown_ type variables.
  # Returns nil if there is no path.
  #
  # source://steep//lib/steep/subtyping/check.rb#1095
  def hole_path(type, path = T.unsafe(nil)); end

  # source://steep//lib/steep/subtyping/check.rb#110
  def instance_super_types(type_name, args:); end

  # source://steep//lib/steep/subtyping/check.rb#83
  def instance_type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#970
  def match_method_type_fails?(name, type1, type2); end

  # source://steep//lib/steep/subtyping/check.rb#994
  def match_params(name, relation); end

  # source://steep//lib/steep/subtyping/check.rb#35
  def push_assumption(relation); end

  # source://steep//lib/steep/subtyping/check.rb#42
  def push_variable_bounds(params); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#666
  def same_type?(relation); end

  # source://steep//lib/steep/subtyping/check.rb#79
  def self_type; end

  # source://steep//lib/steep/subtyping/check.rb#148
  def singleton_super_types(type_name); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/check.rb#231
  def true_type?(type); end

  # source://steep//lib/steep/subtyping/check.rb#59
  def variable_upper_bound(name); end

  # source://steep//lib/steep/subtyping/check.rb#69
  def variable_upper_bounds; end

  # source://steep//lib/steep/subtyping/check.rb#19
  def with_context(self_type:, instance_type:, class_type:, constraints:); end
end

# source://steep//lib/steep/subtyping/check.rb#4
Steep::Subtyping::Check::ABORT_LIMIT = T.let(T.unsafe(nil), Integer)

# source://steep//lib/steep/subtyping/constraints.rb#3
class Steep::Subtyping::Constraints
  # @return [Constraints] a new instance of Constraints
  #
  # source://steep//lib/steep/subtyping/constraints.rb#78
  def initialize(unknowns:); end

  # source://steep//lib/steep/subtyping/constraints.rb#104
  def add(var, sub_type: T.unsafe(nil), super_type: T.unsafe(nil), skip: T.unsafe(nil)); end

  # source://steep//lib/steep/subtyping/constraints.rb#91
  def add_var(*vars); end

  # Returns the value of attribute dictionary.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#75
  def dictionary; end

  # source://steep//lib/steep/subtyping/constraints.rb#304
  def each; end

  # source://steep//lib/steep/subtyping/constraints.rb#146
  def eliminate_variable(type, to:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/constraints.rb#199
  def empty?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/constraints.rb#300
  def has_constraint?(var); end

  # source://steep//lib/steep/subtyping/constraints.rb#220
  def lower_bound(var, skip: T.unsafe(nil)); end

  # source://steep//lib/steep/subtyping/constraints.rb#322
  def lower_bound_types(var_name); end

  # source://steep//lib/steep/subtyping/constraints.rb#235
  def solution(checker, variables:, variance: T.unsafe(nil), self_type: T.unsafe(nil), instance_type: T.unsafe(nil), class_type: T.unsafe(nil), context: T.unsafe(nil)); end

  # source://steep//lib/steep/subtyping/constraints.rb#314
  def to_s; end

  # source://steep//lib/steep/subtyping/constraints.rb#193
  def unknown!(var); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/constraints.rb#185
  def unknown?(var); end

  # source://steep//lib/steep/subtyping/constraints.rb#189
  def unknowns; end

  # source://steep//lib/steep/subtyping/constraints.rb#203
  def upper_bound(var, skip: T.unsafe(nil)); end

  # source://steep//lib/steep/subtyping/constraints.rb#327
  def upper_bound_types(var_name); end

  # Returns the value of attribute vars.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#76
  def vars; end

  class << self
    # source://steep//lib/steep/subtyping/constraints.rb#87
    def empty; end
  end
end

# source://steep//lib/steep/subtyping/constraints.rb#233
class Steep::Subtyping::Constraints::Context < ::Struct
  def class_type; end
  def class_type=(_); end
  def instance_type; end
  def instance_type=(_); end
  def self_type; end
  def self_type=(_); end
  def variance; end
  def variance=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/subtyping/constraints.rb#59
class Steep::Subtyping::Constraints::UnsatisfiableConstraint < ::StandardError
  # @return [UnsatisfiableConstraint] a new instance of UnsatisfiableConstraint
  #
  # source://steep//lib/steep/subtyping/constraints.rb#65
  def initialize(var:, sub_type:, super_type:, result:); end

  # Returns the value of attribute result.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#63
  def result; end

  # Returns the value of attribute sub_type.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#61
  def sub_type; end

  # Returns the value of attribute super_type.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#62
  def super_type; end

  # Returns the value of attribute var.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#60
  def var; end
end

# source://steep//lib/steep/subtyping/constraints.rb#4
class Steep::Subtyping::Constraints::UnsatisfiedInvariantError < ::StandardError
  # @return [UnsatisfiedInvariantError] a new instance of UnsatisfiedInvariantError
  #
  # source://steep//lib/steep/subtyping/constraints.rb#8
  def initialize(reason:, constraints:); end

  # Returns the value of attribute constraints.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#5
  def constraints; end

  # Returns the value of attribute reason.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#6
  def reason; end
end

# source://steep//lib/steep/subtyping/constraints.rb#42
class Steep::Subtyping::Constraints::UnsatisfiedInvariantError::UnknownsFreeVariableNotDisjoint
  # @return [UnknownsFreeVariableNotDisjoint] a new instance of UnknownsFreeVariableNotDisjoint
  #
  # source://steep//lib/steep/subtyping/constraints.rb#47
  def initialize(var:, lower_bound:, upper_bound:); end

  # Returns the value of attribute lower_bound.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#45
  def lower_bound; end

  # source://steep//lib/steep/subtyping/constraints.rb#53
  def message; end

  # Returns the value of attribute upper_bound.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#44
  def upper_bound; end

  # Returns the value of attribute var.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#43
  def var; end
end

# source://steep//lib/steep/subtyping/constraints.rb#26
class Steep::Subtyping::Constraints::UnsatisfiedInvariantError::VariablesFreeVariablesNotDisjoint
  # @return [VariablesFreeVariablesNotDisjoint] a new instance of VariablesFreeVariablesNotDisjoint
  #
  # source://steep//lib/steep/subtyping/constraints.rb#31
  def initialize(var:, lower_bound:, upper_bound:); end

  # Returns the value of attribute lower_bound.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#28
  def lower_bound; end

  # source://steep//lib/steep/subtyping/constraints.rb#37
  def message; end

  # Returns the value of attribute upper_bound.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#29
  def upper_bound; end

  # Returns the value of attribute var.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#27
  def var; end
end

# source://steep//lib/steep/subtyping/constraints.rb#14
class Steep::Subtyping::Constraints::UnsatisfiedInvariantError::VariablesUnknownsNotDisjoint
  # @return [VariablesUnknownsNotDisjoint] a new instance of VariablesUnknownsNotDisjoint
  #
  # source://steep//lib/steep/subtyping/constraints.rb#17
  def initialize(vars:); end

  # source://steep//lib/steep/subtyping/constraints.rb#21
  def message; end

  # Returns the value of attribute vars.
  #
  # source://steep//lib/steep/subtyping/constraints.rb#15
  def vars; end
end

# source://steep//lib/steep/subtyping/relation.rb#3
class Steep::Subtyping::Relation
  # @return [Relation] a new instance of Relation
  #
  # source://steep//lib/steep/subtyping/relation.rb#7
  def initialize(sub_type:, super_type:); end

  # source://steep//lib/steep/subtyping/relation.rb#16
  def ==(other); end

  # source://steep//lib/steep/subtyping/relation.rb#56
  def assert_type(type); end

  # source://steep//lib/steep/subtyping/relation.rb#82
  def block!; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/relation.rb#51
  def block?; end

  # source://steep//lib/steep/subtyping/relation.rb#16
  def eql?(other); end

  # source://steep//lib/steep/subtyping/relation.rb#93
  def flip; end

  # source://steep//lib/steep/subtyping/relation.rb#74
  def function!; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/relation.rb#43
  def function?; end

  # source://steep//lib/steep/subtyping/relation.rb#12
  def hash; end

  # source://steep//lib/steep/subtyping/relation.rb#66
  def interface!; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/relation.rb#34
  def interface?; end

  # source://steep//lib/steep/subtyping/relation.rb#86
  def map; end

  # source://steep//lib/steep/subtyping/relation.rb#70
  def method!; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/relation.rb#38
  def method?; end

  # source://steep//lib/steep/subtyping/relation.rb#78
  def params!; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/relation.rb#47
  def params?; end

  # Returns the value of attribute sub_type.
  #
  # source://steep//lib/steep/subtyping/relation.rb#4
  def sub_type; end

  # Returns the value of attribute super_type.
  #
  # source://steep//lib/steep/subtyping/relation.rb#5
  def super_type; end

  # source://steep//lib/steep/subtyping/relation.rb#26
  def to_ary; end

  # source://steep//lib/steep/subtyping/relation.rb#22
  def to_s; end

  # source://steep//lib/steep/subtyping/relation.rb#62
  def type!; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/relation.rb#30
  def type?; end
end

# source://steep//lib/steep/subtyping/result.rb#3
module Steep::Subtyping::Result; end

# source://steep//lib/steep/subtyping/result.rb#74
class Steep::Subtyping::Result::All < ::Steep::Subtyping::Result::Base
  # @return [All] a new instance of All
  #
  # source://steep//lib/steep/subtyping/result.rb#77
  def initialize(relation); end

  # Returns `false` if no future `#add` changes the result.
  #
  # source://steep//lib/steep/subtyping/result.rb#84
  def add(*relations, &block); end

  # source://steep//lib/steep/subtyping/result.rb#101
  def add_result(result); end

  # Returns the value of attribute branches.
  #
  # source://steep//lib/steep/subtyping/result.rb#75
  def branches; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#113
  def failure?; end

  # source://steep//lib/steep/subtyping/result.rb#117
  def failure_path(path = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#109
  def success?; end
end

# source://steep//lib/steep/subtyping/result.rb#126
class Steep::Subtyping::Result::Any < ::Steep::Subtyping::Result::Base
  # @return [Any] a new instance of Any
  #
  # source://steep//lib/steep/subtyping/result.rb#129
  def initialize(relation); end

  # Returns `false` if no future `#add` changes the result.
  #
  # source://steep//lib/steep/subtyping/result.rb#136
  def add(*relations, &block); end

  # Returns the value of attribute branches.
  #
  # source://steep//lib/steep/subtyping/result.rb#127
  def branches; end

  # source://steep//lib/steep/subtyping/result.rb#155
  def failure_path(path = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#151
  def success?; end
end

# source://steep//lib/steep/subtyping/result.rb#4
class Steep::Subtyping::Result::Base
  # @return [Base] a new instance of Base
  #
  # source://steep//lib/steep/subtyping/result.rb#7
  def initialize(relation); end

  # source://steep//lib/steep/subtyping/result.rb#24
  def else; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#11
  def failure?; end

  # source://steep//lib/steep/subtyping/result.rb#33
  def failure_path(path = T.unsafe(nil)); end

  # Returns the value of attribute relation.
  #
  # source://steep//lib/steep/subtyping/result.rb#5
  def relation; end

  # source://steep//lib/steep/subtyping/result.rb#15
  def then; end
end

# source://steep//lib/steep/subtyping/result.rb#52
class Steep::Subtyping::Result::Expand < ::Steep::Subtyping::Result::Base
  # @return [Expand] a new instance of Expand
  #
  # source://steep//lib/steep/subtyping/result.rb#55
  def initialize(relation, &block); end

  # Returns the value of attribute child.
  #
  # source://steep//lib/steep/subtyping/result.rb#53
  def child; end

  # source://steep//lib/steep/subtyping/result.rb#66
  def failure_path(path = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#62
  def success?; end
end

# source://steep//lib/steep/subtyping/result.rb#177
class Steep::Subtyping::Result::Failure < ::Steep::Subtyping::Result::Base
  # @return [Failure] a new instance of Failure
  #
  # source://steep//lib/steep/subtyping/result.rb#280
  def initialize(relation, error); end

  # Returns the value of attribute error.
  #
  # source://steep//lib/steep/subtyping/result.rb#278
  def error; end

  # source://steep//lib/steep/subtyping/result.rb#289
  def failure_path(path = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#285
  def success?; end
end

# source://steep//lib/steep/subtyping/result.rb#190
class Steep::Subtyping::Result::Failure::BlockMismatchError
  # @return [BlockMismatchError] a new instance of BlockMismatchError
  #
  # source://steep//lib/steep/subtyping/result.rb#193
  def initialize(name:); end

  # source://steep//lib/steep/subtyping/result.rb#197
  def message; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/subtyping/result.rb#191
  def name; end
end

# source://steep//lib/steep/subtyping/result.rb#272
class Steep::Subtyping::Result::Failure::LoopAbort
  # source://steep//lib/steep/subtyping/result.rb#273
  def message; end
end

# source://steep//lib/steep/subtyping/result.rb#178
class Steep::Subtyping::Result::Failure::MethodMissingError
  # @return [MethodMissingError] a new instance of MethodMissingError
  #
  # source://steep//lib/steep/subtyping/result.rb#181
  def initialize(name:); end

  # source://steep//lib/steep/subtyping/result.rb#185
  def message; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/subtyping/result.rb#179
  def name; end
end

# source://steep//lib/steep/subtyping/result.rb#202
class Steep::Subtyping::Result::Failure::ParameterMismatchError
  # @return [ParameterMismatchError] a new instance of ParameterMismatchError
  #
  # source://steep//lib/steep/subtyping/result.rb#205
  def initialize(name:); end

  # source://steep//lib/steep/subtyping/result.rb#209
  def message; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/subtyping/result.rb#203
  def name; end
end

# source://steep//lib/steep/subtyping/result.rb#226
class Steep::Subtyping::Result::Failure::PolyMethodSubtyping
  # @return [PolyMethodSubtyping] a new instance of PolyMethodSubtyping
  #
  # source://steep//lib/steep/subtyping/result.rb#229
  def initialize(name:); end

  # source://steep//lib/steep/subtyping/result.rb#233
  def message; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/subtyping/result.rb#227
  def name; end
end

# source://steep//lib/steep/subtyping/result.rb#266
class Steep::Subtyping::Result::Failure::SelfBindingMismatch
  # source://steep//lib/steep/subtyping/result.rb#267
  def message; end
end

# source://steep//lib/steep/subtyping/result.rb#214
class Steep::Subtyping::Result::Failure::UnknownPairError
  # @return [UnknownPairError] a new instance of UnknownPairError
  #
  # source://steep//lib/steep/subtyping/result.rb#217
  def initialize(relation:); end

  # source://steep//lib/steep/subtyping/result.rb#221
  def message; end

  # Returns the value of attribute relation.
  #
  # source://steep//lib/steep/subtyping/result.rb#215
  def relation; end
end

# source://steep//lib/steep/subtyping/result.rb#238
class Steep::Subtyping::Result::Failure::UnsatisfiedConstraints
  # @return [UnsatisfiedConstraints] a new instance of UnsatisfiedConstraints
  #
  # source://steep//lib/steep/subtyping/result.rb#241
  def initialize(error); end

  # Returns the value of attribute error.
  #
  # source://steep//lib/steep/subtyping/result.rb#239
  def error; end

  # source://steep//lib/steep/subtyping/result.rb#261
  def message; end

  # source://steep//lib/steep/subtyping/result.rb#257
  def result; end

  # source://steep//lib/steep/subtyping/result.rb#249
  def sub_type; end

  # source://steep//lib/steep/subtyping/result.rb#253
  def super_type; end

  # source://steep//lib/steep/subtyping/result.rb#245
  def var; end
end

# source://steep//lib/steep/subtyping/result.rb#295
module Steep::Subtyping::Result::Helper
  # source://steep//lib/steep/subtyping/result.rb#304
  def All(relation, &block); end

  # source://steep//lib/steep/subtyping/result.rb#308
  def Any(relation, &block); end

  # source://steep//lib/steep/subtyping/result.rb#300
  def Expand(relation, &block); end

  # source://steep//lib/steep/subtyping/result.rb#318
  def Failure(relation, error = T.unsafe(nil)); end

  # source://steep//lib/steep/subtyping/result.rb#296
  def Skip(relation); end

  # source://steep//lib/steep/subtyping/result.rb#312
  def Success(relation); end

  # source://steep//lib/steep/subtyping/result.rb#312
  def success(relation); end
end

# source://steep//lib/steep/subtyping/result.rb#38
class Steep::Subtyping::Result::Skip < ::Steep::Subtyping::Result::Base
  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#43
  def failure?; end

  # source://steep//lib/steep/subtyping/result.rb#47
  def failure_path(path = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#39
  def success?; end
end

# source://steep//lib/steep/subtyping/result.rb#167
class Steep::Subtyping::Result::Success < ::Steep::Subtyping::Result::Base
  # source://steep//lib/steep/subtyping/result.rb#172
  def failure_path(path = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/result.rb#168
  def success?; end
end

# source://steep//lib/steep/subtyping/variable_variance.rb#3
class Steep::Subtyping::VariableVariance
  # @return [VariableVariance] a new instance of VariableVariance
  #
  # source://steep//lib/steep/subtyping/variable_variance.rb#7
  def initialize(covariants:, contravariants:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/variable_variance.rb#16
  def contravariant?(var); end

  # Returns the value of attribute contravariants.
  #
  # source://steep//lib/steep/subtyping/variable_variance.rb#5
  def contravariants; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/variable_variance.rb#12
  def covariant?(var); end

  # Returns the value of attribute covariants.
  #
  # source://steep//lib/steep/subtyping/variable_variance.rb#4
  def covariants; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/subtyping/variable_variance.rb#20
  def invariant?(var); end

  class << self
    # source://steep//lib/steep/subtyping/variable_variance.rb#48
    def add_params(params, block:, covariants:, contravariants:); end

    # source://steep//lib/steep/subtyping/variable_variance.rb#54
    def add_type(type, variance:, covariants:, contravariants:); end

    # source://steep//lib/steep/subtyping/variable_variance.rb#33
    def from_method_type(method_type); end

    # source://steep//lib/steep/subtyping/variable_variance.rb#24
    def from_type(type); end
  end
end

# source://steep//lib/steep/thread_waiter.rb#2
class Steep::ThreadWaiter
  # @return [ThreadWaiter] a new instance of ThreadWaiter
  #
  # source://steep//lib/steep/thread_waiter.rb#5
  def initialize(objects = T.unsafe(nil)); end

  # source://steep//lib/steep/thread_waiter.rb#17
  def <<(thread); end

  # Returns the value of attribute queue.
  #
  # source://steep//lib/steep/thread_waiter.rb#3
  def queue; end

  # source://steep//lib/steep/thread_waiter.rb#35
  def wait_one; end

  # Returns the value of attribute waiter_threads.
  #
  # source://steep//lib/steep/thread_waiter.rb#3
  def waiter_threads; end
end

# source://steep//lib/steep/type_construction.rb#2
class Steep::TypeConstruction
  include ::Steep::NodeHelper
  include ::Steep::ModuleHelper

  # @return [TypeConstruction] a new instance of TypeConstruction
  #
  # source://steep//lib/steep/type_construction.rb#83
  def initialize(checker:, source:, annotations:, typing:, context:); end

  # source://steep//lib/steep/type_construction.rb#4653
  def absolute_name(name); end

  # source://steep//lib/steep/type_construction.rb#702
  def add_call(call); end

  # source://steep//lib/steep/type_construction.rb#695
  def add_typing(node, type:, constr: T.unsafe(nil)); end

  # Returns the value of attribute annotations.
  #
  # source://steep//lib/steep/type_construction.rb#46
  def annotations; end

  # source://steep//lib/steep/type_construction.rb#3731
  def apply_solution(errors, node:, method_type:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#4982
  def arrayish_type?(type, untyped_is: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#63
  def block_context; end

  # source://steep//lib/steep/type_construction.rb#67
  def block_context!; end

  # source://steep//lib/steep/type_construction.rb#71
  def break_context; end

  # source://steep//lib/steep/type_construction.rb#3513
  def builder_config; end

  # Bypass :splat and :kwsplat
  #
  # source://steep//lib/steep/type_construction.rb#3719
  def bypass_splat(node); end

  # source://steep//lib/steep/type_construction.rb#3522
  def calculate_interface(type, method_name = T.unsafe(nil), private:); end

  # source://steep//lib/steep/type_construction.rb#2702
  def check(node, type, constraints: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#5292
  def check_deprecation_constant(name, node, location); end

  # source://steep//lib/steep/type_construction.rb#5278
  def check_deprecation_global(name, node, location); end

  # source://steep//lib/steep/type_construction.rb#131
  def check_relation(sub_type:, super_type:, constraints: T.unsafe(nil)); end

  # Returns the value of attribute checker.
  #
  # source://steep//lib/steep/type_construction.rb#44
  def checker; end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/type_construction.rb#49
  def context; end

  # source://steep//lib/steep/type_construction.rb#4835
  def deep_expand_alias(type); end

  # source://steep//lib/steep/type_construction.rb#322
  def default_module_context(implement_module_name, nesting:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#3240
  def deprecated_send?(call); end

  # source://steep//lib/steep/type_construction.rb#3752
  def eliminate_vars(type, variables, to: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#4864
  def expand_alias(type, &block); end

  # source://steep//lib/steep/type_construction.rb#3538
  def expand_self(type); end

  # source://steep//lib/steep/type_construction.rb#4792
  def fallback_to_any(node); end

  # source://steep//lib/steep/type_construction.rb#4853
  def flatten_array_elements(type); end

  # source://steep//lib/steep/type_construction.rb#4839
  def flatten_union(type); end

  # source://steep//lib/steep/type_construction.rb#4491
  def for_block(body_node, block_params:, block_param_hint:, block_next_type:, block_block_hint:, block_annotations:, node_type_hint:, block_self_hint:); end

  # source://steep//lib/steep/type_construction.rb#671
  def for_branch(node, break_context: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#474
  def for_class(node, new_class_name, super_class_name); end

  # source://steep//lib/steep/type_construction.rb#355
  def for_module(node, new_module_name); end

  # source://steep//lib/steep/type_construction.rb#152
  def for_new_method(method_name, node, args:, self_type:, definition:); end

  # source://steep//lib/steep/type_construction.rb#585
  def for_sclass(node, type); end

  # source://steep//lib/steep/type_construction.rb#2816
  def gvasgn(node, rhs_type); end

  # source://steep//lib/steep/type_construction.rb#295
  def implement_module(module_name:, annotations:, super_name: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#35
  def inspect; end

  # source://steep//lib/steep/type_construction.rb#5261
  def instance_type(type); end

  # source://steep//lib/steep/type_construction.rb#2798
  def ivasgn(node, rhs_type); end

  # source://steep//lib/steep/type_construction.rb#2772
  def lvasgn(node, type); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#2761
  def masgn_lhs?(lhs); end

  # source://steep//lib/steep/type_construction.rb#576
  def meta_type(type); end

  # source://steep//lib/steep/type_construction.rb#55
  def method_context; end

  # source://steep//lib/steep/type_construction.rb#59
  def method_context!; end

  # source://steep//lib/steep/type_construction.rb#51
  def module_context; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#4802
  def namespace_module?(node); end

  # source://steep//lib/steep/type_construction.rb#4649
  def nesting; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#145
  def no_subtyping?(sub_type:, super_type:, constraints: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#3060
  def optional_proc?(type); end

  # source://steep//lib/steep/type_construction.rb#4848
  def partition_flatten_types(type, &block); end

  # source://steep//lib/steep/type_construction.rb#5207
  def pick_one_of(types); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#3228
  def pure_send?(call, receiver, arguments); end

  # source://steep//lib/steep/type_construction.rb#5222
  def save_typing; end

  # source://steep//lib/steep/type_construction.rb#4843
  def select_flatten_types(type, &block); end

  # source://steep//lib/steep/type_construction.rb#75
  def self_type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_construction.rb#5001
  def semantically_arrayish_type?(type); end

  # source://steep//lib/steep/type_construction.rb#4473
  def set_up_block_mlhs_params_env(node, type, hash, &block); end

  # source://steep//lib/steep/type_construction.rb#5244
  def singleton_type(type); end

  # Returns the value of attribute source.
  #
  # source://steep//lib/steep/type_construction.rb#45
  def source; end

  # source://steep//lib/steep/type_construction.rb#718
  def synthesize(node, hint: T.unsafe(nil), condition: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#4622
  def synthesize_block(node:, block_type_hint:, block_body:); end

  # source://steep//lib/steep/type_construction.rb#3208
  def synthesize_children(node, skips: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#2983
  def synthesize_constant(node, parent_node, constant_name); end

  # source://steep//lib/steep/type_construction.rb#2932
  def synthesize_constant_decl(node, parent_node, constant_name, &block); end

  # source://steep//lib/steep/type_construction.rb#2714
  def synthesize_sendish(node, hint:, tapp:); end

  # source://steep//lib/steep/type_construction.rb#4873
  def test_literal_type(literal, hint); end

  # source://steep//lib/steep/type_construction.rb#4887
  def to_instance_type(type, args: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#5034
  def try_array_type(node, hint); end

  # source://steep//lib/steep/type_construction.rb#4956
  def try_convert(type, method); end

  # source://steep//lib/steep/type_construction.rb#4968
  def try_convert_to_array(type); end

  # source://steep//lib/steep/type_construction.rb#3908
  def try_method_type(node, receiver_type:, method_name:, method_overload:, arguments:, block_params:, block_body:, tapp:, hint:); end

  # source://steep//lib/steep/type_construction.rb#3560
  def try_special_method(node, receiver_type:, method_name:, method_overload:, arguments:, block_params:, block_body:, hint:); end

  # source://steep//lib/steep/type_construction.rb#4922
  def try_tuple_type(array_node, hint); end

  # source://steep//lib/steep/type_construction.rb#4899
  def try_tuple_type!(node, hint: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#4821
  def type_any_rec(node, only_children: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#4418
  def type_block_without_hint(node:, block_annotations:, block_params:, block_body:); end

  # source://steep//lib/steep/type_construction.rb#3779
  def type_check_args(method_name, args, constraints, errors); end

  # source://steep//lib/steep/type_construction.rb#4407
  def type_check_argument(node, type:, constraints:, errors:, report_node: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#3761
  def type_check_untyped_args(arguments); end

  # source://steep//lib/steep/type_construction.rb#5127
  def type_hash(hash_node, hint:); end

  # source://steep//lib/steep/type_construction.rb#5066
  def type_hash_record(hash_node, record_type); end

  # source://steep//lib/steep/type_construction.rb#3072
  def type_lambda(node, params_node:, body_node:, type_hint:); end

  # source://steep//lib/steep/type_construction.rb#2877
  def type_masgn(node); end

  # source://steep//lib/steep/type_construction.rb#2834
  def type_masgn_type(mlhs_node, rhs_type, masgn:, optional:); end

  # source://steep//lib/steep/type_construction.rb#3634
  def type_method_call(node, method_name:, receiver_type:, method:, arguments:, block_params:, block_body:, tapp:, hint:); end

  # source://steep//lib/steep/type_construction.rb#5227
  def type_name(type); end

  # source://steep//lib/steep/type_construction.rb#3411
  def type_send(node, send_node:, block_params:, block_body:, tapp:, hint:, unwrap: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#3252
  def type_send_interface(node, interface:, receiver:, receiver_type:, method_name:, arguments:, block_params:, block_body:, tapp:, hint:); end

  # Returns the value of attribute typing.
  #
  # source://steep//lib/steep/type_construction.rb#47
  def typing; end

  # source://steep//lib/steep/type_construction.rb#4687
  def union_of_tuple_to_tuple_of_union(type); end

  # source://steep//lib/steep/type_construction.rb#4657
  def union_type(*types); end

  # source://steep//lib/steep/type_construction.rb#4662
  def union_type_unify(*types); end

  # source://steep//lib/steep/type_construction.rb#4831
  def unwrap(type); end

  # source://steep//lib/steep/type_construction.rb#123
  def update_context; end

  # source://steep//lib/steep/type_construction.rb#127
  def update_type_env; end

  # source://steep//lib/steep/type_construction.rb#4711
  def validate_method_definitions(node, module_name); end

  # source://steep//lib/steep/type_construction.rb#79
  def variable_context; end

  # source://steep//lib/steep/type_construction.rb#109
  def with(annotations: T.unsafe(nil), context: T.unsafe(nil), typing: T.unsafe(nil)); end

  # source://steep//lib/steep/type_construction.rb#3708
  def with_child_typing; end

  # source://steep//lib/steep/type_construction.rb#558
  def with_class_constr(node, new_class_name, super_class_name); end

  # source://steep//lib/steep/type_construction.rb#288
  def with_method_constr(method_name, node, args:, self_type:, definition:); end

  # source://steep//lib/steep/type_construction.rb#467
  def with_module_constr(node, module_name); end

  # source://steep//lib/steep/type_construction.rb#91
  def with_new_typing(typing); end

  # source://steep//lib/steep/type_construction.rb#566
  def with_sclass_constr(node, type); end

  # source://steep//lib/steep/type_construction.rb#101
  def with_updated_context(type_env: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_construction.rb#3223
Steep::TypeConstruction::KNOWN_PURE_METHODS = T.let(T.unsafe(nil), Set)

# source://steep//lib/steep/type_construction.rb#3
class Steep::TypeConstruction::Pair
  # @return [Pair] a new instance of Pair
  #
  # source://steep//lib/steep/type_construction.rb#7
  def initialize(type:, constr:); end

  # source://steep//lib/steep/type_construction.rb#16
  def +(other); end

  # Returns the value of attribute constr.
  #
  # source://steep//lib/steep/type_construction.rb#5
  def constr; end

  # source://steep//lib/steep/type_construction.rb#24
  def context; end

  # source://steep//lib/steep/type_construction.rb#28
  def to_ary; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_construction.rb#4
  def type; end

  # source://steep//lib/steep/type_construction.rb#12
  def with(type: T.unsafe(nil), constr: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_construction.rb#40
Steep::TypeConstruction::SPECIAL_LVAR_NAMES = T.let(T.unsafe(nil), Set)

# source://steep//lib/steep/type_construction.rb#3546
Steep::TypeConstruction::SPECIAL_METHOD_NAMES = T.let(T.unsafe(nil), Hash)

# source://steep//lib/steep/type_inference/context.rb#2
module Steep::TypeInference; end

# source://steep//lib/steep/type_inference/block_params.rb#3
class Steep::TypeInference::BlockParams
  # @return [BlockParams] a new instance of BlockParams
  #
  # source://steep//lib/steep/type_inference/block_params.rb#95
  def initialize(leading_params:, optional_params:, rest_param:, trailing_params:, block_param:); end

  # Returns the value of attribute block_param.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#93
  def block_param; end

  # source://steep//lib/steep/type_inference/block_params.rb#369
  def each(&block); end

  # source://steep//lib/steep/type_inference/block_params.rb#377
  def each_single_param; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/block_params.rb#356
  def expandable?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/block_params.rb#340
  def expandable_params?(params_type, factory); end

  # Returns the value of attribute leading_params.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#89
  def leading_params; end

  # Returns the value of attribute optional_params.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#90
  def optional_params; end

  # source://steep//lib/steep/type_inference/block_params.rb#103
  def params; end

  # source://steep//lib/steep/type_inference/block_params.rb#169
  def params_type(hint: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/block_params.rb#173
  def params_type0(hint:); end

  # Returns the value of attribute rest_param.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#91
  def rest_param; end

  # Returns the value of attribute trailing_params.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#92
  def trailing_params; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/block_params.rb#410
  def untyped_args?(params); end

  # source://steep//lib/steep/type_inference/block_params.rb#245
  def zip(params_type, block, factory:); end

  class << self
    # source://steep//lib/steep/type_inference/block_params.rb#390
    def from_multiple(node, annotations); end

    # source://steep//lib/steep/type_inference/block_params.rb#113
    def from_node(node, annotations:); end
  end
end

# source://steep//lib/steep/type_inference/block_params.rb#36
class Steep::TypeInference::BlockParams::MultipleParam
  # @return [MultipleParam] a new instance of MultipleParam
  #
  # source://steep//lib/steep/type_inference/block_params.rb#41
  def initialize(node:, params:); end

  # source://steep//lib/steep/type_inference/block_params.rb#46
  def ==(other); end

  # source://steep//lib/steep/type_inference/block_params.rb#65
  def each_param(&block); end

  # source://steep//lib/steep/type_inference/block_params.rb#46
  def eql?(other); end

  # source://steep//lib/steep/type_inference/block_params.rb#54
  def hash; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#37
  def node; end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#39
  def params; end

  # source://steep//lib/steep/type_inference/block_params.rb#80
  def type; end

  # source://steep//lib/steep/type_inference/block_params.rb#58
  def variable_types; end
end

# source://steep//lib/steep/type_inference/block_params.rb#4
class Steep::TypeInference::BlockParams::Param
  # @return [Param] a new instance of Param
  #
  # source://steep//lib/steep/type_inference/block_params.rb#10
  def initialize(var:, type:, value:, node:); end

  # source://steep//lib/steep/type_inference/block_params.rb#17
  def ==(other); end

  # source://steep//lib/steep/type_inference/block_params.rb#27
  def each_param(&block); end

  # source://steep//lib/steep/type_inference/block_params.rb#17
  def eql?(other); end

  # source://steep//lib/steep/type_inference/block_params.rb#23
  def hash; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#8
  def node; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#6
  def type; end

  # Returns the value of attribute value.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#7
  def value; end

  # Returns the value of attribute var.
  #
  # source://steep//lib/steep/type_inference/block_params.rb#5
  def var; end
end

# source://steep//lib/steep/type_inference/case_when.rb#3
class Steep::TypeInference::CaseWhen
  include ::Steep::NodeHelper
  extend ::Steep::NodeHelper

  # @return [CaseWhen] a new instance of CaseWhen
  #
  # source://steep//lib/steep/type_inference/case_when.rb#119
  def initialize(node, logic); end

  # Returns the value of attribute assignment_node.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#117
  def assignment_node; end

  # Returns the value of attribute clause_results.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#116
  def clause_results; end

  # Returns the value of attribute condition_node.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#115
  def condition_node; end

  # source://steep//lib/steep/type_inference/case_when.rb#178
  def else_clause; end

  # Returns the value of attribute else_node.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#115
  def else_node; end

  # Returns the value of attribute else_result.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#116
  def else_result; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/case_when.rb#257
  def has_else_clause?; end

  # Returns the value of attribute initial_constr.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#116
  def initial_constr; end

  # source://steep//lib/steep/type_inference/case_when.rb#211
  def latest_result; end

  # Returns the value of attribute location.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#115
  def location; end

  # Returns the value of attribute logic.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#116
  def logic; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#115
  def node; end

  # source://steep//lib/steep/type_inference/case_when.rb#292
  def propagate_value_node_type(env); end

  # source://steep//lib/steep/type_inference/case_when.rb#222
  def result; end

  # source://steep//lib/steep/type_inference/case_when.rb#265
  def rewrite_condition_node(var_name, node); end

  # source://steep//lib/steep/type_inference/case_when.rb#261
  def typing; end

  # Returns the value of attribute value_node.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#117
  def value_node; end

  # Returns the value of attribute var_name.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#117
  def var_name; end

  # source://steep//lib/steep/type_inference/case_when.rb#142
  def when_clauses; end

  # Returns the value of attribute when_nodes.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#115
  def when_nodes; end

  class << self
    # source://steep//lib/steep/type_inference/case_when.rb#71
    def type_check(constr, node, logic, hint:, condition:); end
  end
end

# source://steep//lib/steep/type_inference/case_when.rb#4
class Steep::TypeInference::CaseWhen::WhenPatterns
  include ::Steep::NodeHelper

  # @return [WhenPatterns] a new instance of WhenPatterns
  #
  # source://steep//lib/steep/type_inference/case_when.rb#9
  def initialize(logic, initial_constr, unreachable_clause, assignment_node); end

  # source://steep//lib/steep/type_inference/case_when.rb#18
  def add_pattern(pat); end

  # source://steep//lib/steep/type_inference/case_when.rb#63
  def assignment_node; end

  # source://steep//lib/steep/type_inference/case_when.rb#40
  def body_result; end

  # source://steep//lib/steep/type_inference/case_when.rb#54
  def falsy_result; end

  # Returns the value of attribute initial_constr.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#7
  def initial_constr; end

  # source://steep//lib/steep/type_inference/case_when.rb#29
  def latest_result; end

  # Returns the value of attribute logic.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#7
  def logic; end

  # Returns the value of attribute pattern_results.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#7
  def pattern_results; end

  # Returns the value of attribute unreachable_clause.
  #
  # source://steep//lib/steep/type_inference/case_when.rb#7
  def unreachable_clause; end
end

# source://steep//lib/steep/type_inference/constant_env.rb#3
class Steep::TypeInference::ConstantEnv
  # @return [ConstantEnv] a new instance of ConstantEnv
  #
  # source://steep//lib/steep/type_inference/constant_env.rb#8
  def initialize(factory:, context:, resolver:); end

  # source://steep//lib/steep/type_inference/constant_env.rb#37
  def children(module_name); end

  # source://steep//lib/steep/type_inference/constant_env.rb#26
  def constants; end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/type_inference/constant_env.rb#4
  def context; end

  # source://steep//lib/steep/type_inference/constant_env.rb#45
  def decompose_constant(constant); end

  # source://steep//lib/steep/type_inference/constant_env.rb#41
  def decompose_constant!(constant); end

  # Returns the value of attribute factory.
  #
  # source://steep//lib/steep/type_inference/constant_env.rb#5
  def factory; end

  # source://steep//lib/steep/type_inference/constant_env.rb#14
  def resolve(name); end

  # source://steep//lib/steep/type_inference/constant_env.rb#31
  def resolve_child(module_name, constant_name); end

  # Returns the value of attribute resolver.
  #
  # source://steep//lib/steep/type_inference/constant_env.rb#6
  def resolver; end

  # source://steep//lib/steep/type_inference/constant_env.rb#20
  def toplevel(name); end
end

# source://steep//lib/steep/type_inference/context.rb#3
class Steep::TypeInference::Context
  # @return [Context] a new instance of Context
  #
  # source://steep//lib/steep/type_inference/context.rb#149
  def initialize(method_context:, block_context:, break_context:, module_context:, self_type:, type_env:, call_context:, variable_context:); end

  # Returns the value of attribute block_context.
  #
  # source://steep//lib/steep/type_inference/context.rb#142
  def block_context; end

  # Returns the value of attribute break_context.
  #
  # source://steep//lib/steep/type_inference/context.rb#143
  def break_context; end

  # Returns the value of attribute call_context.
  #
  # source://steep//lib/steep/type_inference/context.rb#140
  def call_context; end

  # source://steep//lib/steep/type_inference/context.rb#194
  def env; end

  # source://steep//lib/steep/type_inference/context.rb#190
  def factory; end

  # source://steep//lib/steep/type_inference/context.rb#184
  def inspect; end

  # Returns the value of attribute method_context.
  #
  # source://steep//lib/steep/type_inference/context.rb#141
  def method_context; end

  # Returns the value of attribute module_context.
  #
  # source://steep//lib/steep/type_inference/context.rb#144
  def module_context; end

  # Returns the value of attribute self_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#145
  def self_type; end

  # Returns the value of attribute type_env.
  #
  # source://steep//lib/steep/type_inference/context.rb#146
  def type_env; end

  # Returns the value of attribute variable_context.
  #
  # source://steep//lib/steep/type_inference/context.rb#147
  def variable_context; end

  # source://steep//lib/steep/type_inference/context.rb#164
  def with(method_context: T.unsafe(nil), block_context: T.unsafe(nil), break_context: T.unsafe(nil), module_context: T.unsafe(nil), self_type: T.unsafe(nil), type_env: T.unsafe(nil), call_context: T.unsafe(nil), variable_context: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/context.rb#30
class Steep::TypeInference::Context::BlockContext
  # @return [BlockContext] a new instance of BlockContext
  #
  # source://steep//lib/steep/type_inference/context.rb#33
  def initialize(body_type:); end

  # Returns the value of attribute body_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#31
  def body_type; end

  # source://steep//lib/steep/type_inference/context.rb#37
  def subst(s); end
end

# source://steep//lib/steep/type_inference/context.rb#42
class Steep::TypeInference::Context::BreakContext
  # @return [BreakContext] a new instance of BreakContext
  #
  # source://steep//lib/steep/type_inference/context.rb#46
  def initialize(break_type:, next_type:); end

  # Returns the value of attribute break_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#43
  def break_type; end

  # Returns the value of attribute next_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#44
  def next_type; end

  # source://steep//lib/steep/type_inference/context.rb#51
  def subst(s); end
end

# source://steep//lib/steep/type_inference/context.rb#4
class Steep::TypeInference::Context::MethodContext
  # @return [MethodContext] a new instance of MethodContext
  #
  # source://steep//lib/steep/type_inference/context.rb#12
  def initialize(name:, method:, method_type:, return_type:, super_method:, forward_arg_type:); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/context.rb#25
  def attribute_setter?; end

  # source://steep//lib/steep/type_inference/context.rb#21
  def block_type; end

  # Returns the value of attribute forward_arg_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#10
  def forward_arg_type; end

  # Returns the value of attribute method.
  #
  # source://steep//lib/steep/type_inference/context.rb#6
  def method; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#7
  def method_type; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/type_inference/context.rb#5
  def name; end

  # Returns the value of attribute return_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#8
  def return_type; end

  # Returns the value of attribute super_method.
  #
  # source://steep//lib/steep/type_inference/context.rb#9
  def super_method; end
end

# source://steep//lib/steep/type_inference/context.rb#56
class Steep::TypeInference::Context::ModuleContext
  # @return [ModuleContext] a new instance of ModuleContext
  #
  # source://steep//lib/steep/type_inference/context.rb#67
  def initialize(instance_type:, module_type:, implement_name:, class_name:, nesting:, instance_definition: T.unsafe(nil), module_definition: T.unsafe(nil)); end

  # Returns the value of attribute class_name.
  #
  # source://steep//lib/steep/type_inference/context.rb#63
  def class_name; end

  # source://steep//lib/steep/type_inference/context.rb#79
  def class_variables; end

  # Returns the value of attribute defined_instance_methods.
  #
  # source://steep//lib/steep/type_inference/context.rb#59
  def defined_instance_methods; end

  # Returns the value of attribute defined_module_methods.
  #
  # source://steep//lib/steep/type_inference/context.rb#60
  def defined_module_methods; end

  # Returns the value of attribute implement_name.
  #
  # source://steep//lib/steep/type_inference/context.rb#62
  def implement_name; end

  # Returns the value of attribute instance_definition.
  #
  # source://steep//lib/steep/type_inference/context.rb#64
  def instance_definition; end

  # Returns the value of attribute instance_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#57
  def instance_type; end

  # Returns the value of attribute module_definition.
  #
  # source://steep//lib/steep/type_inference/context.rb#65
  def module_definition; end

  # Returns the value of attribute module_type.
  #
  # source://steep//lib/steep/type_inference/context.rb#58
  def module_type; end

  # Returns the value of attribute nesting.
  #
  # source://steep//lib/steep/type_inference/context.rb#61
  def nesting; end

  # source://steep//lib/steep/type_inference/context.rb#87
  def update(instance_type: T.unsafe(nil), module_type: T.unsafe(nil), implement_name: T.unsafe(nil), class_name: T.unsafe(nil), instance_definition: T.unsafe(nil), module_definition: T.unsafe(nil), nesting: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/context.rb#108
class Steep::TypeInference::Context::TypeVariableContext
  # @return [TypeVariableContext] a new instance of TypeVariableContext
  #
  # source://steep//lib/steep/type_inference/context.rb#112
  def initialize(type_params, parent_context: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/context.rb#123
  def [](name); end

  # Returns the value of attribute table.
  #
  # source://steep//lib/steep/type_inference/context.rb#109
  def table; end

  # Returns the value of attribute type_params.
  #
  # source://steep//lib/steep/type_inference/context.rb#110
  def type_params; end

  # source://steep//lib/steep/type_inference/context.rb#127
  def upper_bounds; end

  class << self
    # source://steep//lib/steep/type_inference/context.rb#135
    def empty; end
  end
end

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#3
class Steep::TypeInference::LogicTypeInterpreter
  # @return [LogicTypeInterpreter] a new instance of LogicTypeInterpreter
  #
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#24
  def initialize(subtyping:, typing:, config:); end

  # Returns the value of attribute config.
  #
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#22
  def config; end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#473
  def decompose_value(node); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#56
  def eval(env:, node:); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#221
  def evaluate_assignment(assignment_node, env, rhs_type); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#302
  def evaluate_method_call(env:, type:, receiver:, arguments:); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#60
  def evaluate_node(env:, node:, type: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#431
  def evaluate_union_method_call(node:, type:, env:, receiver:, receiver_type:); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#30
  def factory; end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#34
  def guess_type_from_method(node); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#496
  def literal_var_type_case_select(value_node, arg_type); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#648
  def no_subtyping?(sub_type:, super_type:); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#257
  def refine_node_type(env:, node:, truthy_type:, falsy_type:); end

  # Returns the value of attribute subtyping.
  #
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#20
  def subtyping; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#657
  def subtyping?(sub_type:, super_type:); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#661
  def try_convert(type, method); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#559
  def type_case_select(type, klass); end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#568
  def type_case_select0(type, klass); end

  # Returns the value of attribute typing.
  #
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#21
  def typing; end
end

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#52
Steep::TypeInference::LogicTypeInterpreter::BOOL = T.let(T.unsafe(nil), Steep::AST::Types::Boolean)

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#53
Steep::TypeInference::LogicTypeInterpreter::BOT = T.let(T.unsafe(nil), Steep::AST::Types::Bot)

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#51
Steep::TypeInference::LogicTypeInterpreter::FALSE = T.let(T.unsafe(nil), Steep::AST::Types::Literal)

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#4
class Steep::TypeInference::LogicTypeInterpreter::Result < ::Struct
  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#14
  def unreachable!; end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#5
  def update_env; end

  # source://steep//lib/steep/type_inference/logic_type_interpreter.rb#10
  def update_type; end
end

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#50
Steep::TypeInference::LogicTypeInterpreter::TRUE = T.let(T.unsafe(nil), Steep::AST::Types::Literal)

# source://steep//lib/steep/type_inference/logic_type_interpreter.rb#54
Steep::TypeInference::LogicTypeInterpreter::UNTYPED = T.let(T.unsafe(nil), Steep::AST::Types::Any)

# source://steep//lib/steep/type_inference/method_call.rb#3
module Steep::TypeInference::MethodCall; end

# source://steep//lib/steep/type_inference/method_call.rb#76
class Steep::TypeInference::MethodCall::Base
  # @return [Base] a new instance of Base
  #
  # source://steep//lib/steep/type_inference/method_call.rb#83
  def initialize(node:, context:, method_name:, receiver_type:, return_type:); end

  # source://steep//lib/steep/type_inference/method_call.rb#99
  def ==(other); end

  # Returns the value of attribute context.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#78
  def context; end

  # source://steep//lib/steep/type_inference/method_call.rb#99
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#110
  def hash; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#79
  def method_name; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#77
  def node; end

  # Returns the value of attribute receiver_type.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#81
  def receiver_type; end

  # Returns the value of attribute return_type.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#80
  def return_type; end

  # source://steep//lib/steep/type_inference/method_call.rb#91
  def with_return_type(new_type); end
end

# source://steep//lib/steep/type_inference/method_call.rb#183
class Steep::TypeInference::MethodCall::Error < ::Steep::TypeInference::MethodCall::Base
  # @return [Error] a new instance of Error
  #
  # source://steep//lib/steep/type_inference/method_call.rb#187
  def initialize(node:, context:, method_name:, receiver_type:, errors:, method_decls: T.unsafe(nil), return_type: T.unsafe(nil)); end

  # Returns the value of attribute errors.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#184
  def errors; end

  # Returns the value of attribute method_decls.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#185
  def method_decls; end
end

# source://steep//lib/steep/type_inference/method_call.rb#28
class Steep::TypeInference::MethodCall::MethodContext < ::Struct
  def method_name; end
  def method_name=(_); end

  # source://steep//lib/steep/type_inference/method_call.rb#31
  def to_s; end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/type_inference/method_call.rb#4
class Steep::TypeInference::MethodCall::MethodDecl
  # @return [MethodDecl] a new instance of MethodDecl
  #
  # source://steep//lib/steep/type_inference/method_call.rb#8
  def initialize(method_name:, method_def:); end

  # source://steep//lib/steep/type_inference/method_call.rb#17
  def ==(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#17
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#13
  def hash; end

  # Returns the value of attribute method_def.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#6
  def method_def; end

  # Returns the value of attribute method_name.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#5
  def method_name; end

  # source://steep//lib/steep/type_inference/method_call.rb#23
  def method_type; end
end

# source://steep//lib/steep/type_inference/method_call.rb#36
class Steep::TypeInference::MethodCall::ModuleContext < ::Struct
  # source://steep//lib/steep/type_inference/method_call.rb#39
  def to_s; end

  def type_name; end
  def type_name=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/type_inference/method_call.rb#174
class Steep::TypeInference::MethodCall::NoMethodError < ::Steep::TypeInference::MethodCall::Base
  # @return [NoMethodError] a new instance of NoMethodError
  #
  # source://steep//lib/steep/type_inference/method_call.rb#177
  def initialize(node:, context:, method_name:, receiver_type:, error:); end

  # Returns the value of attribute error.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#175
  def error; end
end

# source://steep//lib/steep/type_inference/method_call.rb#165
class Steep::TypeInference::MethodCall::Special < ::Steep::TypeInference::MethodCall::Typed; end

# source://steep//lib/steep/type_inference/method_call.rb#44
class Steep::TypeInference::MethodCall::TopLevelContext
  # source://steep//lib/steep/type_inference/method_call.rb#49
  def ==(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#49
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#55
  def hash; end

  # source://steep//lib/steep/type_inference/method_call.rb#45
  def to_s; end
end

# source://steep//lib/steep/type_inference/method_call.rb#115
class Steep::TypeInference::MethodCall::Typed < ::Steep::TypeInference::MethodCall::Base
  # @return [Typed] a new instance of Typed
  #
  # source://steep//lib/steep/type_inference/method_call.rb#119
  def initialize(node:, context:, method_name:, receiver_type:, actual_method_type:, method_decls:, return_type:); end

  # source://steep//lib/steep/type_inference/method_call.rb#151
  def ==(other); end

  # Returns the value of attribute actual_method_type.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#116
  def actual_method_type; end

  # source://steep//lib/steep/type_inference/method_call.rb#151
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#160
  def hash; end

  # Returns the value of attribute method_decls.
  #
  # source://steep//lib/steep/type_inference/method_call.rb#117
  def method_decls; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/method_call.rb#125
  def pure?; end

  # source://steep//lib/steep/type_inference/method_call.rb#139
  def update(node: T.unsafe(nil), return_type: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/method_call.rb#60
class Steep::TypeInference::MethodCall::UnknownContext
  # source://steep//lib/steep/type_inference/method_call.rb#65
  def ==(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#65
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_call.rb#71
  def hash; end

  # source://steep//lib/steep/type_inference/method_call.rb#61
  def to_s; end
end

# source://steep//lib/steep/type_inference/method_call.rb#168
class Steep::TypeInference::MethodCall::Untyped < ::Steep::TypeInference::MethodCall::Base
  # @return [Untyped] a new instance of Untyped
  #
  # source://steep//lib/steep/type_inference/method_call.rb#169
  def initialize(node:, context:, method_name:); end
end

# source://steep//lib/steep/type_inference/method_params.rb#3
class Steep::TypeInference::MethodParams
  # @return [MethodParams] a new instance of MethodParams
  #
  # source://steep//lib/steep/type_inference/method_params.rb#148
  def initialize(args:, method_type:, forward_arg_type:); end

  # source://steep//lib/steep/type_inference/method_params.rb#156
  def [](name); end

  # Returns the value of attribute args.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#142
  def args; end

  # source://steep//lib/steep/type_inference/method_params.rb#176
  def each; end

  # source://steep//lib/steep/type_inference/method_params.rb#168
  def each_param(&block); end

  # Returns the value of attribute errors.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#145
  def errors; end

  # Returns the value of attribute forward_arg_type.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#146
  def forward_arg_type; end

  # Returns the value of attribute method_type.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#143
  def method_type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/method_params.rb#160
  def param?(name); end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#144
  def params; end

  # source://steep//lib/steep/type_inference/method_params.rb#164
  def size; end

  # source://steep//lib/steep/type_inference/method_params.rb#186
  def update(forward_arg_type: T.unsafe(nil)); end

  class << self
    # source://steep//lib/steep/type_inference/method_params.rb#228
    def build(node:, method_type:); end

    # source://steep//lib/steep/type_inference/method_params.rb#190
    def empty(node:); end
  end
end

# source://steep//lib/steep/type_inference/method_params.rb#4
class Steep::TypeInference::MethodParams::BaseParameter
  # @return [BaseParameter] a new instance of BaseParameter
  #
  # source://steep//lib/steep/type_inference/method_params.rb#9
  def initialize(name:, type:, node:); end

  # source://steep//lib/steep/type_inference/method_params.rb#39
  def ==(other); end

  # source://steep//lib/steep/type_inference/method_params.rb#39
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_params.rb#49
  def hash; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#5
  def name; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#7
  def node; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/method_params.rb#15
  def optional?; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#6
  def type; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/method_params.rb#35
  def untyped?; end

  # source://steep//lib/steep/type_inference/method_params.rb#24
  def value; end

  # source://steep//lib/steep/type_inference/method_params.rb#31
  def var_type; end
end

# source://steep//lib/steep/type_inference/method_params.rb#57
class Steep::TypeInference::MethodParams::BaseRestParameter
  # @return [BaseRestParameter] a new instance of BaseRestParameter
  #
  # source://steep//lib/steep/type_inference/method_params.rb#62
  def initialize(name:, type:, node:); end

  # source://steep//lib/steep/type_inference/method_params.rb#68
  def ==(other); end

  # source://steep//lib/steep/type_inference/method_params.rb#68
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_params.rb#77
  def hash; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#58
  def name; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#60
  def node; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#59
  def type; end
end

# source://steep//lib/steep/type_inference/method_params.rb#94
class Steep::TypeInference::MethodParams::BlockParameter
  # @return [BlockParameter] a new instance of BlockParameter
  #
  # source://steep//lib/steep/type_inference/method_params.rb#100
  def initialize(name:, type:, node:, optional:, self_type:); end

  # source://steep//lib/steep/type_inference/method_params.rb#126
  def ==(other); end

  # source://steep//lib/steep/type_inference/method_params.rb#126
  def eql?(other); end

  # source://steep//lib/steep/type_inference/method_params.rb#137
  def hash; end

  # Returns the value of attribute name.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#95
  def name; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#97
  def node; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/method_params.rb#108
  def optional?; end

  # Returns the value of attribute self_type.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#98
  def self_type; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/method_params.rb#96
  def type; end

  # source://steep//lib/steep/type_inference/method_params.rb#112
  def var_type; end
end

# source://steep//lib/steep/type_inference/method_params.rb#55
class Steep::TypeInference::MethodParams::KeywordParameter < ::Steep::TypeInference::MethodParams::BaseParameter; end

# source://steep//lib/steep/type_inference/method_params.rb#88
class Steep::TypeInference::MethodParams::KeywordRestParameter < ::Steep::TypeInference::MethodParams::BaseRestParameter
  # source://steep//lib/steep/type_inference/method_params.rb#89
  def var_type; end
end

# source://steep//lib/steep/type_inference/method_params.rb#54
class Steep::TypeInference::MethodParams::PositionalParameter < ::Steep::TypeInference::MethodParams::BaseParameter; end

# source://steep//lib/steep/type_inference/method_params.rb#82
class Steep::TypeInference::MethodParams::PositionalRestParameter < ::Steep::TypeInference::MethodParams::BaseRestParameter
  # source://steep//lib/steep/type_inference/method_params.rb#83
  def var_type; end
end

# source://steep//lib/steep/type_inference/multiple_assignment.rb#3
class Steep::TypeInference::MultipleAssignment
  # source://steep//lib/steep/type_inference/multiple_assignment.rb#20
  def expand(mlhs, rhs_type, optional); end

  # source://steep//lib/steep/type_inference/multiple_assignment.rb#142
  def expand_any(nodes, rhs_type, element_type, optional); end

  # source://steep//lib/steep/type_inference/multiple_assignment.rb#87
  def expand_array(lhss, rhs_type, optional); end

  # source://steep//lib/steep/type_inference/multiple_assignment.rb#35
  def expand_tuple(lhss, rhs_type, tuples, optional); end

  # source://steep//lib/steep/type_inference/multiple_assignment.rb#171
  def hint_for_mlhs(mlhs, env); end
end

# source://steep//lib/steep/type_inference/multiple_assignment.rb#4
class Steep::TypeInference::MultipleAssignment::Assignments < ::Struct
  # source://steep//lib/steep/type_inference/multiple_assignment.rb#7
  def each(&block); end

  def leading_assignments; end
  def leading_assignments=(_); end
  def optional; end
  def optional=(_); end
  def rhs_type; end
  def rhs_type=(_); end
  def splat_assignment; end
  def splat_assignment=(_); end
  def trailing_assignments; end
  def trailing_assignments=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://steep//lib/steep/type_inference/send_args.rb#3
class Steep::TypeInference::SendArgs
  # @return [SendArgs] a new instance of SendArgs
  #
  # source://steep//lib/steep/type_inference/send_args.rb#502
  def initialize(node:, arguments:, type:); end

  # Returns the value of attribute arguments.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#499
  def arguments; end

  # source://steep//lib/steep/type_inference/send_args.rb#520
  def block; end

  # source://steep//lib/steep/type_inference/send_args.rb#567
  def block_pass_arg; end

  # source://steep//lib/steep/type_inference/send_args.rb#573
  def each; end

  # source://steep//lib/steep/type_inference/send_args.rb#556
  def forwarded_args_node; end

  # source://steep//lib/steep/type_inference/send_args.rb#560
  def keyword_args; end

  # source://steep//lib/steep/type_inference/send_args.rb#534
  def keyword_params; end

  # source://steep//lib/steep/type_inference/send_args.rb#539
  def kwargs_node; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#498
  def node; end

  # source://steep//lib/steep/type_inference/send_args.rb#509
  def params; end

  # source://steep//lib/steep/type_inference/send_args.rb#545
  def positional_arg; end

  # source://steep//lib/steep/type_inference/send_args.rb#529
  def positional_params; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#500
  def type; end
end

# source://steep//lib/steep/type_inference/send_args.rb#434
class Steep::TypeInference::SendArgs::BlockPassArg
  include ::Steep::Equatable

  # @return [BlockPassArg] a new instance of BlockPassArg
  #
  # source://steep//lib/steep/type_inference/send_args.rb#438
  def initialize(node:, block:); end

  # Returns the value of attribute block.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#436
  def block; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/send_args.rb#457
  def block_missing?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/send_args.rb#449
  def compatible?; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/send_args.rb#445
  def no_block?; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#435
  def node; end

  # source://steep//lib/steep/type_inference/send_args.rb#476
  def node_type; end

  # source://steep//lib/steep/type_inference/send_args.rb#465
  def pair; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/send_args.rb#461
  def unexpected_block?; end
end

# source://steep//lib/steep/type_inference/send_args.rb#489
class Steep::TypeInference::SendArgs::ForwardedArgs
  # @return [ForwardedArgs] a new instance of ForwardedArgs
  #
  # source://steep//lib/steep/type_inference/send_args.rb#492
  def initialize(node:, params:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#490
  def node; end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#490
  def params; end
end

# source://steep//lib/steep/type_inference/send_args.rb#188
class Steep::TypeInference::SendArgs::KeywordArgs
  # @return [KeywordArgs] a new instance of KeywordArgs
  #
  # source://steep//lib/steep/type_inference/send_args.rb#258
  def initialize(kwarg_nodes:, keyword_params:, index: T.unsafe(nil), consumed_keywords: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/send_args.rb#294
  def all_keys; end

  # source://steep//lib/steep/type_inference/send_args.rb#301
  def all_values; end

  # source://steep//lib/steep/type_inference/send_args.rb#402
  def consume_keys(keys, node:); end

  # Returns the value of attribute consumed_keywords.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#256
  def consumed_keywords; end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#255
  def index; end

  # source://steep//lib/steep/type_inference/send_args.rb#274
  def keyword_pair; end

  # Returns the value of attribute keyword_params.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#254
  def keyword_params; end

  # source://steep//lib/steep/type_inference/send_args.rb#290
  def keyword_type(key); end

  # Returns the value of attribute kwarg_nodes.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#253
  def kwarg_nodes; end

  # source://steep//lib/steep/type_inference/send_args.rb#323
  def next; end

  # source://steep//lib/steep/type_inference/send_args.rb#282
  def optional_keywords; end

  # source://steep//lib/steep/type_inference/send_args.rb#308
  def possible_key_type; end

  # source://steep//lib/steep/type_inference/send_args.rb#316
  def possible_value_type; end

  # source://steep//lib/steep/type_inference/send_args.rb#278
  def required_keywords; end

  # source://steep//lib/steep/type_inference/send_args.rb#286
  def rest_type; end

  # source://steep//lib/steep/type_inference/send_args.rb#265
  def update(index: T.unsafe(nil), consumed_keywords: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/send_args.rb#189
class Steep::TypeInference::SendArgs::KeywordArgs::ArgTypePairs
  include ::Steep::Equatable

  # @return [ArgTypePairs] a new instance of ArgTypePairs
  #
  # source://steep//lib/steep/type_inference/send_args.rb#192
  def initialize(pairs:); end

  # source://steep//lib/steep/type_inference/send_args.rb#198
  def [](index); end

  # Returns the value of attribute pairs.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#190
  def pairs; end

  # source://steep//lib/steep/type_inference/send_args.rb#202
  def size; end
end

# source://steep//lib/steep/type_inference/send_args.rb#243
class Steep::TypeInference::SendArgs::KeywordArgs::MissingKeyword
  include ::Steep::Equatable

  # @return [MissingKeyword] a new instance of MissingKeyword
  #
  # source://steep//lib/steep/type_inference/send_args.rb#248
  def initialize(keywords:); end

  # Returns the value of attribute keywords.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#244
  def keywords; end
end

# source://steep//lib/steep/type_inference/send_args.rb#207
class Steep::TypeInference::SendArgs::KeywordArgs::SplatArg
  include ::Steep::Equatable

  # @return [SplatArg] a new instance of SplatArg
  #
  # source://steep//lib/steep/type_inference/send_args.rb#211
  def initialize(node:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#208
  def node; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#209
  def type; end

  # Sets the attribute type
  #
  # @param value the value to set the attribute type to.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#209
  def type=(_arg0); end
end

# source://steep//lib/steep/type_inference/send_args.rb#219
class Steep::TypeInference::SendArgs::KeywordArgs::UnexpectedKeyword
  include ::Steep::Equatable

  # @return [UnexpectedKeyword] a new instance of UnexpectedKeyword
  #
  # source://steep//lib/steep/type_inference/send_args.rb#225
  def initialize(keyword:, node:); end

  # source://steep//lib/steep/type_inference/send_args.rb#230
  def key_node; end

  # Returns the value of attribute keyword.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#220
  def keyword; end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#221
  def node; end

  # source://steep//lib/steep/type_inference/send_args.rb#236
  def value_node; end
end

# source://steep//lib/steep/type_inference/send_args.rb#4
class Steep::TypeInference::SendArgs::PositionalArgs
  # @return [PositionalArgs] a new instance of PositionalArgs
  #
  # source://steep//lib/steep/type_inference/send_args.rb#79
  def initialize(args:, index:, positional_params:, uniform: T.unsafe(nil)); end

  # Returns the value of attribute args.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#74
  def args; end

  # source://steep//lib/steep/type_inference/send_args.rb#153
  def consume(n, node:); end

  # source://steep//lib/steep/type_inference/send_args.rb#168
  def consume0(n, node:, params:, ps:); end

  # source://steep//lib/steep/type_inference/send_args.rb#90
  def following_args; end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#75
  def index; end

  # source://steep//lib/steep/type_inference/send_args.rb#102
  def next; end

  # source://steep//lib/steep/type_inference/send_args.rb#86
  def node; end

  # source://steep//lib/steep/type_inference/send_args.rb#94
  def param; end

  # Returns the value of attribute positional_params.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#76
  def positional_params; end

  # Returns the value of attribute uniform.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#77
  def uniform; end

  # source://steep//lib/steep/type_inference/send_args.rb#146
  def uniform_type; end

  # source://steep//lib/steep/type_inference/send_args.rb#98
  def update(index: T.unsafe(nil), positional_params: T.unsafe(nil), uniform: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/send_args.rb#64
class Steep::TypeInference::SendArgs::PositionalArgs::MissingArg
  include ::Steep::Equatable

  # @return [MissingArg] a new instance of MissingArg
  #
  # source://steep//lib/steep/type_inference/send_args.rb#67
  def initialize(params:); end

  # Returns the value of attribute params.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#65
  def params; end
end

# source://steep//lib/steep/type_inference/send_args.rb#5
class Steep::TypeInference::SendArgs::PositionalArgs::NodeParamPair
  include ::Steep::Equatable

  # @return [NodeParamPair] a new instance of NodeParamPair
  #
  # source://steep//lib/steep/type_inference/send_args.rb#9
  def initialize(node:, param:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#6
  def node; end

  # Returns the value of attribute param.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#7
  def param; end

  # source://steep//lib/steep/type_inference/send_args.rb#16
  def to_ary; end
end

# source://steep//lib/steep/type_inference/send_args.rb#21
class Steep::TypeInference::SendArgs::PositionalArgs::NodeTypePair
  include ::Steep::Equatable

  # @return [NodeTypePair] a new instance of NodeTypePair
  #
  # source://steep//lib/steep/type_inference/send_args.rb#25
  def initialize(node:, type:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#22
  def node; end

  # source://steep//lib/steep/type_inference/send_args.rb#32
  def node_type; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#23
  def type; end
end

# source://steep//lib/steep/type_inference/send_args.rb#42
class Steep::TypeInference::SendArgs::PositionalArgs::SplatArg
  include ::Steep::Equatable

  # @return [SplatArg] a new instance of SplatArg
  #
  # source://steep//lib/steep/type_inference/send_args.rb#46
  def initialize(node:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#43
  def node; end

  # Returns the value of attribute type.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#44
  def type; end

  # Sets the attribute type
  #
  # @param value the value to set the attribute type to.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#44
  def type=(_arg0); end
end

# source://steep//lib/steep/type_inference/send_args.rb#54
class Steep::TypeInference::SendArgs::PositionalArgs::UnexpectedArg
  include ::Steep::Equatable

  # @return [UnexpectedArg] a new instance of UnexpectedArg
  #
  # source://steep//lib/steep/type_inference/send_args.rb#57
  def initialize(node:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/type_inference/send_args.rb#55
  def node; end
end

# source://steep//lib/steep/type_inference/type_env.rb#3
class Steep::TypeInference::TypeEnv
  include ::Steep::NodeHelper

  # @return [TypeEnv] a new instance of TypeEnv
  #
  # source://steep//lib/steep/type_inference/type_env.rb#42
  def initialize(constant_env, local_variable_types: T.unsafe(nil), instance_variable_types: T.unsafe(nil), global_types: T.unsafe(nil), constant_types: T.unsafe(nil), pure_method_calls: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/type_env.rb#81
  def [](name); end

  # source://steep//lib/steep/type_inference/type_env.rb#260
  def add_pure_call(node, call, type); end

  # source://steep//lib/steep/type_inference/type_env.rb#172
  def annotated_constant(name); end

  # source://steep//lib/steep/type_inference/type_env.rb#129
  def assign_local_variable(name, var_type, enforced_type); end

  # source://steep//lib/steep/type_inference/type_env.rb#110
  def assign_local_variables(assignments); end

  # source://steep//lib/steep/type_inference/type_env.rb#160
  def constant(arg1, arg2); end

  # Returns the value of attribute constant_env.
  #
  # source://steep//lib/steep/type_inference/type_env.rb#8
  def constant_env; end

  # Returns the value of attribute constant_types.
  #
  # source://steep//lib/steep/type_inference/type_env.rb#7
  def constant_types; end

  # source://steep//lib/steep/type_inference/type_env.rb#106
  def enforced_type(name); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/type_env.rb#330
  def global_name?(name); end

  # Returns the value of attribute global_types.
  #
  # source://steep//lib/steep/type_inference/type_env.rb#7
  def global_types; end

  # source://steep//lib/steep/type_inference/type_env.rb#334
  def inspect; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/type_env.rb#326
  def instance_variable_name?(name); end

  # Returns the value of attribute instance_variable_types.
  #
  # source://steep//lib/steep/type_inference/type_env.rb#7
  def instance_variable_types; end

  # source://steep//lib/steep/type_inference/type_env.rb#282
  def invalidate_pure_node(node); end

  # source://steep//lib/steep/type_inference/type_env.rb#299
  def invalidated_pure_nodes(invalidated_node); end

  # source://steep//lib/steep/type_inference/type_env.rb#224
  def join(*envs); end

  # source://steep//lib/steep/type_inference/type_env.rb#322
  def local_variable_name!(name); end

  # @return [Boolean]
  #
  # source://steep//lib/steep/type_inference/type_env.rb#312
  def local_variable_name?(name); end

  # Returns the value of attribute local_variable_types.
  #
  # source://steep//lib/steep/type_inference/type_env.rb#6
  def local_variable_types; end

  # source://steep//lib/steep/type_inference/type_env.rb#64
  def merge(local_variable_types: T.unsafe(nil), instance_variable_types: T.unsafe(nil), global_types: T.unsafe(nil), constant_types: T.unsafe(nil), pure_method_calls: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/type_env.rb#176
  def pin_local_variables(names); end

  # Returns the value of attribute pure_method_calls.
  #
  # source://steep//lib/steep/type_inference/type_env.rb#9
  def pure_method_calls; end

  # source://steep//lib/steep/type_inference/type_env.rb#286
  def pure_node_invalidation(invalidated_nodes); end

  # source://steep//lib/steep/type_inference/type_env.rb#137
  def refine_types(local_variable_types: T.unsafe(nil), pure_call_types: T.unsafe(nil)); end

  # source://steep//lib/steep/type_inference/type_env.rb#272
  def replace_pure_call_type(node, type); end

  # source://steep//lib/steep/type_inference/type_env.rb#210
  def subst(s); end

  # source://steep//lib/steep/type_inference/type_env.rb#11
  def to_s; end

  # source://steep//lib/steep/type_inference/type_env.rb#193
  def unpin_local_variables(names); end

  # source://steep//lib/steep/type_inference/type_env.rb#53
  def update(local_variable_types: T.unsafe(nil), instance_variable_types: T.unsafe(nil), global_types: T.unsafe(nil), constant_types: T.unsafe(nil), pure_method_calls: T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#3
class Steep::TypeInference::TypeEnvBuilder
  # @return [TypeEnvBuilder] a new instance of TypeEnvBuilder
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#127
  def initialize(*commands); end

  # source://steep//lib/steep/type_inference/type_env_builder.rb#131
  def build(type_env); end

  # Returns the value of attribute commands.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#125
  def commands; end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#4
module Steep::TypeInference::TypeEnvBuilder::Command; end

# source://steep//lib/steep/type_inference/type_env_builder.rb#5
class Steep::TypeInference::TypeEnvBuilder::Command::AnnotationsBase
  # @return [AnnotationsBase] a new instance of AnnotationsBase
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#8
  def initialize(annotations); end

  # Returns the value of attribute annotations.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#6
  def annotations; end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#114
class Steep::TypeInference::TypeEnvBuilder::Command::ImportConstantAnnotations < ::Steep::TypeInference::TypeEnvBuilder::Command::AnnotationsBase
  # source://steep//lib/steep/type_inference/type_env_builder.rb#115
  def call(env); end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#83
class Steep::TypeInference::TypeEnvBuilder::Command::ImportGlobalDeclarations < ::Steep::TypeInference::TypeEnvBuilder::Command::RBSBase
  # source://steep//lib/steep/type_inference/type_env_builder.rb#84
  def call(env); end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#64
class Steep::TypeInference::TypeEnvBuilder::Command::ImportInstanceVariableAnnotations < ::Steep::TypeInference::TypeEnvBuilder::Command::AnnotationsBase
  # source://steep//lib/steep/type_inference/type_env_builder.rb#65
  def call(env); end

  # source://steep//lib/steep/type_inference/type_env_builder.rb#77
  def merge!(merge = T.unsafe(nil)); end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#93
class Steep::TypeInference::TypeEnvBuilder::Command::ImportInstanceVariableDefinition
  # @return [ImportInstanceVariableDefinition] a new instance of ImportInstanceVariableDefinition
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#98
  def initialize(definition, factory); end

  # source://steep//lib/steep/type_inference/type_env_builder.rb#103
  def call(env); end

  # Returns the value of attribute definition.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#94
  def definition; end

  # Returns the value of attribute factory.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#96
  def factory; end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#24
class Steep::TypeInference::TypeEnvBuilder::Command::ImportLocalVariableAnnotations < ::Steep::TypeInference::TypeEnvBuilder::Command::AnnotationsBase
  # @return [ImportLocalVariableAnnotations] a new instance of ImportLocalVariableAnnotations
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#27
  def initialize(annotations); end

  # source://steep//lib/steep/type_inference/type_env_builder.rb#43
  def call(env); end

  # source://steep//lib/steep/type_inference/type_env_builder.rb#33
  def merge!(merge = T.unsafe(nil)); end

  # Returns the value of attribute on_duplicate.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#25
  def on_duplicate; end

  # source://steep//lib/steep/type_inference/type_env_builder.rb#38
  def on_duplicate!(&block); end
end

# source://steep//lib/steep/type_inference/type_env_builder.rb#13
class Steep::TypeInference::TypeEnvBuilder::Command::RBSBase
  # @return [RBSBase] a new instance of RBSBase
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#18
  def initialize(factory); end

  # Returns the value of attribute environment.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#16
  def environment; end

  # Returns the value of attribute factory.
  #
  # source://steep//lib/steep/type_inference/type_env_builder.rb#14
  def factory; end
end

# source://steep//lib/steep/typing.rb#2
class Steep::Typing
  # @return [Typing] a new instance of Typing
  #
  # source://steep//lib/steep/typing.rb#168
  def initialize(source:, root_context:, cursor:, parent: T.unsafe(nil), parent_last_update: T.unsafe(nil), source_index: T.unsafe(nil)); end

  # source://steep//lib/steep/typing.rb#200
  def add_call(node, call); end

  # source://steep//lib/steep/typing.rb#189
  def add_error(error); end

  # source://steep//lib/steep/typing.rb#193
  def add_typing(node, type, _context); end

  # source://steep//lib/steep/typing.rb#240
  def block_range(node); end

  # source://steep//lib/steep/typing.rb#226
  def call_of(node:); end

  # Returns the value of attribute contexts.
  #
  # source://steep//lib/steep/typing.rb#162
  def contexts; end

  # Returns the value of attribute cursor_context.
  #
  # source://steep//lib/steep/typing.rb#166
  def cursor_context; end

  # source://steep//lib/steep/typing.rb#259
  def dump(io); end

  # source://steep//lib/steep/typing.rb#298
  def each_typing(&block); end

  # Returns the value of attribute errors.
  #
  # source://steep//lib/steep/typing.rb#156
  def errors; end

  # @return [Boolean]
  #
  # source://steep//lib/steep/typing.rb#206
  def has_type?(node); end

  # Returns the value of attribute last_update.
  #
  # source://steep//lib/steep/typing.rb#160
  def last_update; end

  # Returns the value of attribute method_calls.
  #
  # source://steep//lib/steep/typing.rb#164
  def method_calls; end

  # source://steep//lib/steep/typing.rb#281
  def new_child; end

  # Returns the value of attribute parent.
  #
  # source://steep//lib/steep/typing.rb#158
  def parent; end

  # Returns the value of attribute parent_last_update.
  #
  # source://steep//lib/steep/typing.rb#159
  def parent_last_update; end

  # Returns the value of attribute root_context.
  #
  # source://steep//lib/steep/typing.rb#163
  def root_context; end

  # source://steep//lib/steep/typing.rb#302
  def save!; end

  # Returns the value of attribute should_update.
  #
  # source://steep//lib/steep/typing.rb#161
  def should_update; end

  # Returns the value of attribute source.
  #
  # source://steep//lib/steep/typing.rb#155
  def source; end

  # Returns the value of attribute source_index.
  #
  # source://steep//lib/steep/typing.rb#165
  def source_index; end

  # source://steep//lib/steep/typing.rb#210
  def type_of(node:); end

  # Returns the value of attribute typing.
  #
  # source://steep//lib/steep/typing.rb#157
  def typing; end

  class << self
    # source://steep//lib/steep/typing.rb#273
    def summary(node); end
  end
end

# source://steep//lib/steep/typing.rb#14
class Steep::Typing::CursorContext
  # @return [CursorContext] a new instance of CursorContext
  #
  # source://steep//lib/steep/typing.rb#19
  def initialize(index); end

  # source://steep//lib/steep/typing.rb#125
  def block_range(node); end

  # source://steep//lib/steep/typing.rb#149
  def context; end

  # Returns the value of attribute data.
  #
  # source://steep//lib/steep/typing.rb#17
  def data; end

  # Returns the value of attribute index.
  #
  # source://steep//lib/steep/typing.rb#15
  def index; end

  # source://steep//lib/steep/typing.rb#144
  def range; end

  # source://steep//lib/steep/typing.rb#23
  def set(range, context = T.unsafe(nil)); end

  # source://steep//lib/steep/typing.rb#51
  def set_body_context(node, context); end

  # source://steep//lib/steep/typing.rb#44
  def set_node_context(node, context); end
end

# source://steep//lib/steep/typing.rb#3
class Steep::Typing::UnknownNodeError < ::StandardError
  # @return [UnknownNodeError] a new instance of UnknownNodeError
  #
  # source://steep//lib/steep/typing.rb#7
  def initialize(op, node:); end

  # Returns the value of attribute node.
  #
  # source://steep//lib/steep/typing.rb#5
  def node; end

  # Returns the value of attribute op.
  #
  # source://steep//lib/steep/typing.rb#4
  def op; end
end

# source://steep//lib/steep/version.rb#2
Steep::VERSION = T.let(T.unsafe(nil), String)
